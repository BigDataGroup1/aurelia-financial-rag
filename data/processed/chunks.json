[
  {
    "chunk_id": "md_chunk_0000",
    "content": "User's Guide",
    "section_title": "Financial Toolbox\u2122",
    "section_hierarchy": [
      "Financial Toolbox\u2122"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 12,
      "word_count": 2,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0001",
    "content": "<!-- Page 2 -->",
    "section_title": "R2025b",
    "section_hierarchy": [
      "R2025b"
    ],
    "page_numbers": [
      2
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 15,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0002",
    "content": "```\nLatest news:\nwww.mathworks.com\n```\n\n```\nSales and services:\nwww.mathworks.com/sales_and_services\n```\n\n```\nUser community:\nwww.mathworks.com/matlabcentral\n```\n\n```\nTechnical support:\nwww.mathworks.com/support/contact_us\n```",
    "section_title": "How to Contact MathWorks",
    "section_hierarchy": [
      "How to Contact MathWorks"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 226,
      "word_count": 21,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0003",
    "content": "```\nTechnical support:\nwww.mathworks.com/support/contact_us\n```\n\nPhone:\n508-647-7000",
    "section_title": "How to Contact MathWorks",
    "section_hierarchy": [
      "How to Contact MathWorks"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 84,
      "word_count": 7,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0004",
    "content": "Phone:\n508-647-7000\n\nThe MathWorks, Inc.\n1 Apple Hill Drive\nNatick, MA 01760-2098",
    "section_title": "How to Contact MathWorks",
    "section_hierarchy": [
      "How to Contact MathWorks"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 81,
      "word_count": 12,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0005",
    "content": "The MathWorks, Inc.\n1 Apple Hill Drive\nNatick, MA 01760-2098\n\n*Financial Toolbox\u2122 User's Guide*",
    "section_title": "How to Contact MathWorks",
    "section_hierarchy": [
      "How to Contact MathWorks"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 95,
      "word_count": 14,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0006",
    "content": "*Financial Toolbox\u2122 User's Guide*\n\n\u00a9 COPYRIGHT 1995\u20132025 by The MathWorks, Inc.\n\nThe software described in this document is furnished under a license agreement. The software may be used or copied\nonly under the terms of the license agreement. No part of this manual may be photocopied or reproduced in any form\nwithout prior written consent from The MathWorks, Inc.",
    "section_title": "How to Contact MathWorks",
    "section_hierarchy": [
      "How to Contact MathWorks"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 365,
      "word_count": 59,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0007",
    "content": "The software described in this document is furnished under a license agreement. The software may be used or copied\nonly under the terms of the license agreement. No part of this manual may be photocopied or reproduced in any form\nwithout prior written consent from The MathWorks, Inc.\n\nFEDERAL ACQUISITION: This provision applies to all acquisitions of the Program and Documentation by, for, or through\nthe federal government of the United States. By accepting delivery of the Program or Documentation, the government\nhereby agrees that this software or documentation qualifies as commercial computer software or commercial computer\nsoftware documentation as such terms are used or defined in FAR 12.212, DFARS Part 227.72, and DFARS 252.227-7014.\nAccordingly, the terms and conditions of this Agreement and only those rights specified in this Agreement, shall pertain\nto and govern the use, modification, reproduction, release, performance, display, and disclosure of the Program and\nDocumentation by the federal government (or other entity acquiring for or through the federal government) and shall\nsupersede any conflicting contractual terms or conditions. If this License fails to meet the government's needs or is\ninconsistent in any respect with federal procurement law, the government agrees to return the Program and\nDocumentation, unused, to The MathWorks, Inc.",
    "section_title": "How to Contact MathWorks",
    "section_hierarchy": [
      "How to Contact MathWorks"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1370,
      "word_count": 206,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0008",
    "content": "FEDERAL ACQUISITION: This provision applies to all acquisitions of the Program and Documentation by, for, or through\nthe federal government of the United States. By accepting delivery of the Program or Documentation, the government\nhereby agrees that this software or documentation qualifies as commercial computer software or commercial computer\nsoftware documentation as such terms are used or defined in FAR 12.212, DFARS Part 227.72, and DFARS 252.227-7014.\nAccordingly, the terms and conditions of this Agreement and only those rights specified in this Agreement, shall pertain\nto and govern the use, modification, reproduction, release, performance, display, and disclosure of the Program and\nDocumentation by the federal government (or other entity acquiring for or through the federal government) and shall\nsupersede any conflicting contractual terms or conditions. If this License fails to meet the government's needs or is\ninconsistent in any respect with federal procurement law, the government agrees to return the Program and\nDocumentation, unused, to The MathWorks, Inc.\n\n**Trademarks**",
    "section_title": "How to Contact MathWorks",
    "section_hierarchy": [
      "How to Contact MathWorks"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1100,
      "word_count": 159,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0009",
    "content": "**Trademarks**\n\n```\nMATLAB and Simulink are registered trademarks of The MathWorks, Inc. See\nwww.mathworks.com/trademarks for a list of additional trademarks. Other product or brand names may be\ntrademarks or registered trademarks of their respective holders.\n```",
    "section_title": "How to Contact MathWorks",
    "section_hierarchy": [
      "How to Contact MathWorks"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 263,
      "word_count": 36,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0010",
    "content": "```\nMATLAB and Simulink are registered trademarks of The MathWorks, Inc. See\nwww.mathworks.com/trademarks for a list of additional trademarks. Other product or brand names may be\ntrademarks or registered trademarks of their respective holders.\n```\n\n**Patents**\n\n```\nMathWorks products are protected by one or more U.S. patents. Please see www.mathworks.com/patents for\nmore information.\n```",
    "section_title": "How to Contact MathWorks",
    "section_hierarchy": [
      "How to Contact MathWorks"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 390,
      "word_count": 54,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0011",
    "content": "```\nMathWorks products are protected by one or more U.S. patents. Please see www.mathworks.com/patents for\nmore information.\n```\n\n<!-- Page 3 -->",
    "section_title": "How to Contact MathWorks",
    "section_hierarchy": [
      "How to Contact MathWorks"
    ],
    "page_numbers": [
      3
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 145,
      "word_count": 22,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0012",
    "content": "<!-- Page 3 -->\n\n**Revision History**",
    "section_title": "How to Contact MathWorks",
    "section_hierarchy": [
      "How to Contact MathWorks"
    ],
    "page_numbers": [
      3
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 37,
      "word_count": 6,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0013",
    "content": "**Revision History**\n\nOctober 1995\nFirst printing\nJanuary 1998\nSecond printing\nRevised for Version 1.1\nJanuary 1999\nThird printing\nRevised for Version 2.0 (Release 11)\nNovember 2000\nFourth printing\nRevised for Version 2.1.2 (Release 12)\nMay 2003\nOnline only\nRevised for Version 2.3 (Release 13)\nJune 2004\nOnline only\nRevised for Version 2.4 (Release 14)\nAugust 2004\nOnline only\nRevised for Version 2.4.1 (Release 14+)\nSeptember 2005\nFifth printing\nRevised for Version 2.5 (Release 14SP3)\nMarch 2006\nOnline only\nRevised for Version 3.0 (Release 2006a)\nSeptember 2006\nSixth printing\nRevised for Version 3.1 (Release 2006b)\nMarch 2007\nOnline only\nRevised for Version 3.2 (Release 2007a)\nSeptember 2007\nOnline only\nRevised for Version 3.3 (Release 2007b)\nMarch 2008\nOnline only\nRevised for Version 3.4 (Release 2008a)\nOctober 2008\nOnline only\nRevised for Version 3.5 (Release 2008b)\nMarch 2009\nOnline only\nRevised for Version 3.6 (Release 2009a)\nSeptember 2009\nOnline only\nRevised for Version 3.7 (Release 2009b)\nMarch 2010\nOnline only\nRevised for Version 3.7.1 (Release 2010a)\nSeptember 2010\nOnline only\nRevised for Version 3.8 (Release 2010b)\nApril 2011\nOnline only\nRevised for Version 4.0 (Release 2011a)\nSeptember 2011\nOnline only\nRevised for Version 4.1 (Release 2011b)\nMarch 2012\nOnline only\nRevised for Version 4.2 (Release 2012a)\nSeptember 2012\nOnline only\nRevised for Version 5.0 (Release 2012b)\nMarch 2013\nOnline only\nRevised for Version 5.1 (Release 2013a)\nSeptember 2013\nOnline only\nRevised for Version 5.2 (Release 2013b)\nMarch 2014\nOnline only\nRevised for Version 5.3 (Release 2014a)\nOctober 2014\nOnline only\nRevised for Version 5.4 (Release 2014b)\nMarch 2015\nOnline only\nRevised for Version 5.5 (Release 2015a)\nSeptember 2015\nOnline only\nRevised for Version 5.6 (Release 2015b)\nMarch 2016\nOnline only\nRevised for Version 5.7 (Release 2016a)\nSeptember 2016\nOnline only\nRevised for Version 5.8 (Release 2016b)\nMarch 2017\nOnline only\nRevised for Version 5.9 (Release 2017a)\nSeptember 2017\nOnline only\nRevised for Version 5.10 (Release 2017b)\nMarch 2018\nOnline only\nRevised for Version 5.11 (Release 2018a)\nSeptember 2018\nOnline only\nRevised for Version 5.12 (Release 2018b)\nMarch 2019\nOnline only\nRevised for Version 5.13 (Release 2019a)\nSeptember 2019\nOnline only\nRevised for Version 5.14 (Release 2019b)\nMarch 2020\nOnline only\nRevised for Version 5.15 (Release 2020a)\nSeptember 2020\nOnline only\nRevised for Version 6.0 (Release 2020b)\nMarch 2021\nOnline only\nRevised for Version 6.1 (Release 2021a)\nSeptember 2021\nOnline only\nRevised for Version 6.2 (Release 2021b)\nMarch 2022\nOnline only\nRevised for Version 6.3 (Release 2022a)\nSeptember 2022\nOnline only\nRevised for Version 6.4 (Release 2022b)\nMarch 2023\nOnline only\nRevised for Version 6.5 (Release 2023a)\nSeptember 2023\nOnline only\nRevised for Version 23.2 (R2023b)\nMarch 2024\nOnline only\nRevised for Version 24.1 (R2024a)\nSeptember 2024\nOnline only\nRevised for Version 24.2 (R2024b)\nMarch 2025\nOnline only\nRevised for Version 25.1 (R2025a)\nSeptember 2025\nOnline only\nRereleased for Version 25.2 (R2025b)",
    "section_title": "How to Contact MathWorks",
    "section_hierarchy": [
      "How to Contact MathWorks"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 3067,
      "word_count": 469,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0014",
    "content": "October 1995\nFirst printing\nJanuary 1998\nSecond printing\nRevised for Version 1.1\nJanuary 1999\nThird printing\nRevised for Version 2.0 (Release 11)\nNovember 2000\nFourth printing\nRevised for Version 2.1.2 (Release 12)\nMay 2003\nOnline only\nRevised for Version 2.3 (Release 13)\nJune 2004\nOnline only\nRevised for Version 2.4 (Release 14)\nAugust 2004\nOnline only\nRevised for Version 2.4.1 (Release 14+)\nSeptember 2005\nFifth printing\nRevised for Version 2.5 (Release 14SP3)\nMarch 2006\nOnline only\nRevised for Version 3.0 (Release 2006a)\nSeptember 2006\nSixth printing\nRevised for Version 3.1 (Release 2006b)\nMarch 2007\nOnline only\nRevised for Version 3.2 (Release 2007a)\nSeptember 2007\nOnline only\nRevised for Version 3.3 (Release 2007b)\nMarch 2008\nOnline only\nRevised for Version 3.4 (Release 2008a)\nOctober 2008\nOnline only\nRevised for Version 3.5 (Release 2008b)\nMarch 2009\nOnline only\nRevised for Version 3.6 (Release 2009a)\nSeptember 2009\nOnline only\nRevised for Version 3.7 (Release 2009b)\nMarch 2010\nOnline only\nRevised for Version 3.7.1 (Release 2010a)\nSeptember 2010\nOnline only\nRevised for Version 3.8 (Release 2010b)\nApril 2011\nOnline only\nRevised for Version 4.0 (Release 2011a)\nSeptember 2011\nOnline only\nRevised for Version 4.1 (Release 2011b)\nMarch 2012\nOnline only\nRevised for Version 4.2 (Release 2012a)\nSeptember 2012\nOnline only\nRevised for Version 5.0 (Release 2012b)\nMarch 2013\nOnline only\nRevised for Version 5.1 (Release 2013a)\nSeptember 2013\nOnline only\nRevised for Version 5.2 (Release 2013b)\nMarch 2014\nOnline only\nRevised for Version 5.3 (Release 2014a)\nOctober 2014\nOnline only\nRevised for Version 5.4 (Release 2014b)\nMarch 2015\nOnline only\nRevised for Version 5.5 (Release 2015a)\nSeptember 2015\nOnline only\nRevised for Version 5.6 (Release 2015b)\nMarch 2016\nOnline only\nRevised for Version 5.7 (Release 2016a)\nSeptember 2016\nOnline only\nRevised for Version 5.8 (Release 2016b)\nMarch 2017\nOnline only\nRevised for Version 5.9 (Release 2017a)\nSeptember 2017\nOnline only\nRevised for Version 5.10 (Release 2017b)\nMarch 2018\nOnline only\nRevised for Version 5.11 (Release 2018a)\nSeptember 2018\nOnline only\nRevised for Version 5.12 (Release 2018b)\nMarch 2019\nOnline only\nRevised for Version 5.13 (Release 2019a)\nSeptember 2019\nOnline only\nRevised for Version 5.14 (Release 2019b)\nMarch 2020\nOnline only\nRevised for Version 5.15 (Release 2020a)\nSeptember 2020\nOnline only\nRevised for Version 6.0 (Release 2020b)\nMarch 2021\nOnline only\nRevised for Version 6.1 (Release 2021a)\nSeptember 2021\nOnline only\nRevised for Version 6.2 (Release 2021b)\nMarch 2022\nOnline only\nRevised for Version 6.3 (Release 2022a)\nSeptember 2022\nOnline only\nRevised for Version 6.4 (Release 2022b)\nMarch 2023\nOnline only\nRevised for Version 6.5 (Release 2023a)\nSeptember 2023\nOnline only\nRevised for Version 23.2 (R2023b)\nMarch 2024\nOnline only\nRevised for Version 24.1 (R2024a)\nSeptember 2024\nOnline only\nRevised for Version 24.2 (R2024b)\nMarch 2025\nOnline only\nRevised for Version 25.1 (R2025a)\nSeptember 2025\nOnline only\nRereleased for Version 25.2 (R2025b)\n\n<!-- Page 4 -->",
    "section_title": "How to Contact MathWorks",
    "section_hierarchy": [
      "How to Contact MathWorks"
    ],
    "page_numbers": [
      4
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 3062,
      "word_count": 471,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0015",
    "content": "<!-- Page 4 -->\n\n<!-- Page 5 -->",
    "section_title": "How to Contact MathWorks",
    "section_hierarchy": [
      "How to Contact MathWorks"
    ],
    "page_numbers": [
      4
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 32,
      "word_count": 8,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0016",
    "content": "1",
    "section_title": "Getting Started",
    "section_hierarchy": [
      "Getting Started"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1,
      "word_count": 1,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0017",
    "content": "**Financial Toolbox Product Description** . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**1-2**",
    "section_title": "Getting Started",
    "section_hierarchy": [
      "Getting Started"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 105,
      "word_count": 33,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0018",
    "content": "**Expected Users** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**1-3**",
    "section_title": "Getting Started",
    "section_hierarchy": [
      "Getting Started"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 122,
      "word_count": 51,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0019",
    "content": "**Analyze Sets of Numbers Using Matrix Functions** . . . . . . . . . . . . . . . . . . .\n**1-4**\nIntroduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**1-4**\nKey Definitions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**1-4**\nReferencing Matrix Elements . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**1-4**\nTransposing Matrices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**1-5**\n\n**Matrix Algebra Refresher** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**1-7**\nIntroduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**1-7**\nAdding and Subtracting Matrices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**1-7**\nMultiplying Matrices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**1-8**\nDividing Matrices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**1-11**\nSolving Simultaneous Linear Equations . . . . . . . . . . . . . . . . . . . . . . . . .\n**1-11**\nOperating Element by Element . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**1-13**",
    "section_title": "Getting Started",
    "section_hierarchy": [
      "Getting Started"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1290,
      "word_count": 488,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0020",
    "content": "**Matrix Algebra Refresher** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**1-7**\nIntroduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**1-7**\nAdding and Subtracting Matrices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**1-7**\nMultiplying Matrices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**1-8**\nDividing Matrices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**1-11**\nSolving Simultaneous Linear Equations . . . . . . . . . . . . . . . . . . . . . . . . .\n**1-11**\nOperating Element by Element . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**1-13**\n\n**Using Input and Output Arguments with Functions** . . . . . . . . . . . . . . . . .\n**1-15**\nInput Arguments . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**1-15**\nOutput Arguments . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**1-16**",
    "section_title": "Getting Started",
    "section_hierarchy": [
      "Getting Started"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1063,
      "word_count": 397,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0021",
    "content": "2",
    "section_title": "Performing Common Financial Tasks",
    "section_hierarchy": [
      "Performing Common Financial Tasks"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1,
      "word_count": 1,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0022",
    "content": "**Handle and Convert Dates** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-2**\nDate Formats . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-2**\nDate Conversions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-3**\nCurrent Date and Time . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-7**\nDetermining Specific Dates . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-8**\nDetermining Holidays . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-8**\nDetermining Cash-Flow Dates . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-9**",
    "section_title": "Performing Common Financial Tasks",
    "section_hierarchy": [
      "Performing Common Financial Tasks"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 764,
      "word_count": 303,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0023",
    "content": "**Analyzing and Computing Cash Flows** . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-11**\nIntroduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-11**\nInterest Rates/Rates of Return . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-11**\nPresent or Future Values . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-12**\nDepreciation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-13**\nAnnuities . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-13**",
    "section_title": "Performing Common Financial Tasks",
    "section_hierarchy": [
      "Performing Common Financial Tasks"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 656,
      "word_count": 258,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0024",
    "content": "**v**",
    "section_title": "Performing Common Financial Tasks",
    "section_hierarchy": [
      "Performing Common Financial Tasks"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 5,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0025",
    "content": "<!-- Page 6 -->",
    "section_title": "Contents",
    "section_hierarchy": [
      "Contents"
    ],
    "page_numbers": [
      6
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 15,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0026",
    "content": "**Pricing and Computing Yields for Fixed-Income Securities** . . . . . . . . . .\n**2-15**\nIntroduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-15**\nFixed-Income Terminology . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-15**\nFramework . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-18**\nDefault Parameter Values . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-18**\nCoupon Date Calculations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-20**\nYield Conventions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-21**\nPricing Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-21**\nYield Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-21**\nFixed-Income Sensitivities . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-22**",
    "section_title": "Contents",
    "section_hierarchy": [
      "Contents"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1073,
      "word_count": 408,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0027",
    "content": "**Treasury Bills Defined** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-25**\n\n**Computing Treasury Bill Price and Yield** . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-26**\nIntroduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-26**\nTreasury Bill Repurchase Agreements . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-26**\nTreasury Bill Yields . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-27**\n\n**Term Structure of Interest Rates** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-29**\n\n**Returns with Negative Prices** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-32**\nNegative Price Conversion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-32**\nAnalysis of Negative Price Returns . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-33**\nVisualization of Complex Returns . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-35**\nConclusion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-38**",
    "section_title": "Contents",
    "section_hierarchy": [
      "Contents"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1193,
      "word_count": 438,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0028",
    "content": "**Returns with Negative Prices** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-32**\nNegative Price Conversion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-32**\nAnalysis of Negative Price Returns . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-33**\nVisualization of Complex Returns . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-35**\nConclusion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-38**\n\n**Pricing and Analyzing Equity Derivatives** . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-39**\nIntroduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-39**\nSensitivity Measures . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-39**\nAnalysis Models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-40**",
    "section_title": "Contents",
    "section_hierarchy": [
      "Contents"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 972,
      "word_count": 365,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0029",
    "content": "**Pricing and Analyzing Equity Derivatives** . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-39**\nIntroduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-39**\nSensitivity Measures . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-39**\nAnalysis Models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-40**\n\n**About Life Tables** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-44**\nLife Tables Theory . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-44**\n\n**Case Study for Life Tables Analysis** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-46**",
    "section_title": "Contents",
    "section_hierarchy": [
      "Contents"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 778,
      "word_count": 298,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0030",
    "content": "**Case Study for Life Tables Analysis** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-46**\n\n**Machine Learning for Statistical Arbitrage: Introduction** . . . . . . . . . . . .\n**2-48**\n\n**Machine Learning for Statistical Arbitrage I: Data Management and**\n**Visualization** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-50**\n\n**Machine Learning for Statistical Arbitrage II: Feature Engineering and**\n**Model Development** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-59**\n\n**Machine Learning for Statistical Arbitrage III: Training, Tuning, and**\n**Prediction** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-69**\n\n**Backtest Deep Learning Model for Algorithmic Trading of Limit Order**\n**Book Data** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-78**",
    "section_title": "Contents",
    "section_hierarchy": [
      "Contents"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 973,
      "word_count": 288,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0031",
    "content": "**Backtest Deep Learning Model for Algorithmic Trading of Limit Order**\n**Book Data** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**2-78**\n\n**vi**\n*Contents*",
    "section_title": "Contents",
    "section_hierarchy": [
      "Contents"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 211,
      "word_count": 64,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0032",
    "content": "**vi**\n*Contents*\n\n<!-- Page 7 -->",
    "section_title": "Contents",
    "section_hierarchy": [
      "Contents"
    ],
    "page_numbers": [
      7
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 34,
      "word_count": 6,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0033",
    "content": "3",
    "section_title": "Portfolio Analysis",
    "section_hierarchy": [
      "Portfolio Analysis"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1,
      "word_count": 1,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0034",
    "content": "**Analyzing Portfolios** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**3-2**\n\n**Portfolio Optimization Functions** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**3-3**\n\n**Portfolio Construction Examples** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**3-5**\nIntroduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**3-5**\nEfficient Frontier Example . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**3-5**\n\n**Portfolio Selection and Risk Aversion** . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**3-7**\nIntroduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**3-7**\nOptimal Risky Portfolio . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**3-8**\n\n**portopt Migration to Portfolio Object** . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**3-11**\nMigrate portopt Without Output Arguments . . . . . . . . . . . . . . . . . . . . . .\n**3-11**\nMigrate portopt with Output Arguments . . . . . . . . . . . . . . . . . . . . . . . . .\n**3-12**\nMigrate portopt for Target Returns Within Range of Efficient Portfolio\nReturns . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**3-13**\nMigrate portopt for Target Return Outside Range of Efficient Portfolio\nReturns . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**3-14**\nMigrate portopt Using portcons Output for ConSet . . . . . . . . . . . . . . . . .\n**3-15**\nIntegrate Output from portcons, pcalims, pcglims, and pcgcomp with a\nPortfolio Object . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**3-17**",
    "section_title": "Portfolio Analysis",
    "section_hierarchy": [
      "Portfolio Analysis"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1829,
      "word_count": 626,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0035",
    "content": "**portopt Migration to Portfolio Object** . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**3-11**\nMigrate portopt Without Output Arguments . . . . . . . . . . . . . . . . . . . . . .\n**3-11**\nMigrate portopt with Output Arguments . . . . . . . . . . . . . . . . . . . . . . . . .\n**3-12**\nMigrate portopt for Target Returns Within Range of Efficient Portfolio\nReturns . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**3-13**\nMigrate portopt for Target Return Outside Range of Efficient Portfolio\nReturns . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**3-14**\nMigrate portopt Using portcons Output for ConSet . . . . . . . . . . . . . . . . .\n**3-15**\nIntegrate Output from portcons, pcalims, pcglims, and pcgcomp with a\nPortfolio Object . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**3-17**\n\n**Constraint Specification Using a Portfolio Object** . . . . . . . . . . . . . . . . . .\n**3-19**\nConstraints for Efficient Frontier . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**3-19**\nLinear Constraint Equations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**3-21**\nSpecifying Group Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**3-24**",
    "section_title": "Portfolio Analysis",
    "section_hierarchy": [
      "Portfolio Analysis"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1343,
      "word_count": 425,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0036",
    "content": "**Constraint Specification Using a Portfolio Object** . . . . . . . . . . . . . . . . . .\n**3-19**\nConstraints for Efficient Frontier . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**3-19**\nLinear Constraint Equations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**3-21**\nSpecifying Group Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**3-24**\n\n**Active Returns and Tracking Error Efficient Frontier** . . . . . . . . . . . . . . .\n**3-27**",
    "section_title": "Portfolio Analysis",
    "section_hierarchy": [
      "Portfolio Analysis"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 508,
      "word_count": 158,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0037",
    "content": "4",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1,
      "word_count": 1,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0038",
    "content": "**Portfolio Optimization Theory** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-4**\nPortfolio Optimization Problems . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-4**\nPortfolio Problem Specification . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-4**\nReturn Proxy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-5**\nRisk Proxy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-6**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 549,
      "word_count": 212,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0039",
    "content": "**Supported Constraints for Portfolio Optimization Using Portfolio Objects**\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-9**\nLinear Inequality Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-9**\nLinear Equality Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-10**\n'Simple' Bound Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-10**\n'Conditional' Bound Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-11**\nBudget Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-11**\nConditional Budget Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-12**\nGroup Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-12**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 941,
      "word_count": 340,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0040",
    "content": "**vii**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 7,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0041",
    "content": "<!-- Page 8 -->",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      8
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 15,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0042",
    "content": "Group Ratio Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-13**\nAverage Turnover Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-14**\nOne-Way Turnover Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-14**\nTracking Error Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-15**\nCardinality Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-16**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 525,
      "word_count": 193,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0043",
    "content": "**Default Portfolio Problem** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-17**\n\n**Portfolio Object Workflow** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-18**\n\n**Portfolio Object** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-20**\nPortfolio Object Properties and Functions . . . . . . . . . . . . . . . . . . . . . . . .\n**4-20**\nWorking with Portfolio Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-20**\nSetting and Getting Properties . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-20**\nDisplaying Portfolio Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-21**\nSaving and Loading Portfolio Objects . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-21**\nEstimating Efficient Portfolios and Frontiers . . . . . . . . . . . . . . . . . . . . . .\n**4-21**\nArrays of Portfolio Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-22**\nSubclassing Portfolio Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-23**\nConventions for Representation of Data . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-23**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1275,
      "word_count": 444,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0044",
    "content": "**Portfolio Object** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-20**\nPortfolio Object Properties and Functions . . . . . . . . . . . . . . . . . . . . . . . .\n**4-20**\nWorking with Portfolio Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-20**\nSetting and Getting Properties . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-20**\nDisplaying Portfolio Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-21**\nSaving and Loading Portfolio Objects . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-21**\nEstimating Efficient Portfolios and Frontiers . . . . . . . . . . . . . . . . . . . . . .\n**4-21**\nArrays of Portfolio Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-22**\nSubclassing Portfolio Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-23**\nConventions for Representation of Data . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-23**\n\n**Creating the Portfolio Object** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-25**\nSyntax . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-25**\nPortfolio Problem Sufficiency . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-25**\nPortfolio Function Examples . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-26**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1483,
      "word_count": 527,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0045",
    "content": "**Creating the Portfolio Object** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-25**\nSyntax . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-25**\nPortfolio Problem Sufficiency . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-25**\nPortfolio Function Examples . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-26**\n\n**Common Operations on the Portfolio Object** . . . . . . . . . . . . . . . . . . . . . .\n**4-33**\nNaming a Portfolio Object . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-33**\nConfiguring the Assets in the Asset Universe . . . . . . . . . . . . . . . . . . . . .\n**4-33**\nSetting Up a List of Asset Identifiers . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-33**\nTruncating and Padding Asset Lists . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-35**\n\n**Setting Up an Initial or Current Portfolio** . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-37**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1052,
      "word_count": 369,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0046",
    "content": "**Setting Up an Initial or Current Portfolio** . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-37**\n\n**Setting Up a Tracking Portfolio** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-40**\n\n**Asset Returns and Moments of Asset Returns Using Portfolio Object** . .\n**4-42**\nAssignment Using the Portfolio Function . . . . . . . . . . . . . . . . . . . . . . . .\n**4-42**\nAssignment Using the setAssetMoments Function . . . . . . . . . . . . . . . . .\n**4-43**\nScalar Expansion of Arguments . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-44**\nEstimating Asset Moments from Prices or Returns . . . . . . . . . . . . . . . . .\n**4-45**\nEstimating Asset Moments with Missing Data . . . . . . . . . . . . . . . . . . . . .\n**4-47**\nEstimating Asset Moments from Time Series Data . . . . . . . . . . . . . . . . .\n**4-49**\n\n**Working with a Riskless Asset** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-52**\n\n**Working with Transaction Costs** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-54**\nSetting Transaction Costs Using the Portfolio Function . . . . . . . . . . . . . .\n**4-54**\nSetting Transaction Costs Using the setCosts Function . . . . . . . . . . . . . .\n**4-54**\nSetting Transaction Costs with Scalar Expansion . . . . . . . . . . . . . . . . . .\n**4-56**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1362,
      "word_count": 399,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0047",
    "content": "**Working with Transaction Costs** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-54**\nSetting Transaction Costs Using the Portfolio Function . . . . . . . . . . . . . .\n**4-54**\nSetting Transaction Costs Using the setCosts Function . . . . . . . . . . . . . .\n**4-54**\nSetting Transaction Costs with Scalar Expansion . . . . . . . . . . . . . . . . . .\n**4-56**\n\n**Working with Portfolio Constraints Using Defaults** . . . . . . . . . . . . . . . . .\n**4-58**\nSetting Default Constraints for Portfolio Weights Using Portfolio Object\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-58**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 671,
      "word_count": 194,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0048",
    "content": "**Working with Portfolio Constraints Using Defaults** . . . . . . . . . . . . . . . . .\n**4-58**\nSetting Default Constraints for Portfolio Weights Using Portfolio Object\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-58**\n\n**viii**\n*Contents*",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 305,
      "word_count": 89,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0049",
    "content": "**viii**\n*Contents*\n\n<!-- Page 9 -->",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      9
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 36,
      "word_count": 6,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0050",
    "content": "<!-- Page 9 -->\n\n**Working with 'Simple' Bound Constraints Using Portfolio Object** . . . . .\n**4-62**\nSetting 'Simple' Bounds Using the Portfolio Function . . . . . . . . . . . . . . .\n**4-62**\nSetting 'Simple' Bounds Using the setBounds Function . . . . . . . . . . . . . .\n**4-62**\nSetting 'Simple' Bounds Using the Portfolio Function or setBounds Function\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-63**\n\n**Working with Budget Constraints Using Portfolio Object** . . . . . . . . . . . .\n**4-65**\nSetting Budget Constraints Using the Portfolio Function . . . . . . . . . . . . .\n**4-65**\nSetting Budget Constraints Using the setBudget Function . . . . . . . . . . .\n**4-65**\n\n**Working with Conditional Budget Constraints Using Portfolio Object** . .\n**4-67**\nSetting Conditional Budget Constraints Using the Portfolio Function . . .\n**4-67**\nSetting Conditional Budget Constraints Using the setConditionalBudget\nFunction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-67**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      9
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1095,
      "word_count": 266,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0051",
    "content": "**Working with Conditional Budget Constraints Using Portfolio Object** . .\n**4-67**\nSetting Conditional Budget Constraints Using the Portfolio Function . . .\n**4-67**\nSetting Conditional Budget Constraints Using the setConditionalBudget\nFunction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-67**\n\n**Working with Group Constraints Using Portfolio Object** . . . . . . . . . . . . .\n**4-69**\nSetting Group Constraints Using the Portfolio Function . . . . . . . . . . . . .\n**4-69**\nSetting Group Constraints Using the setGroups and addGroups Functions\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-69**\n\n**Working with Group Ratio Constraints Using Portfolio Object** . . . . . . . .\n**4-72**\nSetting Group Ratio Constraints Using the Portfolio Function . . . . . . . . .\n**4-72**\nSetting Group Ratio Constraints Using the setGroupRatio and\naddGroupRatio Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-73**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1056,
      "word_count": 264,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0052",
    "content": "**Working with Group Ratio Constraints Using Portfolio Object** . . . . . . . .\n**4-72**\nSetting Group Ratio Constraints Using the Portfolio Function . . . . . . . . .\n**4-72**\nSetting Group Ratio Constraints Using the setGroupRatio and\naddGroupRatio Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-73**\n\n**Working with Linear Equality Constraints Using Portfolio Object** . . . . .\n**4-75**\nSetting Linear Equality Constraints Using the Portfolio Function . . . . . .\n**4-75**\nSetting Linear Equality Constraints Using the setEquality and addEquality\nFunctions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-75**\n\n**Working with Linear Inequality Constraints Using Portfolio Object** . . . .\n**4-78**\nSetting Linear Inequality Constraints Using the Portfolio Function . . . . .\n**4-78**\nSetting Linear Inequality Constraints Using the setInequality and\naddInequality Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-78**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1039,
      "word_count": 239,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0053",
    "content": "**Working with Linear Inequality Constraints Using Portfolio Object** . . . .\n**4-78**\nSetting Linear Inequality Constraints Using the Portfolio Function . . . . .\n**4-78**\nSetting Linear Inequality Constraints Using the setInequality and\naddInequality Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-78**\n\n**Working with 'Conditional' BoundType, MinNumAssets, and**\n**MaxNumAssets Constraints Using Portfolio Objects** . . . . . . . . . . . . . .\n**4-81**\nSetting 'Conditional' BoundType Constraints Using the setBounds Function\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-81**\nSetting the Limits on the Number of Assets Invested Using the\nsetMinMaxNumAssets Function . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-82**\n\n**Working with Average Turnover Constraints Using Portfolio Object** . . .\n**4-85**\nSetting Average Turnover Constraints Using the Portfolio Function . . . .\n**4-85**\nSetting Average Turnover Constraints Using the setTurnover Function . .\n**4-85**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1086,
      "word_count": 240,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0054",
    "content": "**Working with Average Turnover Constraints Using Portfolio Object** . . .\n**4-85**\nSetting Average Turnover Constraints Using the Portfolio Function . . . .\n**4-85**\nSetting Average Turnover Constraints Using the setTurnover Function . .\n**4-85**\n\n**Working with One-Way Turnover Constraints Using Portfolio Object** . . .\n**4-88**\nSetting One-Way Turnover Constraints Using the Portfolio Function . . . .\n**4-88**\nSetting Turnover Constraints Using the setOneWayTurnover Function . .\n**4-88**\n\n**Working with Tracking Error Constraints Using Portfolio Object** . . . . . .\n**4-91**\nSetting Tracking Error Constraints Using the Portfolio Function . . . . . . .\n**4-91**\nSetting Tracking Error Constraints Using the setTrackingError Function\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-91**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 856,
      "word_count": 164,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0055",
    "content": "**Working with Tracking Error Constraints Using Portfolio Object** . . . . . .\n**4-91**\nSetting Tracking Error Constraints Using the Portfolio Function . . . . . . .\n**4-91**\nSetting Tracking Error Constraints Using the setTrackingError Function\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-91**\n\n**ix**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 368,
      "word_count": 94,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0056",
    "content": "**ix**\n\n<!-- Page 10 -->",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      10
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 24,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0057",
    "content": "<!-- Page 10 -->\n\n**Validate the Portfolio Problem for Portfolio Object** . . . . . . . . . . . . . . . . .\n**4-94**\nValidating a Portfolio Set . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-94**\nValidating Portfolios . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-95**\n\n**Estimate Efficient Portfolios for Entire Efficient Frontier for Portfolio**\n**Object** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-98**\n\n**Obtaining Portfolios Along the Entire Efficient Frontier** . . . . . . . . . . . . .\n**4-99**\n\n**Obtaining Endpoints of the Efficient Frontier** . . . . . . . . . . . . . . . . . . . .\n**4-102**\n\n**Obtaining Efficient Portfolios for Target Returns** . . . . . . . . . . . . . . . . .\n**4-105**\n\n**Obtaining Efficient Portfolios for Target Risks** . . . . . . . . . . . . . . . . . . . .\n**4-108**\n\n**Efficient Portfolio That Maximizes Sharpe Ratio** . . . . . . . . . . . . . . . . . .\n**4-111**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      10
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1037,
      "word_count": 300,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0058",
    "content": "**Efficient Portfolio That Maximizes Sharpe Ratio** . . . . . . . . . . . . . . . . . .\n**4-111**\n\n**Choosing and Controlling the Solver for Mean-Variance Portfolio**\n**Optimization** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-114**\nUsing 'lcprog' and 'quadprog' . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-114**\nUsing the Mixed Integer Nonlinear Programming (MINLP) Solver . . . .\n**4-115**\nSolver Guidelines for Portfolio Objects . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-115**\nSolver Guidelines for Custom Objective Problems Using Portfolio Objects\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-119**\n\n**Estimate Efficient Frontiers for Portfolio Object** . . . . . . . . . . . . . . . . . .\n**4-122**\nObtaining Portfolio Risks and Returns . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-122**\n\n**Plotting the Efficient Frontier for a Portfolio Object** . . . . . . . . . . . . . . .\n**4-125**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1053,
      "word_count": 304,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0059",
    "content": "**Plotting the Efficient Frontier for a Portfolio Object** . . . . . . . . . . . . . . .\n**4-125**\n\n**Postprocessing Results to Set Up Tradable Portfolios** . . . . . . . . . . . . . .\n**4-130**\n\n**When to Use Portfolio Objects Over Optimization Toolbox** . . . . . . . . . .\n**4-132**\nAlways Use Portfolio, PortfolioCVaR, or PortfolioMAD Object . . . . . . . .\n**4-134**\nPreferred Use of Portfolio, PortfolioCVaR, or PortfolioMAD Object . . . .\n**4-135**\nUse Optimization Toolbox . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-136**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 560,
      "word_count": 133,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0060",
    "content": "**When to Use Portfolio Objects Over Optimization Toolbox** . . . . . . . . . .\n**4-132**\nAlways Use Portfolio, PortfolioCVaR, or PortfolioMAD Object . . . . . . . .\n**4-134**\nPreferred Use of Portfolio, PortfolioCVaR, or PortfolioMAD Object . . . .\n**4-135**\nUse Optimization Toolbox . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-136**\n\n**Comparison of Methods for Covariance Estimation** . . . . . . . . . . . . . . . .\n**4-138**\n\n**Choose MINLP Solvers for Portfolio Problems** . . . . . . . . . . . . . . . . . . . .\n**4-140**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 558,
      "word_count": 137,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0061",
    "content": "**Choose MINLP Solvers for Portfolio Problems** . . . . . . . . . . . . . . . . . . . .\n**4-140**\n\n**Troubleshooting Portfolio Optimization Results** . . . . . . . . . . . . . . . . . .\n**4-145**\nPortfolio Object Destroyed When Modifying . . . . . . . . . . . . . . . . . . . . .\n**4-145**\nOptimization Fails with \u201cBad Pivot\u201d Message . . . . . . . . . . . . . . . . . . . .\n**4-145**\nSpeed of Optimization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-145**\nMatrix Incompatibility and \"Non-Conformable\" Errors . . . . . . . . . . . . .\n**4-145**\nMissing Data Estimation Fails . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-145**\nmv_optim_transform Errors . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-145**\nsolveContinuousCustomObjProb or solveMICustomObjProb Errors . . . .\n**4-146**\nEfficient Portfolios Do Not Make Sense . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-146**\nEfficient Frontiers Do Not Make Sense . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-146**\nTroubleshooting estimateCustomObjectivePortfolio . . . . . . . . . . . . . . .\n**4-148**\nTroubleshooting for Setting 'Conditional' BoundType, MinNumAssets, and\nMaxNumAssets Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-148**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1315,
      "word_count": 369,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0062",
    "content": "**Troubleshooting Portfolio Optimization Results** . . . . . . . . . . . . . . . . . .\n**4-145**\nPortfolio Object Destroyed When Modifying . . . . . . . . . . . . . . . . . . . . .\n**4-145**\nOptimization Fails with \u201cBad Pivot\u201d Message . . . . . . . . . . . . . . . . . . . .\n**4-145**\nSpeed of Optimization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-145**\nMatrix Incompatibility and \"Non-Conformable\" Errors . . . . . . . . . . . . .\n**4-145**\nMissing Data Estimation Fails . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-145**\nmv_optim_transform Errors . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-145**\nsolveContinuousCustomObjProb or solveMICustomObjProb Errors . . . .\n**4-146**\nEfficient Portfolios Do Not Make Sense . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-146**\nEfficient Frontiers Do Not Make Sense . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-146**\nTroubleshooting estimateCustomObjectivePortfolio . . . . . . . . . . . . . . .\n**4-148**\nTroubleshooting for Setting 'Conditional' BoundType, MinNumAssets, and\nMaxNumAssets Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-148**\n\n**x**\n*Contents*",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1234,
      "word_count": 344,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0063",
    "content": "**x**\n*Contents*\n\n<!-- Page 11 -->",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      11
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 34,
      "word_count": 6,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0064",
    "content": "<!-- Page 11 -->\n\n**Role of Convexity in Portfolio Problems** . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-157**\nExamples of Convex Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-158**\nExamples of Concave Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-159**\nExamples of Nonconvex Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-159**\n\n**Portfolio Optimization Examples Using Financial Toolbox** . . . . . . . . . .\n**4-161**\n\n**Asset Allocation Case Study** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-180**\n\n**Portfolio Optimization with Semicontinuous and Cardinality Constraints**\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-190**\n\n**Portfolio Optimization Against a Benchmark** . . . . . . . . . . . . . . . . . . . . .\n**4-202**\n\n**Portfolio Analysis with Turnover Constraints** . . . . . . . . . . . . . . . . . . . . .\n**4-211**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      11
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1024,
      "word_count": 315,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0065",
    "content": "**Portfolio Analysis with Turnover Constraints** . . . . . . . . . . . . . . . . . . . . .\n**4-211**\n\n**Leverage in Portfolio Optimization with a Risk-Free Asset** . . . . . . . . . .\n**4-217**\n\n**Black-Litterman Portfolio Optimization Using Financial Toolbox** . . . . .\n**4-222**\n\n**Portfolio Optimization Using Factor Models** . . . . . . . . . . . . . . . . . . . . . .\n**4-231**\n\n**Backtest Investment Strategies Using Financial Toolbox** . . . . . . . . . . .\n**4-238**\n\n**Backtest Investment Strategies with Trading Signals** . . . . . . . . . . . . . .\n**4-251**\n\n**Portfolio Optimization Using Social Performance Measure** . . . . . . . . .\n**4-264**\n\n**Diversify ESG Portfolios** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-271**\n\n**Risk Budgeting Portfolio** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-286**\n\n**Backtest Using Risk-Based Equity Indexation** . . . . . . . . . . . . . . . . . . . .\n**4-291**\n\n**Create Hierarchical Risk Parity Portfolio** . . . . . . . . . . . . . . . . . . . . . . . .\n**4-296**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1093,
      "word_count": 280,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0066",
    "content": "**Create Hierarchical Risk Parity Portfolio** . . . . . . . . . . . . . . . . . . . . . . . .\n**4-296**\n\n**Backtest Strategies Using Deep Learning** . . . . . . . . . . . . . . . . . . . . . . . .\n**4-302**\n\n**Backtest with Brinson Attribution to Evaluate Portfolio Performance**\n**4-315**\n\n**Analyze Performance Attribution Using Brinson Model** . . . . . . . . . . . .\n**4-323**\n\n**Diversify Portfolios Using Custom Objective** . . . . . . . . . . . . . . . . . . . . . .\n**4-331**\n\n**Solve Tracking Error Portfolio Problems** . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-343**\n\n**Solve Problem for Minimum Tracking Error with Net Return Constraint**\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-349**\n\n**Solve Robust Portfolio Maximum Return Problem with Ellipsoidal**\n**Uncertainty** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-351**\n\n**Risk Parity or Budgeting with Constraints** . . . . . . . . . . . . . . . . . . . . . . .\n**4-357**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1072,
      "word_count": 300,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0067",
    "content": "**Risk Parity or Budgeting with Constraints** . . . . . . . . . . . . . . . . . . . . . . .\n**4-357**\n\n**xi**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 109,
      "word_count": 31,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0068",
    "content": "**xi**\n\n<!-- Page 12 -->",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      12
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 24,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0069",
    "content": "<!-- Page 12 -->\n\n**Single Period Goal-Based Wealth Management** . . . . . . . . . . . . . . . . . . .\n**4-362**\n\n**Dynamic Portfolio Allocation in Goal-Based Wealth Management for**\n**Multiple Time Periods** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-367**\n\n**Multiperiod Goal-Based Wealth Management Using Reinforcement**\n**Learning** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-379**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      12
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 481,
      "word_count": 136,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0070",
    "content": "**Multiperiod Goal-Based Wealth Management Using Reinforcement**\n**Learning** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-379**\n\n**Compare Performance of Covariance Denoising with Factor Modeling**\n**Using Backtesting** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-394**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 369,
      "word_count": 109,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0071",
    "content": "**Compare Performance of Covariance Denoising with Factor Modeling**\n**Using Backtesting** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-394**\n\n**Mixed-Integer Mean-Variance Portfolio Optimization Problem** . . . . . .\n**4-402**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 268,
      "word_count": 64,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0072",
    "content": "**Mixed-Integer Mean-Variance Portfolio Optimization Problem** . . . . . .\n**4-402**\n\n**Deep Reinforcement Learning for Optimal Trade Execution** . . . . . . . . .\n**4-407**\n\n**Backtest Investment Strategies Using datetime and calendarDuration**\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-451**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 367,
      "word_count": 93,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0073",
    "content": "**Backtest Investment Strategies Using datetime and calendarDuration**\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**4-451**\n\n**Adding Constraints to Satisfy UCITS Directive** . . . . . . . . . . . . . . . . . . . .\n**4-457**",
    "section_title": "Mean-Variance Portfolio Optimization Tools",
    "section_hierarchy": [
      "Mean-Variance Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 293,
      "word_count": 91,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0074",
    "content": "5",
    "section_title": "CVaR Portfolio Optimization Tools",
    "section_hierarchy": [
      "CVaR Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1,
      "word_count": 1,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0075",
    "content": "**Portfolio Optimization Theory** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-3**\nPortfolio Optimization Problems . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-3**\nPortfolio Problem Specification . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-3**\nReturn Proxy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-4**\nRisk Proxy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-5**",
    "section_title": "CVaR Portfolio Optimization Tools",
    "section_hierarchy": [
      "CVaR Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 549,
      "word_count": 212,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0076",
    "content": "**Supported Constraints for Portfolio Optimization Using PortfolioCVaR**\n**Object** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-8**\nLinear Inequality Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-8**\nLinear Equality Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-9**\n'Simple' Bound Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-9**\n'Conditional' Bound Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-10**\nBudget Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-10**\nConditional Budget Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-11**\nGroup Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-11**\nGroup Ratio Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-12**\nAverage Turnover Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-13**\nOne-way Turnover Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-13**\nCardinality Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-14**",
    "section_title": "CVaR Portfolio Optimization Tools",
    "section_hierarchy": [
      "CVaR Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1360,
      "word_count": 491,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0077",
    "content": "**Default Portfolio Problem** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-15**\n\n**PortfolioCVaR Object Workflow** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-16**\n\n**PortfolioCVaR Object** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-17**\nPortfolioCVaR Object Properties and Functions . . . . . . . . . . . . . . . . . . . .\n**5-17**\nWorking with PortfolioCVaR Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-17**\nSetting and Getting Properties . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-18**\nDisplaying PortfolioCVaR Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-18**",
    "section_title": "CVaR Portfolio Optimization Tools",
    "section_hierarchy": [
      "CVaR Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 744,
      "word_count": 254,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0078",
    "content": "**PortfolioCVaR Object** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-17**\nPortfolioCVaR Object Properties and Functions . . . . . . . . . . . . . . . . . . . .\n**5-17**\nWorking with PortfolioCVaR Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-17**\nSetting and Getting Properties . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-18**\nDisplaying PortfolioCVaR Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-18**\n\n**xii**\n*Contents*",
    "section_title": "CVaR Portfolio Optimization Tools",
    "section_hierarchy": [
      "CVaR Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 538,
      "word_count": 177,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0079",
    "content": "**xii**\n*Contents*\n\n<!-- Page 13 -->",
    "section_title": "CVaR Portfolio Optimization Tools",
    "section_hierarchy": [
      "CVaR Portfolio Optimization Tools"
    ],
    "page_numbers": [
      13
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 36,
      "word_count": 6,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0080",
    "content": "<!-- Page 13 -->\n\nSaving and Loading PortfolioCVaR Objects . . . . . . . . . . . . . . . . . . . . . . .\n**5-18**\nEstimating Efficient Portfolios and Frontiers . . . . . . . . . . . . . . . . . . . . . .\n**5-18**\nArrays of PortfolioCVaR Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-19**\nSubclassing PortfolioCVaR Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-20**\nConventions for Representation of Data . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-20**\n\n**Creating the PortfolioCVaR Object** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-22**\nSyntax . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-22**\nPortfolioCVaR Problem Sufficiency . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-22**\nPortfolioCVaR Function Examples . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-23**\n\n**Common Operations on the PortfolioCVaR Object** . . . . . . . . . . . . . . . . . .\n**5-29**\nNaming a PortfolioCVaR Object . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-29**\nConfiguring the Assets in the Asset Universe . . . . . . . . . . . . . . . . . . . . .\n**5-29**\nSetting Up a List of Asset Identifiers . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-29**\nTruncating and Padding Asset Lists . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-31**",
    "section_title": "CVaR Portfolio Optimization Tools",
    "section_hierarchy": [
      "CVaR Portfolio Optimization Tools"
    ],
    "page_numbers": [
      13
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1439,
      "word_count": 476,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0081",
    "content": "**Common Operations on the PortfolioCVaR Object** . . . . . . . . . . . . . . . . . .\n**5-29**\nNaming a PortfolioCVaR Object . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-29**\nConfiguring the Assets in the Asset Universe . . . . . . . . . . . . . . . . . . . . .\n**5-29**\nSetting Up a List of Asset Identifiers . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-29**\nTruncating and Padding Asset Lists . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-31**\n\n**Setting Up an Initial or Current Portfolio** . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-33**\n\n**Asset Returns and Scenarios Using PortfolioCVaR Object** . . . . . . . . . . . .\n**5-36**\nHow Stochastic Optimization Works . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-36**\nWhat Are Scenarios? . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-36**\nSetting Scenarios Using the PortfolioCVaR Function . . . . . . . . . . . . . . . .\n**5-37**\nSetting Scenarios Using the setScenarios Function . . . . . . . . . . . . . . . . .\n**5-38**\nEstimating the Mean and Covariance of Scenarios . . . . . . . . . . . . . . . . .\n**5-38**\nSimulating Normal Scenarios . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-39**\nSimulating Normal Scenarios from Returns or Prices . . . . . . . . . . . . . . .\n**5-39**\nSimulating Normal Scenarios with Missing Data . . . . . . . . . . . . . . . . . . .\n**5-40**\nSimulating Normal Scenarios from Time Series Data . . . . . . . . . . . . . . .\n**5-42**\nSimulating Normal Scenarios with Mean and Covariance . . . . . . . . . . . .\n**5-44**",
    "section_title": "CVaR Portfolio Optimization Tools",
    "section_hierarchy": [
      "CVaR Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1638,
      "word_count": 490,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0082",
    "content": "**Asset Returns and Scenarios Using PortfolioCVaR Object** . . . . . . . . . . . .\n**5-36**\nHow Stochastic Optimization Works . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-36**\nWhat Are Scenarios? . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-36**\nSetting Scenarios Using the PortfolioCVaR Function . . . . . . . . . . . . . . . .\n**5-37**\nSetting Scenarios Using the setScenarios Function . . . . . . . . . . . . . . . . .\n**5-38**\nEstimating the Mean and Covariance of Scenarios . . . . . . . . . . . . . . . . .\n**5-38**\nSimulating Normal Scenarios . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-39**\nSimulating Normal Scenarios from Returns or Prices . . . . . . . . . . . . . . .\n**5-39**\nSimulating Normal Scenarios with Missing Data . . . . . . . . . . . . . . . . . . .\n**5-40**\nSimulating Normal Scenarios from Time Series Data . . . . . . . . . . . . . . .\n**5-42**\nSimulating Normal Scenarios with Mean and Covariance . . . . . . . . . . . .\n**5-44**\n\n**Working with a Riskless Asset** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-46**",
    "section_title": "CVaR Portfolio Optimization Tools",
    "section_hierarchy": [
      "CVaR Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1146,
      "word_count": 337,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0083",
    "content": "**Working with a Riskless Asset** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-46**\n\n**Working with Transaction Costs** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-47**\nSetting Transaction Costs Using the PortfolioCVaR Function . . . . . . . . . .\n**5-47**\nSetting Transaction Costs Using the setCosts Function . . . . . . . . . . . . . .\n**5-47**\nSetting Transaction Costs with Scalar Expansion . . . . . . . . . . . . . . . . . .\n**5-49**\n\n**Working with CVaR Portfolio Constraints Using Defaults** . . . . . . . . . . . .\n**5-51**\nSetting Default Constraints for Portfolio Weights Using PortfolioCVaR\nObject . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-51**\n\n**Working with 'Simple' Bound Constraints Using PortfolioCVaR Object**\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-55**\nSetting 'Simple' Bounds Using the PortfolioCVaR Function . . . . . . . . . . .\n**5-55**\nSetting 'Simple' Bounds Using the setBounds Function . . . . . . . . . . . . . .\n**5-55**\nSetting 'Simple' Bounds Using the PortfolioCVaR Function or setBounds\nFunction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-56**",
    "section_title": "CVaR Portfolio Optimization Tools",
    "section_hierarchy": [
      "CVaR Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1323,
      "word_count": 386,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0084",
    "content": "**Working with 'Simple' Bound Constraints Using PortfolioCVaR Object**\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-55**\nSetting 'Simple' Bounds Using the PortfolioCVaR Function . . . . . . . . . . .\n**5-55**\nSetting 'Simple' Bounds Using the setBounds Function . . . . . . . . . . . . . .\n**5-55**\nSetting 'Simple' Bounds Using the PortfolioCVaR Function or setBounds\nFunction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-56**\n\n**Working with Budget Constraints Using PortfolioCVaR Object** . . . . . . . .\n**5-58**\nSetting Budget Constraints Using the PortfolioCVaR Function . . . . . . . .\n**5-58**\nSetting Budget Constraints Using the setBudget Function . . . . . . . . . . .\n**5-58**",
    "section_title": "CVaR Portfolio Optimization Tools",
    "section_hierarchy": [
      "CVaR Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 814,
      "word_count": 216,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0085",
    "content": "**Working with Budget Constraints Using PortfolioCVaR Object** . . . . . . . .\n**5-58**\nSetting Budget Constraints Using the PortfolioCVaR Function . . . . . . . .\n**5-58**\nSetting Budget Constraints Using the setBudget Function . . . . . . . . . . .\n**5-58**\n\n**xiii**",
    "section_title": "CVaR Portfolio Optimization Tools",
    "section_hierarchy": [
      "CVaR Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 269,
      "word_count": 52,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0086",
    "content": "**xiii**\n\n<!-- Page 14 -->",
    "section_title": "CVaR Portfolio Optimization Tools",
    "section_hierarchy": [
      "CVaR Portfolio Optimization Tools"
    ],
    "page_numbers": [
      14
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0087",
    "content": "<!-- Page 14 -->\n\n**Working with Conditional Budget Constraints Using PortfolioCVaR Object**\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-60**\nSetting Conditional Budget Constraints Using the PortfolioCVaR Function\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-60**\nSetting Conditional Budget Constraints Using the setConditionalBudget\nFunction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-60**\n\n**Working with Group Constraints Using PortfolioCVaR Object** . . . . . . . .\n**5-62**\nSetting Group Constraints Using the PortfolioCVaR Function . . . . . . . . .\n**5-62**\nSetting Group Constraints Using the setGroups and addGroups Functions\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-62**\n\n**Working with Group Ratio Constraints Using PortfolioCVaR Object** . . .\n**5-65**\nSetting Group Ratio Constraints Using the PortfolioCVaR Function . . . . .\n**5-65**\nSetting Group Ratio Constraints Using the setGroupRatio and\naddGroupRatio Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-66**",
    "section_title": "CVaR Portfolio Optimization Tools",
    "section_hierarchy": [
      "CVaR Portfolio Optimization Tools"
    ],
    "page_numbers": [
      14
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1272,
      "word_count": 355,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0088",
    "content": "**Working with Group Ratio Constraints Using PortfolioCVaR Object** . . .\n**5-65**\nSetting Group Ratio Constraints Using the PortfolioCVaR Function . . . . .\n**5-65**\nSetting Group Ratio Constraints Using the setGroupRatio and\naddGroupRatio Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-66**\n\n**Working with Linear Equality Constraints Using PortfolioCVaR Object**\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-68**\nSetting Linear Equality Constraints Using the PortfolioCVaR Function . .\n**5-68**\nSetting Linear Equality Constraints Using the setEquality and addEquality\nFunctions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-68**\n\n**Working with Linear Inequality Constraints Using PortfolioCVaR Object**\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-70**\nSetting Linear Inequality Constraints Using the PortfolioCVaR Function\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-70**\nSetting Linear Inequality Constraints Using the setInequality and\naddInequality Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-70**",
    "section_title": "CVaR Portfolio Optimization Tools",
    "section_hierarchy": [
      "CVaR Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1343,
      "word_count": 379,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0089",
    "content": "**Working with Linear Inequality Constraints Using PortfolioCVaR Object**\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-70**\nSetting Linear Inequality Constraints Using the PortfolioCVaR Function\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-70**\nSetting Linear Inequality Constraints Using the setInequality and\naddInequality Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-70**\n\n**Working with 'Conditional' BoundType, MinNumAssets, and**\n**MaxNumAssets Constraints Using PortfolioCVaR Objects** . . . . . . . . . .\n**5-72**\nSetting 'Conditional' BoundType Constraints Using the setBounds Function\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-72**\nSetting the Limits on the Number of Assets Invested Using the\nsetMinMaxNumAssets Function . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-73**",
    "section_title": "CVaR Portfolio Optimization Tools",
    "section_hierarchy": [
      "CVaR Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1043,
      "word_count": 301,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0090",
    "content": "**Working with 'Conditional' BoundType, MinNumAssets, and**\n**MaxNumAssets Constraints Using PortfolioCVaR Objects** . . . . . . . . . .\n**5-72**\nSetting 'Conditional' BoundType Constraints Using the setBounds Function\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-72**\nSetting the Limits on the Number of Assets Invested Using the\nsetMinMaxNumAssets Function . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-73**\n\n**Working with Average Turnover Constraints Using PortfolioCVaR Object**\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-75**\nSetting Average Turnover Constraints Using the PortfolioCVaR Function\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-75**\nSetting Average Turnover Constraints Using the setTurnover Function . .\n**5-75**\n\n**Working with One-Way Turnover Constraints Using PortfolioCVaR Object**\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-78**\nSetting One-Way Turnover Constraints Using the PortfolioCVaR Function\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-78**\nSetting Turnover Constraints Using the setOneWayTurnover Function . .\n**5-78**",
    "section_title": "CVaR Portfolio Optimization Tools",
    "section_hierarchy": [
      "CVaR Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1414,
      "word_count": 404,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0091",
    "content": "**Working with One-Way Turnover Constraints Using PortfolioCVaR Object**\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-78**\nSetting One-Way Turnover Constraints Using the PortfolioCVaR Function\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-78**\nSetting Turnover Constraints Using the setOneWayTurnover Function . .\n**5-78**\n\n**Validate the CVaR Portfolio Problem** . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-81**\nValidating a CVaR Portfolio Set . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-81**\nValidating CVaR Portfolios . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-82**\n\n**Estimate Efficient Portfolios for Entire Frontier for PortfolioCVaR Object**\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-85**",
    "section_title": "CVaR Portfolio Optimization Tools",
    "section_hierarchy": [
      "CVaR Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 981,
      "word_count": 317,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0092",
    "content": "**Estimate Efficient Portfolios for Entire Frontier for PortfolioCVaR Object**\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-85**\n\n**xiv**\n*Contents*",
    "section_title": "CVaR Portfolio Optimization Tools",
    "section_hierarchy": [
      "CVaR Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 221,
      "word_count": 69,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0093",
    "content": "**xiv**\n*Contents*\n\n<!-- Page 15 -->",
    "section_title": "CVaR Portfolio Optimization Tools",
    "section_hierarchy": [
      "CVaR Portfolio Optimization Tools"
    ],
    "page_numbers": [
      15
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 36,
      "word_count": 6,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0094",
    "content": "<!-- Page 15 -->\n\n**Obtaining Portfolios Along the Entire Efficient Frontier** . . . . . . . . . . . . .\n**5-86**\n\n**Obtaining Endpoints of the Efficient Frontier** . . . . . . . . . . . . . . . . . . . . .\n**5-89**\n\n**Obtaining Efficient Portfolios for Target Returns** . . . . . . . . . . . . . . . . . .\n**5-92**\n\n**Obtaining Efficient Portfolios for Target Risks** . . . . . . . . . . . . . . . . . . . . .\n**5-95**\n\n**Choosing and Controlling the Solver for PortfolioCVaR Optimizations** .\n**5-98**\nUsing 'TrustRegionCP', 'ExtendedCP', and 'cuttingplane' SolverTypes . . .\n**5-98**\nUsing 'fmincon' SolverType . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-99**\nUsing the Mixed Integer Nonlinear Programming (MINLP) Solver . . . .\n**5-100**\nSolver Guidelines for PortfolioCVaR Objects . . . . . . . . . . . . . . . . . . . . .\n**5-100**\n\n**Estimate Efficient Frontiers for PortfolioCVaR Object** . . . . . . . . . . . . . .\n**5-105**\nObtaining CVaR Portfolio Risks and Returns . . . . . . . . . . . . . . . . . . . . .\n**5-105**\nObtaining Portfolio Standard Deviation and VaR . . . . . . . . . . . . . . . . . .\n**5-106**",
    "section_title": "CVaR Portfolio Optimization Tools",
    "section_hierarchy": [
      "CVaR Portfolio Optimization Tools"
    ],
    "page_numbers": [
      15
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1150,
      "word_count": 278,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0095",
    "content": "**Estimate Efficient Frontiers for PortfolioCVaR Object** . . . . . . . . . . . . . .\n**5-105**\nObtaining CVaR Portfolio Risks and Returns . . . . . . . . . . . . . . . . . . . . .\n**5-105**\nObtaining Portfolio Standard Deviation and VaR . . . . . . . . . . . . . . . . . .\n**5-106**\n\n**Plotting the Efficient Frontier for a PortfolioCVaR Object** . . . . . . . . . .\n**5-109**\n\n**Postprocessing Results to Set Up Tradable Portfolios** . . . . . . . . . . . . . .\n**5-115**\n\n**Working with Other Portfolio Objects** . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-118**\n\n**Troubleshooting CVaR Portfolio Optimization Results** . . . . . . . . . . . . . .\n**5-121**\nPortfolioCVaR Object Destroyed When Modifying . . . . . . . . . . . . . . . . .\n**5-121**\nMatrix Incompatibility and \"Non-Conformable\" Errors . . . . . . . . . . . . .\n**5-121**\nCVaR Portfolio Optimization Warns About \u201cMax Iterations\u201d . . . . . . . . . .\n**5-121**\nCVaR Portfolio Optimization Errors with \u201cCould Not Solve\u201d Message . .\n**5-122**\nMissing Data Estimation Fails . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-122**\ncvar_optim_transform Errors . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-122**\nEfficient Portfolios Do Not Make Sense . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-123**",
    "section_title": "CVaR Portfolio Optimization Tools",
    "section_hierarchy": [
      "CVaR Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1324,
      "word_count": 344,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0096",
    "content": "**Troubleshooting CVaR Portfolio Optimization Results** . . . . . . . . . . . . . .\n**5-121**\nPortfolioCVaR Object Destroyed When Modifying . . . . . . . . . . . . . . . . .\n**5-121**\nMatrix Incompatibility and \"Non-Conformable\" Errors . . . . . . . . . . . . .\n**5-121**\nCVaR Portfolio Optimization Warns About \u201cMax Iterations\u201d . . . . . . . . . .\n**5-121**\nCVaR Portfolio Optimization Errors with \u201cCould Not Solve\u201d Message . .\n**5-122**\nMissing Data Estimation Fails . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-122**\ncvar_optim_transform Errors . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-122**\nEfficient Portfolios Do Not Make Sense . . . . . . . . . . . . . . . . . . . . . . . . .\n**5-123**\n\n**Hedging Using CVaR Portfolio Optimization** . . . . . . . . . . . . . . . . . . . . .\n**5-125**\n\n**Compute Maximum Reward-to-Risk Ratio for CVaR Portfolio** . . . . . . . .\n**5-137**\n\n**Mixed-Integer CVaR Portfolio Optimization Problem** . . . . . . . . . . . . . .\n**5-141**",
    "section_title": "CVaR Portfolio Optimization Tools",
    "section_hierarchy": [
      "CVaR Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1022,
      "word_count": 259,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0097",
    "content": "**Mixed-Integer CVaR Portfolio Optimization Problem** . . . . . . . . . . . . . .\n**5-141**\n\n**Bond Portfolio CVaR Optimization Using Diebold-Li Model** . . . . . . . . .\n**5-146**",
    "section_title": "CVaR Portfolio Optimization Tools",
    "section_hierarchy": [
      "CVaR Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 180,
      "word_count": 37,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0098",
    "content": "6",
    "section_title": "MAD Portfolio Optimization Tools",
    "section_hierarchy": [
      "MAD Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1,
      "word_count": 1,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0099",
    "content": "**Portfolio Optimization Theory** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-3**\nPortfolio Optimization Problems . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-3**\nPortfolio Problem Specification . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-3**\nReturn Proxy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-4**\nRisk Proxy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-5**",
    "section_title": "MAD Portfolio Optimization Tools",
    "section_hierarchy": [
      "MAD Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 549,
      "word_count": 212,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0100",
    "content": "**xv**",
    "section_title": "MAD Portfolio Optimization Tools",
    "section_hierarchy": [
      "MAD Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 6,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0101",
    "content": "<!-- Page 16 -->",
    "section_title": "MAD Portfolio Optimization Tools",
    "section_hierarchy": [
      "MAD Portfolio Optimization Tools"
    ],
    "page_numbers": [
      16
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0102",
    "content": "**Supported Constraints for Portfolio Optimization Using PortfolioMAD**\n**Object** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-8**\nLinear Inequality Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-8**\nLinear Equality Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-9**\n'Simple' Bound Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-9**\n'Conditional' Bound Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-10**\nBudget Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-10**\nConditional Budget Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-11**\nGroup Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-11**\nGroup Ratio Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-12**\nAverage Turnover Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-13**\nOne-way Turnover Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-13**\nCardinality Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-14**",
    "section_title": "MAD Portfolio Optimization Tools",
    "section_hierarchy": [
      "MAD Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1359,
      "word_count": 491,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0103",
    "content": "**Default Portfolio Problem** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-15**\n\n**PortfolioMAD Object Workflow** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-16**\n\n**PortfolioMAD Object** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-17**\nPortfolioMAD Object Properties and Functions . . . . . . . . . . . . . . . . . . . .\n**6-17**\nWorking with PortfolioMAD Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-17**\nSetting and Getting Properties . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-18**\nDisplaying PortfolioMAD Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-18**\nSaving and Loading PortfolioMAD Objects . . . . . . . . . . . . . . . . . . . . . . .\n**6-18**\nEstimating Efficient Portfolios and Frontiers . . . . . . . . . . . . . . . . . . . . . .\n**6-18**\nArrays of PortfolioMAD Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-19**\nSubclassing PortfolioMAD Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-20**\nConventions for Representation of Data . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-20**",
    "section_title": "MAD Portfolio Optimization Tools",
    "section_hierarchy": [
      "MAD Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1235,
      "word_count": 412,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0104",
    "content": "**PortfolioMAD Object** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-17**\nPortfolioMAD Object Properties and Functions . . . . . . . . . . . . . . . . . . . .\n**6-17**\nWorking with PortfolioMAD Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-17**\nSetting and Getting Properties . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-18**\nDisplaying PortfolioMAD Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-18**\nSaving and Loading PortfolioMAD Objects . . . . . . . . . . . . . . . . . . . . . . .\n**6-18**\nEstimating Efficient Portfolios and Frontiers . . . . . . . . . . . . . . . . . . . . . .\n**6-18**\nArrays of PortfolioMAD Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-19**\nSubclassing PortfolioMAD Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-20**\nConventions for Representation of Data . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-20**\n\n**Creating the PortfolioMAD Object** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-22**\nSyntax . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-22**\nPortfolioMAD Problem Sufficiency . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-22**\nPortfolioMAD Function Examples . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-23**",
    "section_title": "MAD Portfolio Optimization Tools",
    "section_hierarchy": [
      "MAD Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1433,
      "word_count": 487,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0105",
    "content": "**Creating the PortfolioMAD Object** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-22**\nSyntax . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-22**\nPortfolioMAD Problem Sufficiency . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-22**\nPortfolioMAD Function Examples . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-23**\n\n**Common Operations on the PortfolioMAD Object** . . . . . . . . . . . . . . . . . .\n**6-29**\nNaming a PortfolioMAD Object . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-29**\nConfiguring the Assets in the Asset Universe . . . . . . . . . . . . . . . . . . . . .\n**6-29**\nSetting Up a List of Asset Identifiers . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-29**\nTruncating and Padding Asset Lists . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-31**\n\n**Setting Up an Initial or Current Portfolio** . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-33**",
    "section_title": "MAD Portfolio Optimization Tools",
    "section_hierarchy": [
      "MAD Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1027,
      "word_count": 349,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0106",
    "content": "**Setting Up an Initial or Current Portfolio** . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-33**\n\n**Asset Returns and Scenarios Using PortfolioMAD Object** . . . . . . . . . . . .\n**6-35**\nHow Stochastic Optimization Works . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-35**\nWhat Are Scenarios? . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-35**\nSetting Scenarios Using the PortfolioMAD Function . . . . . . . . . . . . . . . .\n**6-36**\nSetting Scenarios Using the setScenarios Function . . . . . . . . . . . . . . . . .\n**6-37**\nEstimating the Mean and Covariance of Scenarios . . . . . . . . . . . . . . . . .\n**6-37**\nSimulating Normal Scenarios . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-38**\nSimulating Normal Scenarios from Returns or Prices . . . . . . . . . . . . . . .\n**6-38**\nSimulating Normal Scenarios with Missing Data . . . . . . . . . . . . . . . . . . .\n**6-39**\nSimulating Normal Scenarios from Time Series Data . . . . . . . . . . . . . . .\n**6-41**\nSimulating Normal Scenarios with Mean and Covariance . . . . . . . . . . . .\n**6-43**",
    "section_title": "MAD Portfolio Optimization Tools",
    "section_hierarchy": [
      "MAD Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1139,
      "word_count": 330,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0107",
    "content": "**Asset Returns and Scenarios Using PortfolioMAD Object** . . . . . . . . . . . .\n**6-35**\nHow Stochastic Optimization Works . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-35**\nWhat Are Scenarios? . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-35**\nSetting Scenarios Using the PortfolioMAD Function . . . . . . . . . . . . . . . .\n**6-36**\nSetting Scenarios Using the setScenarios Function . . . . . . . . . . . . . . . . .\n**6-37**\nEstimating the Mean and Covariance of Scenarios . . . . . . . . . . . . . . . . .\n**6-37**\nSimulating Normal Scenarios . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-38**\nSimulating Normal Scenarios from Returns or Prices . . . . . . . . . . . . . . .\n**6-38**\nSimulating Normal Scenarios with Missing Data . . . . . . . . . . . . . . . . . . .\n**6-39**\nSimulating Normal Scenarios from Time Series Data . . . . . . . . . . . . . . .\n**6-41**\nSimulating Normal Scenarios with Mean and Covariance . . . . . . . . . . . .\n**6-43**\n\n**Working with a Riskless Asset** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-45**",
    "section_title": "MAD Portfolio Optimization Tools",
    "section_hierarchy": [
      "MAD Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1144,
      "word_count": 337,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0108",
    "content": "**Working with a Riskless Asset** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-45**\n\n**xvi**\n*Contents*",
    "section_title": "MAD Portfolio Optimization Tools",
    "section_hierarchy": [
      "MAD Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 130,
      "word_count": 42,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0109",
    "content": "**xvi**\n*Contents*\n\n<!-- Page 17 -->",
    "section_title": "MAD Portfolio Optimization Tools",
    "section_hierarchy": [
      "MAD Portfolio Optimization Tools"
    ],
    "page_numbers": [
      17
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 36,
      "word_count": 6,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0110",
    "content": "<!-- Page 17 -->\n\n**Working with Transaction Costs** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-46**\nSetting Transaction Costs Using the PortfolioMAD Function . . . . . . . . . .\n**6-46**\nSetting Transaction Costs Using the setCosts Function . . . . . . . . . . . . . .\n**6-46**\nSetting Transaction Costs with Scalar Expansion . . . . . . . . . . . . . . . . . .\n**6-48**\n\n**Working with MAD Portfolio Constraints Using Defaults** . . . . . . . . . . . .\n**6-50**\nSetting Default Constraints for Portfolio Weights Using PortfolioMAD Object\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-50**\n\n**Working with 'Simple' Bound Constraints Using PortfolioMAD Object** .\n**6-54**\nSetting 'Simple' Bounds Using the PortfolioMAD Function . . . . . . . . . . .\n**6-54**\nSetting 'Simple' Bounds Using the setBounds Function . . . . . . . . . . . . . .\n**6-54**\nSetting 'Simple' Bounds Using the PortfolioMAD Function or setBounds\nFunction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-55**",
    "section_title": "MAD Portfolio Optimization Tools",
    "section_hierarchy": [
      "MAD Portfolio Optimization Tools"
    ],
    "page_numbers": [
      17
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1121,
      "word_count": 299,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0111",
    "content": "**Working with 'Simple' Bound Constraints Using PortfolioMAD Object** .\n**6-54**\nSetting 'Simple' Bounds Using the PortfolioMAD Function . . . . . . . . . . .\n**6-54**\nSetting 'Simple' Bounds Using the setBounds Function . . . . . . . . . . . . . .\n**6-54**\nSetting 'Simple' Bounds Using the PortfolioMAD Function or setBounds\nFunction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-55**\n\n**Working with Budget Constraints Using PortfolioMAD Object** . . . . . . . .\n**6-57**\nSetting Budget Constraints Using the PortfolioMAD Function . . . . . . . . .\n**6-57**\nSetting Budget Constraints Using the setBudget Function . . . . . . . . . . .\n**6-57**\n\n**Working with Conditional Budget Constraints Using PortfolioMAD Object**\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-59**\nSetting Conditional Budget Constraints Using the PortfolioMAD Function\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-59**\nSetting Conditional Budget Constraints Using the setConditionalBudget\nFunction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-59**",
    "section_title": "MAD Portfolio Optimization Tools",
    "section_hierarchy": [
      "MAD Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1265,
      "word_count": 345,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0112",
    "content": "**Working with Conditional Budget Constraints Using PortfolioMAD Object**\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-59**\nSetting Conditional Budget Constraints Using the PortfolioMAD Function\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-59**\nSetting Conditional Budget Constraints Using the setConditionalBudget\nFunction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-59**\n\n**Working with Group Constraints Using PortfolioMAD Object** . . . . . . . . .\n**6-61**\nSetting Group Constraints Using the PortfolioMAD Function . . . . . . . . .\n**6-61**\nSetting Group Constraints Using the setGroups and addGroups Functions\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-61**\n\n**Working with Group Ratio Constraints Using PortfolioMAD Object** . . . .\n**6-64**\nSetting Group Ratio Constraints Using the PortfolioMAD Function . . . . .\n**6-64**\nSetting Group Ratio Constraints Using the setGroupRatio and\naddGroupRatio Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-65**",
    "section_title": "MAD Portfolio Optimization Tools",
    "section_hierarchy": [
      "MAD Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1252,
      "word_count": 353,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0113",
    "content": "**Working with Group Ratio Constraints Using PortfolioMAD Object** . . . .\n**6-64**\nSetting Group Ratio Constraints Using the PortfolioMAD Function . . . . .\n**6-64**\nSetting Group Ratio Constraints Using the setGroupRatio and\naddGroupRatio Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-65**\n\n**Working with Linear Equality Constraints Using PortfolioMAD Object**\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-67**\nSetting Linear Equality Constraints Using the PortfolioMAD Function . .\n**6-67**\nSetting Linear Equality Constraints Using the setEquality and addEquality\nFunctions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-67**\n\n**Working with Linear Inequality Constraints Using PortfolioMAD Object**\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-69**\nSetting Linear Inequality Constraints Using the PortfolioMAD Function .\n**6-69**\nSetting Linear Inequality Constraints Using the setInequality and\naddInequality Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-69**",
    "section_title": "MAD Portfolio Optimization Tools",
    "section_hierarchy": [
      "MAD Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1235,
      "word_count": 328,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0114",
    "content": "**Working with Linear Inequality Constraints Using PortfolioMAD Object**\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-69**\nSetting Linear Inequality Constraints Using the PortfolioMAD Function .\n**6-69**\nSetting Linear Inequality Constraints Using the setInequality and\naddInequality Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-69**\n\n**Working with 'Conditional' BoundType, MinNumAssets, and**\n**MaxNumAssets Constraints Using PortfolioMAD Objects** . . . . . . . . . .\n**6-71**\nSetting 'Conditional' BoundType Constraints Using the setBounds Function\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-71**\nSetting the Limits on the Number of Assets Invested Using the\nsetMinMaxNumAssets Function . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-72**",
    "section_title": "MAD Portfolio Optimization Tools",
    "section_hierarchy": [
      "MAD Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 936,
      "word_count": 249,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0115",
    "content": "**Working with 'Conditional' BoundType, MinNumAssets, and**\n**MaxNumAssets Constraints Using PortfolioMAD Objects** . . . . . . . . . .\n**6-71**\nSetting 'Conditional' BoundType Constraints Using the setBounds Function\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-71**\nSetting the Limits on the Number of Assets Invested Using the\nsetMinMaxNumAssets Function . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-72**\n\n**xvii**",
    "section_title": "MAD Portfolio Optimization Tools",
    "section_hierarchy": [
      "MAD Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 499,
      "word_count": 128,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0116",
    "content": "**xvii**\n\n<!-- Page 18 -->",
    "section_title": "MAD Portfolio Optimization Tools",
    "section_hierarchy": [
      "MAD Portfolio Optimization Tools"
    ],
    "page_numbers": [
      18
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0117",
    "content": "<!-- Page 18 -->\n\n**Working with Average Turnover Constraints Using PortfolioMAD Object**\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-74**\nSetting Average Turnover Constraints Using the PortfolioMAD Function\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-74**\nSetting Average Turnover Constraints Using the setTurnover Function . .\n**6-74**\n\n**Working with One-Way Turnover Constraints Using PortfolioMAD Object**\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-77**\nSetting One-Way Turnover Constraints Using the PortfolioMAD Function\n. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-77**\nSetting Turnover Constraints Using the setOneWayTurnover Function . .\n**6-77**\n\n**Validate the MAD Portfolio Problem** . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-80**\nValidating a MAD Portfolio Set . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-80**\nValidating MAD Portfolios . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-81**",
    "section_title": "MAD Portfolio Optimization Tools",
    "section_hierarchy": [
      "MAD Portfolio Optimization Tools"
    ],
    "page_numbers": [
      18
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1254,
      "word_count": 394,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0118",
    "content": "**Validate the MAD Portfolio Problem** . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-80**\nValidating a MAD Portfolio Set . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-80**\nValidating MAD Portfolios . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-81**\n\n**Estimate Efficient Portfolios Along the Entire Frontier for PortfolioMAD**\n**Object** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-84**\n\n**Obtaining Portfolios Along the Entire Efficient Frontier** . . . . . . . . . . . . .\n**6-85**\n\n**Obtaining Endpoints of the Efficient Frontier** . . . . . . . . . . . . . . . . . . . . .\n**6-87**\n\n**Mixed-Integer MAD Portfolio Optimization Problem** . . . . . . . . . . . . . . . .\n**6-89**\n\n**Obtaining Efficient Portfolios for Target Returns** . . . . . . . . . . . . . . . . . .\n**6-93**\n\n**Obtaining Efficient Portfolios for Target Risks** . . . . . . . . . . . . . . . . . . . . .\n**6-96**",
    "section_title": "MAD Portfolio Optimization Tools",
    "section_hierarchy": [
      "MAD Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1016,
      "word_count": 300,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0119",
    "content": "**Obtaining Efficient Portfolios for Target Risks** . . . . . . . . . . . . . . . . . . . . .\n**6-96**\n\n**Choosing and Controlling the Solver for PortfolioMAD Optimizations** .\n**6-99**\nUsing 'TrustRegionCP' and 'ExtendedCP' SolverTypes . . . . . . . . . . . . . .\n**6-99**\nUsing 'fmincon' SolverType . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-100**\nUsing the Mixed Integer Nonlinear Programming (MINLP) Solver . . . .\n**6-101**\nSolver Guidelines for PortfolioMAD Objects . . . . . . . . . . . . . . . . . . . . .\n**6-101**\n\n**Estimate Efficient Frontiers for PortfolioMAD Object** . . . . . . . . . . . . . .\n**6-105**\nObtaining MAD Portfolio Risks and Returns . . . . . . . . . . . . . . . . . . . . .\n**6-105**\nObtaining the PortfolioMAD Standard Deviation . . . . . . . . . . . . . . . . . .\n**6-106**\n\n**Plotting the Efficient Frontier for a PortfolioMAD Object** . . . . . . . . . . .\n**6-108**\n\n**Postprocessing Results to Set Up Tradable Portfolios** . . . . . . . . . . . . . .\n**6-113**",
    "section_title": "MAD Portfolio Optimization Tools",
    "section_hierarchy": [
      "MAD Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1023,
      "word_count": 250,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0120",
    "content": "**Postprocessing Results to Set Up Tradable Portfolios** . . . . . . . . . . . . . .\n**6-113**\n\n**Working with Other Portfolio Objects** . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-115**\n\n**Troubleshooting MAD Portfolio Optimization Results** . . . . . . . . . . . . . .\n**6-118**\nPortfolioMAD Object Destroyed When Modifying . . . . . . . . . . . . . . . . .\n**6-118**\nMatrix Incompatibility and \"Non-Conformable\" Errors . . . . . . . . . . . . .\n**6-118**\nMissing Data Estimation Fails . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-118**\nmad_optim_transform Errors . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-118**\nEfficient Portfolios Do Not Make Sense . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-119**",
    "section_title": "MAD Portfolio Optimization Tools",
    "section_hierarchy": [
      "MAD Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 775,
      "word_count": 221,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0121",
    "content": "**Troubleshooting MAD Portfolio Optimization Results** . . . . . . . . . . . . . .\n**6-118**\nPortfolioMAD Object Destroyed When Modifying . . . . . . . . . . . . . . . . .\n**6-118**\nMatrix Incompatibility and \"Non-Conformable\" Errors . . . . . . . . . . . . .\n**6-118**\nMissing Data Estimation Fails . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-118**\nmad_optim_transform Errors . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-118**\nEfficient Portfolios Do Not Make Sense . . . . . . . . . . . . . . . . . . . . . . . . .\n**6-119**\n\n**xviii**\n*Contents*",
    "section_title": "MAD Portfolio Optimization Tools",
    "section_hierarchy": [
      "MAD Portfolio Optimization Tools"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 595,
      "word_count": 168,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0122",
    "content": "**xviii**\n*Contents*\n\n<!-- Page 19 -->",
    "section_title": "MAD Portfolio Optimization Tools",
    "section_hierarchy": [
      "MAD Portfolio Optimization Tools"
    ],
    "page_numbers": [
      19
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 38,
      "word_count": 6,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0123",
    "content": "7",
    "section_title": "Investment Performance Metrics",
    "section_hierarchy": [
      "Investment Performance Metrics"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1,
      "word_count": 1,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0124",
    "content": "**Performance Metrics Overview** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**7-2**\nPerformance Metrics Types . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**7-2**\n\n**Performance Metrics Illustration** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**7-3**\n\n**Using the Sharpe Ratio** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**7-5**\n\n**Using the Information Ratio** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**7-7**\n\n**Using Tracking Error** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**7-8**\n\n**Using Risk-Adjusted Return** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**7-9**\n\n**Using Sample and Expected Lower Partial Moments** . . . . . . . . . . . . . . . .\n**7-11**\nIntroduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**7-11**\nSample Lower Partial Moments . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**7-11**\nExpected Lower Partial Moments . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**7-12**",
    "section_title": "Investment Performance Metrics",
    "section_hierarchy": [
      "Investment Performance Metrics"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1201,
      "word_count": 434,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0125",
    "content": "**Using Sample and Expected Lower Partial Moments** . . . . . . . . . . . . . . . .\n**7-11**\nIntroduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**7-11**\nSample Lower Partial Moments . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**7-11**\nExpected Lower Partial Moments . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**7-12**\n\n**Using Maximum and Expected Maximum Drawdown** . . . . . . . . . . . . . . . .\n**7-14**\nIntroduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**7-14**\nMaximum Drawdown . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**7-14**\nExpected Maximum Drawdown . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**7-16**",
    "section_title": "Investment Performance Metrics",
    "section_hierarchy": [
      "Investment Performance Metrics"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 813,
      "word_count": 292,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0126",
    "content": "8",
    "section_title": "Credit Risk Analysis",
    "section_hierarchy": [
      "Credit Risk Analysis"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1,
      "word_count": 1,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0127",
    "content": "**Estimation of Transition Probabilities** . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-2**\nIntroduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-2**\nEstimate Transition Probabilities . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-2**\nEstimate Transition Probabilities for Different Rating Scales . . . . . . . . . .\n**8-4**\nWorking with a Transition Matrix Containing NR Rating . . . . . . . . . . . . . .\n**8-6**\nEstimate Point-in-Time and Through-the-Cycle Probabilities . . . . . . . . . .\n**8-10**\nEstimate t-Year Default Probabilities . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-12**\nEstimate Bootstrap Confidence Intervals . . . . . . . . . . . . . . . . . . . . . . . .\n**8-13**\nGroup Credit Ratings . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-15**\nWork with Nonsquare Matrices . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-17**\nRemove Outliers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-18**\nEstimate Probabilities for Different Segments . . . . . . . . . . . . . . . . . . . . .\n**8-19**\nWork with Large Datasets . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-20**",
    "section_title": "Credit Risk Analysis",
    "section_hierarchy": [
      "Credit Risk Analysis"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1319,
      "word_count": 431,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0128",
    "content": "**Forecasting Corporate Default Rates** . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-23**",
    "section_title": "Credit Risk Analysis",
    "section_hierarchy": [
      "Credit Risk Analysis"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 106,
      "word_count": 34,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0129",
    "content": "**Credit Quality Thresholds** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-45**\nIntroduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-45**\nCompute Credit Quality Thresholds . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-45**\nVisualize Credit Quality Thresholds . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-46**",
    "section_title": "Credit Risk Analysis",
    "section_hierarchy": [
      "Credit Risk Analysis"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 428,
      "word_count": 156,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0130",
    "content": "**xix**",
    "section_title": "Credit Risk Analysis",
    "section_hierarchy": [
      "Credit Risk Analysis"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 7,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0131",
    "content": "<!-- Page 20 -->",
    "section_title": "Credit Risk Analysis",
    "section_hierarchy": [
      "Credit Risk Analysis"
    ],
    "page_numbers": [
      20
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0132",
    "content": "**About Credit Scorecards** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-49**\nWhat Is a Credit Scorecard? . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-49**\nCredit Scorecard Development Process . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-50**\n\n**Credit Scorecard Modeling Workflow** . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-52**\n\n**Credit Scorecard Modeling Using Observation Weights** . . . . . . . . . . . . .\n**8-55**\n\n**Credit Scorecard Modeling with Missing Values** . . . . . . . . . . . . . . . . . . .\n**8-57**\n\n**Troubleshooting Credit Scorecard Results** . . . . . . . . . . . . . . . . . . . . . . . .\n**8-64**\nPredictor Name Is Unspecified and the Parser Returns an Error . . . . . . .\n**8-64**\nUsing bininfo or plotbins Before Binning . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-64**\nIf Categorical Data Is Given as Numeric . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-66**\nNaNs Returned When Scoring a \u201cTest\u201d Dataset . . . . . . . . . . . . . . . . . . .\n**8-68**",
    "section_title": "Credit Risk Analysis",
    "section_hierarchy": [
      "Credit Risk Analysis"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1088,
      "word_count": 331,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0133",
    "content": "**Troubleshooting Credit Scorecard Results** . . . . . . . . . . . . . . . . . . . . . . . .\n**8-64**\nPredictor Name Is Unspecified and the Parser Returns an Error . . . . . . .\n**8-64**\nUsing bininfo or plotbins Before Binning . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-64**\nIf Categorical Data Is Given as Numeric . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-66**\nNaNs Returned When Scoring a \u201cTest\u201d Dataset . . . . . . . . . . . . . . . . . . .\n**8-68**\n\n**Case Study for Credit Scorecard Analysis** . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-71**\n\n**Credit Scorecards with Constrained Logistic Regression Coefficients** . .\n**8-91**\n\n**Credit Default Swap (CDS)** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-100**",
    "section_title": "Credit Risk Analysis",
    "section_hierarchy": [
      "Credit Risk Analysis"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 780,
      "word_count": 222,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0134",
    "content": "**Credit Default Swap (CDS)** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-100**\n\n**Bootstrapping a Default Probability Curve** . . . . . . . . . . . . . . . . . . . . . . .\n**8-101**\n\n**Finding Breakeven Spread for New CDS Contract** . . . . . . . . . . . . . . . . .\n**8-104**\n\n**Valuing an Existing CDS Contract** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-107**",
    "section_title": "Credit Risk Analysis",
    "section_hierarchy": [
      "Credit Risk Analysis"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 417,
      "word_count": 131,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0135",
    "content": "**Valuing an Existing CDS Contract** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-107**\n\n**Converting from Running to Upfront** . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-109**\n\n**Bootstrapping from Inverted Market Curves** . . . . . . . . . . . . . . . . . . . . .\n**8-111**",
    "section_title": "Credit Risk Analysis",
    "section_hierarchy": [
      "Credit Risk Analysis"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 309,
      "word_count": 96,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0136",
    "content": "**Bootstrapping from Inverted Market Curves** . . . . . . . . . . . . . . . . . . . . .\n**8-111**\n\n**Visualize Transitions Data for transprob** . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-114**",
    "section_title": "Credit Risk Analysis",
    "section_hierarchy": [
      "Credit Risk Analysis"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 203,
      "word_count": 58,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0137",
    "content": "**Visualize Transitions Data for transprob** . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-114**\n\n**Impute Missing Data in the Credit Scorecard Workflow Using the k-**\n**Nearest Neighbors Algorithm** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-121**\n\n**Impute Missing Data in the Credit Scorecard Workflow Using the Random**\n**Forest Algorithm** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-127**\n\n**Treat Missing Data in a Credit Scorecard Workflow Using MATLAB**\n**fillmissing** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**8-132**",
    "section_title": "Credit Risk Analysis",
    "section_hierarchy": [
      "Credit Risk Analysis"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 659,
      "word_count": 193,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0138",
    "content": "9",
    "section_title": "Regression with Missing Data",
    "section_hierarchy": [
      "Regression with Missing Data"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1,
      "word_count": 1,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0139",
    "content": "**Multivariate Normal Regression** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-2**\nIntroduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-2**\nMultivariate Normal Linear Regression . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-2**\nMaximum Likelihood Estimation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-3**\nSpecial Case of Multiple Linear Regression Model . . . . . . . . . . . . . . . . . .\n**9-4**",
    "section_title": "Regression with Missing Data",
    "section_hierarchy": [
      "Regression with Missing Data"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 516,
      "word_count": 179,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0140",
    "content": "**xx**\n*Contents*",
    "section_title": "Regression with Missing Data",
    "section_hierarchy": [
      "Regression with Missing Data"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 17,
      "word_count": 2,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0141",
    "content": "<!-- Page 21 -->",
    "section_title": "Regression with Missing Data",
    "section_hierarchy": [
      "Regression with Missing Data"
    ],
    "page_numbers": [
      21
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0142",
    "content": "Least-Squares Regression . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-4**\nMean and Covariance Estimation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-4**\nConvergence . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-4**\nFisher Information . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-4**\nStatistical Tests . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-5**",
    "section_title": "Regression with Missing Data",
    "section_hierarchy": [
      "Regression with Missing Data"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 544,
      "word_count": 216,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0143",
    "content": "**Maximum Likelihood Estimation with Missing Data** . . . . . . . . . . . . . . . . .\n**9-7**\nIntroduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-7**\nECM Algorithm . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-7**\nStandard Errors . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-8**\nData Augmentation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-8**\n\n**Multivariate Normal Regression Functions** . . . . . . . . . . . . . . . . . . . . . . .\n**9-10**\nMultivariate Normal Regression Without Missing Data . . . . . . . . . . . . . .\n**9-11**\nMultivariate Normal Regression With Missing Data . . . . . . . . . . . . . . . .\n**9-11**\nLeast-Squares Regression With Missing Data . . . . . . . . . . . . . . . . . . . . .\n**9-11**\nMultivariate Normal Parameter Estimation With Missing Data . . . . . . . .\n**9-12**\nSupport Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-12**",
    "section_title": "Regression with Missing Data",
    "section_hierarchy": [
      "Regression with Missing Data"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1109,
      "word_count": 372,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0144",
    "content": "**Multivariate Normal Regression Functions** . . . . . . . . . . . . . . . . . . . . . . .\n**9-10**\nMultivariate Normal Regression Without Missing Data . . . . . . . . . . . . . .\n**9-11**\nMultivariate Normal Regression With Missing Data . . . . . . . . . . . . . . . .\n**9-11**\nLeast-Squares Regression With Missing Data . . . . . . . . . . . . . . . . . . . . .\n**9-11**\nMultivariate Normal Parameter Estimation With Missing Data . . . . . . . .\n**9-12**\nSupport Functions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-12**\n\n**Multivariate Normal Regression Types** . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-13**\nRegressions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-13**\nMultivariate Normal Regression . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-13**\nMultivariate Normal Regression Without Missing Data . . . . . . . . . . . . . .\n**9-13**\nMultivariate Normal Regression With Missing Data . . . . . . . . . . . . . . . .\n**9-14**\nLeast-Squares Regression . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-14**\nLeast-Squares Regression Without Missing Data . . . . . . . . . . . . . . . . . . .\n**9-14**\nLeast-Squares Regression With Missing Data . . . . . . . . . . . . . . . . . . . . .\n**9-14**\nCovariance-Weighted Least Squares . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-14**\nCovariance-Weighted Least Squares Without Missing Data . . . . . . . . . . .\n**9-15**\nCovariance-Weighted Least Squares With Missing Data . . . . . . . . . . . . .\n**9-15**\nFeasible Generalized Least Squares . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-15**\nFeasible Generalized Least Squares Without Missing Data . . . . . . . . . . .\n**9-15**\nFeasible Generalized Least Squares With Missing Data . . . . . . . . . . . . . .\n**9-16**\nSeemingly Unrelated Regression . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-16**\nSeemingly Unrelated Regression Without Missing Data . . . . . . . . . . . . .\n**9-17**\nSeemingly Unrelated Regression With Missing Data . . . . . . . . . . . . . . . .\n**9-17**\nMean and Covariance Parameter Estimation . . . . . . . . . . . . . . . . . . . . . .\n**9-17**",
    "section_title": "Regression with Missing Data",
    "section_hierarchy": [
      "Regression with Missing Data"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 2277,
      "word_count": 658,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0145",
    "content": "**Multivariate Normal Regression Types** . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-13**\nRegressions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-13**\nMultivariate Normal Regression . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-13**\nMultivariate Normal Regression Without Missing Data . . . . . . . . . . . . . .\n**9-13**\nMultivariate Normal Regression With Missing Data . . . . . . . . . . . . . . . .\n**9-14**\nLeast-Squares Regression . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-14**\nLeast-Squares Regression Without Missing Data . . . . . . . . . . . . . . . . . . .\n**9-14**\nLeast-Squares Regression With Missing Data . . . . . . . . . . . . . . . . . . . . .\n**9-14**\nCovariance-Weighted Least Squares . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-14**\nCovariance-Weighted Least Squares Without Missing Data . . . . . . . . . . .\n**9-15**\nCovariance-Weighted Least Squares With Missing Data . . . . . . . . . . . . .\n**9-15**\nFeasible Generalized Least Squares . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-15**\nFeasible Generalized Least Squares Without Missing Data . . . . . . . . . . .\n**9-15**\nFeasible Generalized Least Squares With Missing Data . . . . . . . . . . . . . .\n**9-16**\nSeemingly Unrelated Regression . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-16**\nSeemingly Unrelated Regression Without Missing Data . . . . . . . . . . . . .\n**9-17**\nSeemingly Unrelated Regression With Missing Data . . . . . . . . . . . . . . . .\n**9-17**\nMean and Covariance Parameter Estimation . . . . . . . . . . . . . . . . . . . . . .\n**9-17**\n\n**Troubleshooting Multivariate Normal Regression** . . . . . . . . . . . . . . . . . .\n**9-18**\nBiased Estimates . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-18**\nRequirements . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-18**\nSlow Convergence . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-18**\nNonrandom Residuals . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-19**\nNonconvergence . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-19**",
    "section_title": "Regression with Missing Data",
    "section_hierarchy": [
      "Regression with Missing Data"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 2352,
      "word_count": 744,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0146",
    "content": "**Troubleshooting Multivariate Normal Regression** . . . . . . . . . . . . . . . . . .\n**9-18**\nBiased Estimates . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-18**\nRequirements . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-18**\nSlow Convergence . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-18**\nNonrandom Residuals . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-19**\nNonconvergence . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-19**\n\n**Portfolios with Missing Data** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-21**\n\n**Valuation with Missing Data** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-26**\nIntroduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-26**\nCapital Asset Pricing Model . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-26**\nEstimation of the CAPM . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-27**\nEstimation with Missing Data . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-27**\nEstimation of Some Technology Stock Betas . . . . . . . . . . . . . . . . . . . . . .\n**9-27**\nGrouped Estimation of Some Technology Stock Betas . . . . . . . . . . . . . . .\n**9-30**\nReferences . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-32**",
    "section_title": "Regression with Missing Data",
    "section_hierarchy": [
      "Regression with Missing Data"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1594,
      "word_count": 594,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0147",
    "content": "**Valuation with Missing Data** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-26**\nIntroduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-26**\nCapital Asset Pricing Model . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-26**\nEstimation of the CAPM . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-27**\nEstimation with Missing Data . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-27**\nEstimation of Some Technology Stock Betas . . . . . . . . . . . . . . . . . . . . . .\n**9-27**\nGrouped Estimation of Some Technology Stock Betas . . . . . . . . . . . . . . .\n**9-30**\nReferences . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**9-32**\n\n**xxi**",
    "section_title": "Regression with Missing Data",
    "section_hierarchy": [
      "Regression with Missing Data"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 848,
      "word_count": 310,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0148",
    "content": "**xxi**\n\n<!-- Page 22 -->",
    "section_title": "Regression with Missing Data",
    "section_hierarchy": [
      "Regression with Missing Data"
    ],
    "page_numbers": [
      22
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 25,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0149",
    "content": "<!-- Page 22 -->\n\n**Capital Asset Pricing Model with Missing Data** . . . . . . . . . . . . . . . . . . . .\n**9-34**",
    "section_title": "Regression with Missing Data",
    "section_hierarchy": [
      "Regression with Missing Data"
    ],
    "page_numbers": [
      22
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 116,
      "word_count": 32,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0150",
    "content": "10",
    "section_title": "Solving Sample Problems",
    "section_hierarchy": [
      "Solving Sample Problems"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 2,
      "word_count": 1,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0151",
    "content": "**Sensitivity of Bond Prices to Interest Rates** . . . . . . . . . . . . . . . . . . . . . . .\n**10-2**\n\n**Bond Portfolio for Hedging Duration and Convexity** . . . . . . . . . . . . . . . .\n**10-6**\n\n**Bond Prices and Yield Curve Parallel Shifts** . . . . . . . . . . . . . . . . . . . . . . .\n**10-9**\n\n**Bond Prices and Yield Curve Nonparallel Shifts** . . . . . . . . . . . . . . . . . . .\n**10-12**",
    "section_title": "Solving Sample Problems",
    "section_hierarchy": [
      "Solving Sample Problems"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 403,
      "word_count": 113,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0152",
    "content": "**Bond Prices and Yield Curve Nonparallel Shifts** . . . . . . . . . . . . . . . . . . .\n**10-12**\n\n**Greek-Neutral Portfolios of European Stock Options** . . . . . . . . . . . . . . .\n**10-14**\n\n**Term Structure Analysis and Interest-Rate Swaps** . . . . . . . . . . . . . . . . .\n**10-18**",
    "section_title": "Solving Sample Problems",
    "section_hierarchy": [
      "Solving Sample Problems"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 291,
      "word_count": 73,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0153",
    "content": "**Term Structure Analysis and Interest-Rate Swaps** . . . . . . . . . . . . . . . . .\n**10-18**\n\n**Plotting an Efficient Frontier Using portopt** . . . . . . . . . . . . . . . . . . . . . .\n**10-22**\n\n**Plotting Sensitivities of an Option** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**10-25**\n\n**Plotting Sensitivities of a Portfolio of Options** . . . . . . . . . . . . . . . . . . . .\n**10-27**\n\n**Bond Portfolio Optimization Using Portfolio Object** . . . . . . . . . . . . . . .\n**10-30**\n\n**Hedge Options Using Reinforcement Learning Toolbox** . . . . . . . . . . . .\n**10-40**\n\n**Hedge Using Monte Carlo Simulation** . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**10-49**",
    "section_title": "Solving Sample Problems",
    "section_hierarchy": [
      "Solving Sample Problems"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 704,
      "word_count": 191,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0154",
    "content": "**Hedge Using Monte Carlo Simulation** . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**10-49**\n\n**Using Extreme Value Theory and Copula Fitting to Generate Synthetic**\n**Data** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**10-61**",
    "section_title": "Solving Sample Problems",
    "section_hierarchy": [
      "Solving Sample Problems"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 298,
      "word_count": 97,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0155",
    "content": "11",
    "section_title": "Using Financial Timetables",
    "section_hierarchy": [
      "Using Financial Timetables"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 2,
      "word_count": 1,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0156",
    "content": "**Convert Financial Time Series Objects (fints) to Timetables** . . . . . . . . .\n**11-2**\nCreate Time Series . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**11-2**\nIndex an Object . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**11-3**\nTransform Time Series . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**11-3**\nConvert Time Series . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**11-4**\nMerge Time Series . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**11-5**\nAnalyze Time Series . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**11-5**\nData Extraction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**11-6**\n\n**Use Timetables in Finance** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**11-7**",
    "section_title": "Using Financial Timetables",
    "section_hierarchy": [
      "Using Financial Timetables"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 970,
      "word_count": 373,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0157",
    "content": "**Use Timetables in Finance** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**11-7**\n\n**xxii**\n*Contents*",
    "section_title": "Using Financial Timetables",
    "section_hierarchy": [
      "Using Financial Timetables"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 133,
      "word_count": 44,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0158",
    "content": "**xxii**\n*Contents*\n\n<!-- Page 23 -->",
    "section_title": "Using Financial Timetables",
    "section_hierarchy": [
      "Using Financial Timetables"
    ],
    "page_numbers": [
      23
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 37,
      "word_count": 6,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0159",
    "content": "12",
    "section_title": "Trading Date Utilities",
    "section_hierarchy": [
      "Trading Date Utilities"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 2,
      "word_count": 1,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0160",
    "content": "**Trading Calendars User Interface** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**12-2**",
    "section_title": "Trading Date Utilities",
    "section_hierarchy": [
      "Trading Date Utilities"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 107,
      "word_count": 36,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0161",
    "content": "**UICalendar User Interface** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**12-4**\nUsing UICalendar in Standalone Mode . . . . . . . . . . . . . . . . . . . . . . . . . .\n**12-4**\nUsing UICalendar with an Application . . . . . . . . . . . . . . . . . . . . . . . . . .\n**12-4**",
    "section_title": "Trading Date Utilities",
    "section_hierarchy": [
      "Trading Date Utilities"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 307,
      "word_count": 105,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0162",
    "content": "13",
    "section_title": "Technical Analysis",
    "section_hierarchy": [
      "Technical Analysis"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 2,
      "word_count": 1,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0163",
    "content": "**Technical Indicators** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**13-2**",
    "section_title": "Technical Analysis",
    "section_hierarchy": [
      "Technical Analysis"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 117,
      "word_count": 45,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0164",
    "content": "14",
    "section_title": "Stochastic Differential Equations",
    "section_hierarchy": [
      "Stochastic Differential Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 2,
      "word_count": 1,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0165",
    "content": "**SDEs** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-2**\nSDE Modeling . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-2**\nTrials vs. Paths . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-3**\nNTrials, NPeriods, and NSteps . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-3**\n\n**SDE Class Hierarchy** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-5**\n\n**SDE Models** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-7**\nIntroduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-7**\nCreating SDE Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-7**\nDrift and Diffusion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-10**\nAvailable SDE Models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-11**\nSDE Simulation and Interpolation Methods . . . . . . . . . . . . . . . . . . . . . .\n**14-13**",
    "section_title": "Stochastic Differential Equations",
    "section_hierarchy": [
      "Stochastic Differential Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1229,
      "word_count": 492,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0166",
    "content": "**SDE Models** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-7**\nIntroduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-7**\nCreating SDE Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-7**\nDrift and Diffusion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-10**\nAvailable SDE Models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-11**\nSDE Simulation and Interpolation Methods . . . . . . . . . . . . . . . . . . . . . .\n**14-13**\n\n**Base SDE Models** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-16**\nOverview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-16**\nSpecify Base Stochastic Differential Equation (SDE) Model . . . . . . . . . .\n**14-16**\n\n**Drift and Diffusion Models** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-19**\nOverview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-19**\nSpecify Drift and Diffusion Rate Functions . . . . . . . . . . . . . . . . . . . . . .\n**14-19**\nSpecify SDEDDO with Drift and Diffusion Functions . . . . . . . . . . . . . . .\n**14-20**",
    "section_title": "Stochastic Differential Equations",
    "section_hierarchy": [
      "Stochastic Differential Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1389,
      "word_count": 514,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0167",
    "content": "**Drift and Diffusion Models** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-19**\nOverview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-19**\nSpecify Drift and Diffusion Rate Functions . . . . . . . . . . . . . . . . . . . . . .\n**14-19**\nSpecify SDEDDO with Drift and Diffusion Functions . . . . . . . . . . . . . . .\n**14-20**\n\n**Linear Drift Models** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-22**\nOverview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-22**\nSpecify SDELD Model . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-22**\n\n**Parametric Models** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-24**\nCreating Brownian Motion (BM) Models . . . . . . . . . . . . . . . . . . . . . . . .\n**14-24**\nSpecify Brownian Motion Model . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-24**\nCreating Constant Elasticity of Variance (CEV) Models . . . . . . . . . . . . .\n**14-25**",
    "section_title": "Stochastic Differential Equations",
    "section_hierarchy": [
      "Stochastic Differential Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1152,
      "word_count": 410,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0168",
    "content": "**Parametric Models** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-24**\nCreating Brownian Motion (BM) Models . . . . . . . . . . . . . . . . . . . . . . . .\n**14-24**\nSpecify Brownian Motion Model . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-24**\nCreating Constant Elasticity of Variance (CEV) Models . . . . . . . . . . . . .\n**14-25**\n\n**xxiii**",
    "section_title": "Stochastic Differential Equations",
    "section_hierarchy": [
      "Stochastic Differential Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 411,
      "word_count": 132,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0169",
    "content": "**xxiii**\n\n<!-- Page 24 -->",
    "section_title": "Stochastic Differential Equations",
    "section_hierarchy": [
      "Stochastic Differential Equations"
    ],
    "page_numbers": [
      24
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 27,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0170",
    "content": "<!-- Page 24 -->\n\nCreating Geometric Brownian Motion (GBM) Models . . . . . . . . . . . . . .\n**14-25**\nCreating Stochastic Differential Equations from Mean-Reverting Drift\n(SDEMRD) Models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-26**\nCreating Cox-Ingersoll-Ross (CIR) Square Root Diffusion Models . . . . .\n**14-27**\nCreating Hull-White/Vasicek (HWV) Gaussian Diffusion Models . . . . . . .\n**14-28**\nCreating Heston Stochastic Volatility Models . . . . . . . . . . . . . . . . . . . .\n**14-29**",
    "section_title": "Stochastic Differential Equations",
    "section_hierarchy": [
      "Stochastic Differential Equations"
    ],
    "page_numbers": [
      24
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 536,
      "word_count": 126,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0171",
    "content": "Creating Geometric Brownian Motion (GBM) Models . . . . . . . . . . . . . .\n**14-25**\nCreating Stochastic Differential Equations from Mean-Reverting Drift\n(SDEMRD) Models . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-26**\nCreating Cox-Ingersoll-Ross (CIR) Square Root Diffusion Models . . . . .\n**14-27**\nCreating Hull-White/Vasicek (HWV) Gaussian Diffusion Models . . . . . . .\n**14-28**\nCreating Heston Stochastic Volatility Models . . . . . . . . . . . . . . . . . . . .\n**14-29**\n\n**Simulating Equity Prices** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-31**\nSimulating Multidimensional Market Models . . . . . . . . . . . . . . . . . . . .\n**14-31**\nInduce Dependence and Correlation Between States . . . . . . . . . . . . . .\n**14-41**\nDynamic Behavior of Market Parameters . . . . . . . . . . . . . . . . . . . . . . .\n**14-43**\nPrice European Stock Options Using Monte Carlo Simulation . . . . . . . .\n**14-47**\n\n**Simulating Interest Rates** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-50**\nSimulate Interest Rates Through Interpolation . . . . . . . . . . . . . . . . . . .\n**14-50**\nSimulate Positive Interest Rates . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-54**",
    "section_title": "Stochastic Differential Equations",
    "section_hierarchy": [
      "Stochastic Differential Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1301,
      "word_count": 356,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0172",
    "content": "**Simulating Interest Rates** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-50**\nSimulate Interest Rates Through Interpolation . . . . . . . . . . . . . . . . . . .\n**14-50**\nSimulate Positive Interest Rates . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-54**\n\n**Stratified Sampling** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-58**\n\n**Quasi-Monte Carlo Simulation** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-63**",
    "section_title": "Stochastic Differential Equations",
    "section_hierarchy": [
      "Stochastic Differential Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 539,
      "word_count": 183,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0173",
    "content": "**Quasi-Monte Carlo Simulation** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-63**\n\n**Performance Considerations** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-65**\nManaging Memory . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-65**\nEnhancing Performance . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-66**\nOptimizing Accuracy: About Solution Precision and Error . . . . . . . . . . .\n**14-66**",
    "section_title": "Stochastic Differential Equations",
    "section_hierarchy": [
      "Stochastic Differential Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 516,
      "word_count": 175,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0174",
    "content": "**Performance Considerations** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-65**\nManaging Memory . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-65**\nEnhancing Performance . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-66**\nOptimizing Accuracy: About Solution Precision and Error . . . . . . . . . . .\n**14-66**\n\n**Price American Basket Options Using Standard Monte Carlo and Quasi-**\n**Monte Carlo Simulation** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-71**",
    "section_title": "Stochastic Differential Equations",
    "section_hierarchy": [
      "Stochastic Differential Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 588,
      "word_count": 188,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0175",
    "content": "**Price American Basket Options Using Standard Monte Carlo and Quasi-**\n**Monte Carlo Simulation** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-71**\n\n**Volatility Modeling for Soft Commodities** . . . . . . . . . . . . . . . . . . . . . . . .\n**14-88**\n\n**Improving Performance of Monte Carlo Simulation with Parallel**\n**Computing** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**14-111**",
    "section_title": "Stochastic Differential Equations",
    "section_hierarchy": [
      "Stochastic Differential Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 468,
      "word_count": 136,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0176",
    "content": "15",
    "section_title": "Functions",
    "section_hierarchy": [
      "Functions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 2,
      "word_count": 1,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0177",
    "content": "A",
    "section_title": "Bibliography",
    "section_hierarchy": [
      "Bibliography"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1,
      "word_count": 1,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0178",
    "content": "**Bibliography** . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**A-2**\nBond Pricing and Yields . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**A-2**\nTerm Structure of Interest Rates . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**A-2**\nDerivatives Pricing and Yields . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**A-3**\nPortfolio Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**A-3**\nInvestment Performance Metrics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**A-3**\nFinancial Statistics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**A-4**\nStandard References . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**A-4**\nCredit Risk Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**A-5**",
    "section_title": "Bibliography",
    "section_hierarchy": [
      "Bibliography"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 984,
      "word_count": 383,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0179",
    "content": "**xxiv**\n*Contents*",
    "section_title": "Bibliography",
    "section_hierarchy": [
      "Bibliography"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 19,
      "word_count": 2,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0180",
    "content": "<!-- Page 25 -->",
    "section_title": "Bibliography",
    "section_hierarchy": [
      "Bibliography"
    ],
    "page_numbers": [
      25
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0181",
    "content": "Credit Derivatives . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**A-5**\nPortfolio Optimization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**A-5**\nStochastic Differential Equations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**A-6**\nLife Tables . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n**A-6**",
    "section_title": "Bibliography",
    "section_hierarchy": [
      "Bibliography"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 441,
      "word_count": 174,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0182",
    "content": "**xxv**",
    "section_title": "Bibliography",
    "section_hierarchy": [
      "Bibliography"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 7,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0183",
    "content": "<!-- Page 26 -->\n\n<!-- Page 27 -->",
    "section_title": "Bibliography",
    "section_hierarchy": [
      "Bibliography"
    ],
    "page_numbers": [
      26
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 34,
      "word_count": 8,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0184",
    "content": "\u2022\n\u201cFinancial Toolbox Product Description\u201d on page 1-2",
    "section_title": "Getting Started",
    "section_hierarchy": [
      "Getting Started"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 53,
      "word_count": 8,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0185",
    "content": "\u2022\n\u201cExpected Users\u201d on page 1-3",
    "section_title": "Getting Started",
    "section_hierarchy": [
      "Getting Started"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 30,
      "word_count": 6,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0186",
    "content": "\u2022\n\u201cAnalyze Sets of Numbers Using Matrix Functions\u201d on page 1-4\n\n\u2022\n\u201cMatrix Algebra Refresher\u201d on page 1-7",
    "section_title": "Getting Started",
    "section_hierarchy": [
      "Getting Started"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 104,
      "word_count": 18,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0187",
    "content": "\u2022\n\u201cMatrix Algebra Refresher\u201d on page 1-7\n\n\u2022\n\u201cUsing Input and Output Arguments with Functions\u201d on page 1-15",
    "section_title": "Getting Started",
    "section_hierarchy": [
      "Getting Started"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 106,
      "word_count": 18,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0188",
    "content": "<!-- Page 28 -->",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      28
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0189",
    "content": "Analyze financial data and develop financial models\n\nFinancial Toolbox provides functions for the mathematical modeling and statistical analysis of\nfinancial data. You can analyze, backtest, and optimize investment portfolios taking into account\nturnover, transaction costs, semi-continuous constraints, and minimum or maximum number of\nassets. The toolbox enables you to estimate risk, model credit scorecards, analyze yield curves, price\nfixed-income instruments and European options, and measure investment performance.",
    "section_title": "Financial Toolbox Product Description",
    "section_hierarchy": [
      "Financial Toolbox Product Description"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 522,
      "word_count": 67,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0190",
    "content": "Financial Toolbox provides functions for the mathematical modeling and statistical analysis of\nfinancial data. You can analyze, backtest, and optimize investment portfolios taking into account\nturnover, transaction costs, semi-continuous constraints, and minimum or maximum number of\nassets. The toolbox enables you to estimate risk, model credit scorecards, analyze yield curves, price\nfixed-income instruments and European options, and measure investment performance.\n\nStochastic differential equation (SDE) tools let you model and simulate a variety of stochastic\nprocesses. Time series analysis functions let you perform transformations or regressions with missing\ndata and convert between different trading calendars and day-count conventions.",
    "section_title": "Financial Toolbox Product Description",
    "section_hierarchy": [
      "Financial Toolbox Product Description"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 748,
      "word_count": 97,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0191",
    "content": "Getting Started",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 15,
      "word_count": 2,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0192",
    "content": "**1-2**",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 7,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0193",
    "content": "<!-- Page 29 -->",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      29
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0194",
    "content": "In general, this guide assumes experience working with financial derivatives and some familiarity\nwith the underlying models.",
    "section_title": "Expected Users",
    "section_hierarchy": [
      "Expected Users"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 125,
      "word_count": 17,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0195",
    "content": "In designing Financial Toolbox documentation, we assume that your title is like one of these:",
    "section_title": "Expected Users",
    "section_hierarchy": [
      "Expected Users"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 93,
      "word_count": 15,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0196",
    "content": "\u2022\nAnalyst, quantitative analyst",
    "section_title": "Expected Users",
    "section_hierarchy": [
      "Expected Users"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 31,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0197",
    "content": "\u2022\nRisk manager\n\n\u2022\nPortfolio manager",
    "section_title": "Expected Users",
    "section_hierarchy": [
      "Expected Users"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 35,
      "word_count": 6,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0198",
    "content": "\u2022\nPortfolio manager\n\n\u2022\nAsset allocator\n\n\u2022\nFinancial engineer\n\n\u2022\nTrader",
    "section_title": "Expected Users",
    "section_hierarchy": [
      "Expected Users"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 70,
      "word_count": 11,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0199",
    "content": "\u2022\nTrader\n\n\u2022\nStudent, professor, or other academic",
    "section_title": "Expected Users",
    "section_hierarchy": [
      "Expected Users"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 49,
      "word_count": 8,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0200",
    "content": "\u2022\nStudent, professor, or other academic\n\nWe also assume that your background, education, training, and responsibilities match some aspects\nof this profile:",
    "section_title": "Expected Users",
    "section_hierarchy": [
      "Expected Users"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 155,
      "word_count": 22,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0201",
    "content": "We also assume that your background, education, training, and responsibilities match some aspects\nof this profile:\n\n\u2022\nFinance, economics, perhaps accounting\n\n\u2022\nEngineering, mathematics, physics, other quantitative sciences",
    "section_title": "Expected Users",
    "section_hierarchy": [
      "Expected Users"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 222,
      "word_count": 28,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0202",
    "content": "\u2022\nEngineering, mathematics, physics, other quantitative sciences\n\n\u2022\nFocus on quantitative approaches to financial problems",
    "section_title": "Expected Users",
    "section_hierarchy": [
      "Expected Users"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 122,
      "word_count": 15,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0203",
    "content": "\u2022\nFocus on quantitative approaches to financial problems\n\nExpected Users",
    "section_title": "Expected Users",
    "section_hierarchy": [
      "Expected Users"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 72,
      "word_count": 10,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0204",
    "content": "Expected Users\n\n**1-3**",
    "section_title": "Expected Users",
    "section_hierarchy": [
      "Expected Users"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 23,
      "word_count": 3,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0205",
    "content": "**1-3**\n\n<!-- Page 30 -->",
    "section_title": "Expected Users",
    "section_hierarchy": [
      "Expected Users"
    ],
    "page_numbers": [
      30
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 25,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0206",
    "content": "**In this section...**",
    "section_title": "Analyze Sets of Numbers Using Matrix Functions",
    "section_hierarchy": [
      "Analyze Sets of Numbers Using Matrix Functions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 22,
      "word_count": 3,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0207",
    "content": "\u201cIntroduction\u201d on page 1-4",
    "section_title": "Analyze Sets of Numbers Using Matrix Functions",
    "section_hierarchy": [
      "Analyze Sets of Numbers Using Matrix Functions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0208",
    "content": "\u201cKey Definitions\u201d on page 1-4",
    "section_title": "Analyze Sets of Numbers Using Matrix Functions",
    "section_hierarchy": [
      "Analyze Sets of Numbers Using Matrix Functions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 29,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0209",
    "content": "\u201cReferencing Matrix Elements\u201d on page 1-4\n\n\u201cTransposing Matrices\u201d on page 1-5",
    "section_title": "Analyze Sets of Numbers Using Matrix Functions",
    "section_hierarchy": [
      "Analyze Sets of Numbers Using Matrix Functions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 77,
      "word_count": 11,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0210",
    "content": "Many financial analysis procedures involve *sets* of numbers; for example, a portfolio of securities at\nvarious prices and yields. Matrices, matrix functions, and matrix algebra are the most efficient ways\nto analyze sets of numbers and their relationships. Spreadsheets focus on individual cells and the\nrelationships between cells. While you can think of a set of spreadsheet cells (a range of rows and\ncolumns) as a matrix, a matrix-oriented tool like MATLAB\u00ae software manipulates sets of numbers\nmore quickly, easily, and naturally. For more information, see \u201cMatrix Algebra Refresher\u201d on page 1-\n7.",
    "section_title": "Introduction",
    "section_hierarchy": [
      "Introduction"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 603,
      "word_count": 93,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0211",
    "content": "**Matrix**",
    "section_title": "Key Definitions",
    "section_hierarchy": [
      "Key Definitions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 10,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0212",
    "content": "```\nA rectangular array of numeric or algebraic quantities subject to mathematical operations; the\nregular formation of elements into rows and columns. Described as a \u201c*m*-by-*n*\u201d matrix, with *m *the\nnumber of rows and *n *the number of columns. The description is always \u201crow-by-column.\u201d For\nexample, here is a 2-by-3 matrix of two bonds (the rows) with different par values, coupon rates, and\ncoupon payment frequencies per year (the columns) entered using MATLAB notation:\n```",
    "section_title": "Key Definitions",
    "section_hierarchy": [
      "Key Definitions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 480,
      "word_count": 75,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0213",
    "content": "```\nBonds = [1000   0.06   2\n          500   0.055  4]\n```",
    "section_title": "Key Definitions",
    "section_hierarchy": [
      "Key Definitions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 58,
      "word_count": 10,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0214",
    "content": "**Vector**\n\n```\nA matrix with only one row or column. Described as a \u201c1-by-*n*\u201d or \u201c*m*-by-1\u201d matrix. The description is\nalways \u201crow-by-column.\u201d For example, here is a 1-by-4 vector of cash flows in MATLAB notation:\n```",
    "section_title": "Key Definitions",
    "section_hierarchy": [
      "Key Definitions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 219,
      "word_count": 36,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0215",
    "content": "```\nA matrix with only one row or column. Described as a \u201c1-by-*n*\u201d or \u201c*m*-by-1\u201d matrix. The description is\nalways \u201crow-by-column.\u201d For example, here is a 1-by-4 vector of cash flows in MATLAB notation:\n```\n\n```\nCash = [1500   4470   5280   -1299]\n```",
    "section_title": "Key Definitions",
    "section_hierarchy": [
      "Key Definitions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 252,
      "word_count": 43,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0216",
    "content": "```\nCash = [1500   4470   5280   -1299]\n```\n\n**Scalar**",
    "section_title": "Key Definitions",
    "section_hierarchy": [
      "Key Definitions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 55,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0217",
    "content": "**Scalar**\n\n```\nA 1-by-1 matrix; that is, a single number.\n```",
    "section_title": "Key Definitions",
    "section_hierarchy": [
      "Key Definitions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 62,
      "word_count": 11,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0218",
    "content": "To reference specific matrix elements, use (row, column) notation. For example:",
    "section_title": "Referencing Matrix Elements",
    "section_hierarchy": [
      "Referencing Matrix Elements"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 79,
      "word_count": 11,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0219",
    "content": "```\nBonds(1,2)\n```",
    "section_title": "Referencing Matrix Elements",
    "section_hierarchy": [
      "Referencing Matrix Elements"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 18,
      "word_count": 3,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0220",
    "content": "```\nans =\n```",
    "section_title": "Referencing Matrix Elements",
    "section_hierarchy": [
      "Referencing Matrix Elements"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 13,
      "word_count": 4,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0221",
    "content": "```\n0.06\n```",
    "section_title": "Referencing Matrix Elements",
    "section_hierarchy": [
      "Referencing Matrix Elements"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 12,
      "word_count": 3,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0222",
    "content": "Getting Started",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 15,
      "word_count": 2,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0223",
    "content": "**1-4**",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 7,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0224",
    "content": "<!-- Page 31 -->",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      31
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0225",
    "content": "```\nCash(3)\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 15,
      "word_count": 3,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0226",
    "content": "```\nans =\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 13,
      "word_count": 4,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0227",
    "content": "```\n5280.00\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 15,
      "word_count": 3,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0228",
    "content": "You can enlarge matrices using small matrices or vectors as elements. For example,",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 82,
      "word_count": 13,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0229",
    "content": "```\nAddBond = [1000   0.065   2];\nBonds = [Bonds; AddBond]\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 62,
      "word_count": 11,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0230",
    "content": "adds another row to the matrix and creates",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 42,
      "word_count": 8,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0231",
    "content": "```\nBonds =\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 15,
      "word_count": 4,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0232",
    "content": "```\n1000   0.06    2\n        500   0.055   4\n       1000   0.065   2\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 72,
      "word_count": 11,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0233",
    "content": "Likewise,",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 9,
      "word_count": 1,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0234",
    "content": "```\nPrices = [987.50\n          475.00\n          995.00]\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 59,
      "word_count": 7,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0235",
    "content": "```\nBonds = [Prices, Bonds]\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 31,
      "word_count": 6,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0236",
    "content": "adds another column and creates",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 31,
      "word_count": 5,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0237",
    "content": "```\nBonds =\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 15,
      "word_count": 4,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0238",
    "content": "```\n987.50   1000   0.06    2\n    475.00    500   0.055   4\n    995.00   1000   0.065   2\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 93,
      "word_count": 14,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0239",
    "content": "```\nFinally, the colon (:) is important in generating and referencing matrix elements. For example, to\nreference the par value, coupon rate, and coupon frequency of the second bond:\n```\n\n```\nBondItems = Bonds(2, 2:4)\n```\n\n```\nBondItems =\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 241,
      "word_count": 40,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0240",
    "content": "```\nBondItems =\n```\n\n```\n500.00   0.055   4\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 47,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0241",
    "content": "```\nSometimes matrices are in the wrong configuration for an operation. In MATLAB, the apostrophe or\nprime character (') transposes a matrix: columns become rows, rows become columns. For example,\n```",
    "section_title": "Transposing Matrices",
    "section_hierarchy": [
      "Transposing Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 200,
      "word_count": 31,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0242",
    "content": "```\nCash = [1500   4470   5280   -1299]'\n```",
    "section_title": "Transposing Matrices",
    "section_hierarchy": [
      "Transposing Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 44,
      "word_count": 8,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0243",
    "content": "produces",
    "section_title": "Transposing Matrices",
    "section_hierarchy": [
      "Transposing Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0244",
    "content": "```\nCash =\n```",
    "section_title": "Transposing Matrices",
    "section_hierarchy": [
      "Transposing Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 14,
      "word_count": 4,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0245",
    "content": "```\n1500\n        4470\n        5280\n       -1299\n```",
    "section_title": "Transposing Matrices",
    "section_hierarchy": [
      "Transposing Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 51,
      "word_count": 6,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0246",
    "content": "Analyze Sets of Numbers Using Matrix Functions",
    "section_title": "Transposing Matrices",
    "section_hierarchy": [
      "Transposing Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 46,
      "word_count": 7,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0247",
    "content": "**1-5**",
    "section_title": "Transposing Matrices",
    "section_hierarchy": [
      "Transposing Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 7,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0248",
    "content": "<!-- Page 32 -->",
    "section_title": "Transposing Matrices",
    "section_hierarchy": [
      "Transposing Matrices"
    ],
    "page_numbers": [
      32
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0249",
    "content": "\u2022\n\u201cMatrix Algebra Refresher\u201d on page 1-7",
    "section_title": "More About",
    "section_hierarchy": [
      "More About"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 40,
      "word_count": 7,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0250",
    "content": "\u2022\n\u201cUsing Input and Output Arguments with Functions\u201d on page 1-15",
    "section_title": "More About",
    "section_hierarchy": [
      "More About"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 64,
      "word_count": 11,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0251",
    "content": "Getting Started",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 15,
      "word_count": 2,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0252",
    "content": "**1-6**",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 7,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0253",
    "content": "<!-- Page 33 -->",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      33
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0254",
    "content": "**In this section...**",
    "section_title": "Matrix Algebra Refresher",
    "section_hierarchy": [
      "Matrix Algebra Refresher"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 22,
      "word_count": 3,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0255",
    "content": "\u201cIntroduction\u201d on page 1-7",
    "section_title": "Matrix Algebra Refresher",
    "section_hierarchy": [
      "Matrix Algebra Refresher"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0256",
    "content": "\u201cAdding and Subtracting Matrices\u201d on page 1-7\n\n\u201cMultiplying Matrices\u201d on page 1-8\n\n\u201cDividing Matrices\u201d on page 1-11\n\n\u201cSolving Simultaneous Linear Equations\u201d on page 1-11",
    "section_title": "Matrix Algebra Refresher",
    "section_hierarchy": [
      "Matrix Algebra Refresher"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 169,
      "word_count": 24,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0257",
    "content": "\u201cSolving Simultaneous Linear Equations\u201d on page 1-11\n\n\u201cOperating Element by Element\u201d on page 1-13",
    "section_title": "Matrix Algebra Refresher",
    "section_hierarchy": [
      "Matrix Algebra Refresher"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 97,
      "word_count": 14,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0258",
    "content": "The explanations in the sections that follow should help refresh your skills for using matrix algebra\nand using MATLAB functions.\n\nIn addition, *Macro-Investment Analysis* by William Sharpe also provides an excellent explanation of\nmatrix algebra operations using MATLAB. It is available on the web at:",
    "section_title": "Introduction",
    "section_hierarchy": [
      "Introduction"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 302,
      "word_count": 45,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0259",
    "content": "In addition, *Macro-Investment Analysis* by William Sharpe also provides an excellent explanation of\nmatrix algebra operations using MATLAB. It is available on the web at:\n\n```\nhttps://www.stanford.edu/~wfsharpe/mia/mia.htm\n```",
    "section_title": "Introduction",
    "section_hierarchy": [
      "Introduction"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 227,
      "word_count": 28,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0260",
    "content": "```\nhttps://www.stanford.edu/~wfsharpe/mia/mia.htm\n```\n\n**Tip** When you are setting up a problem, it helps to \"talk through\" the units and dimensions\nassociated with each input and output matrix. In the example under \u201cMultiplying Matrices\u201d on page\n1-8, one input matrix has five days' closing prices for three stocks, the other input matrix has\nshares of three stocks in two portfolios, and the output matrix therefore has five days' closing values\nfor two portfolios. It also helps to name variables using descriptive terms.",
    "section_title": "Introduction",
    "section_hierarchy": [
      "Introduction"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 526,
      "word_count": 81,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0261",
    "content": "Matrix addition and subtraction operate element-by-element. The two input matrices must have the\nsame dimensions. The result is a new matrix of the same dimensions where each element is the sum\nor difference of each corresponding input element. For example, consider combining portfolios of\ndifferent quantities of the same stocks (\u201cshares of stocks A, B, and C [the rows] in portfolios P and Q\n[the columns] plus shares of A, B, and C in portfolios R and S\u201d).",
    "section_title": "Adding and Subtracting Matrices",
    "section_hierarchy": [
      "Adding and Subtracting Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 460,
      "word_count": 78,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0262",
    "content": "```\nPortfolios_PQ = [100   200\n                 500   400\n                 300   150];\n```\n\n```\nPortfolios_RS = [175   125\n                 200   200\n                 100   500];\n```\n\n```\nNewPortfolios = Portfolios_PQ + Portfolios_RS\n```",
    "section_title": "Adding and Subtracting Matrices",
    "section_hierarchy": [
      "Adding and Subtracting Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 237,
      "word_count": 27,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0263",
    "content": "```\nNewPortfolios = Portfolios_PQ + Portfolios_RS\n```\n\n```\nNewPortfolios =\n```",
    "section_title": "Adding and Subtracting Matrices",
    "section_hierarchy": [
      "Adding and Subtracting Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 78,
      "word_count": 11,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0264",
    "content": "```\nNewPortfolios =\n```\n\n```\n275           325\n        700           600\n        400           650\n```",
    "section_title": "Adding and Subtracting Matrices",
    "section_hierarchy": [
      "Adding and Subtracting Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 102,
      "word_count": 12,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0265",
    "content": "```\n275           325\n        700           600\n        400           650\n```\n\nMatrix Algebra Refresher",
    "section_title": "Adding and Subtracting Matrices",
    "section_hierarchy": [
      "Adding and Subtracting Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 103,
      "word_count": 11,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0266",
    "content": "Matrix Algebra Refresher\n\n**1-7**",
    "section_title": "Adding and Subtracting Matrices",
    "section_hierarchy": [
      "Adding and Subtracting Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0267",
    "content": "**1-7**\n\n<!-- Page 34 -->",
    "section_title": "Adding and Subtracting Matrices",
    "section_hierarchy": [
      "Adding and Subtracting Matrices"
    ],
    "page_numbers": [
      34
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 25,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0268",
    "content": "<!-- Page 34 -->\n\nAdding or subtracting a scalar and a matrix is allowed and also operates element-by-element.",
    "section_title": "Adding and Subtracting Matrices",
    "section_hierarchy": [
      "Adding and Subtracting Matrices"
    ],
    "page_numbers": [
      34
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 110,
      "word_count": 18,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0269",
    "content": "Adding or subtracting a scalar and a matrix is allowed and also operates element-by-element.\n\n```\nSmallerPortf = NewPortfolios-10\n```\n\n```\nSmallerPortf =\n        265.00        315.00\n        690.00        590.00\n        390.00        640.00\n```",
    "section_title": "Adding and Subtracting Matrices",
    "section_hierarchy": [
      "Adding and Subtracting Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 244,
      "word_count": 29,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0270",
    "content": "```\nMatrix multiplication does *not* operate element-by-element. It operates according to the rules of\nlinear algebra. In multiplying matrices, it helps to remember this key rule: the inner dimensions must\nbe the same. That is, if the first matrix is *m*-by-3, the second must be 3-by-*n*. The resulting matrix is\n*m*-by-*n*. It also helps to \u201ctalk through\u201d the units of each matrix, as mentioned in \u201cAnalyze Sets of\nNumbers Using Matrix Functions\u201d on page 1-4.\n```\n\n```\nMatrix multiplication also is *not* commutative; that is, it is not independent of order. A*B does *not*\nequal B*A. The dimension rule illustrates this property. If A is 1-by-3 matrix and B is 3-by-1 matrix,\nA*B yields a scalar (1-by-1) matrix but B*A yields a 3-by-3 matrix.\n```",
    "section_title": "Multiplying Matrices",
    "section_hierarchy": [
      "Multiplying Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 750,
      "word_count": 125,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0271",
    "content": "```\nMatrix multiplication also is *not* commutative; that is, it is not independent of order. A*B does *not*\nequal B*A. The dimension rule illustrates this property. If A is 1-by-3 matrix and B is 3-by-1 matrix,\nA*B yields a scalar (1-by-1) matrix but B*A yields a 3-by-3 matrix.\n```\n\n**Multiplying Vectors**\n\nVector multiplication follows the same rules and helps illustrate the principles. For example, a stock\nportfolio has three different stocks and their closing prices today are:",
    "section_title": "Multiplying Matrices",
    "section_hierarchy": [
      "Multiplying Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 485,
      "word_count": 77,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0272",
    "content": "Vector multiplication follows the same rules and helps illustrate the principles. For example, a stock\nportfolio has three different stocks and their closing prices today are:\n\n```\nClosePrices = [42.5   15   78.875]\n```",
    "section_title": "Multiplying Matrices",
    "section_hierarchy": [
      "Multiplying Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 219,
      "word_count": 33,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0273",
    "content": "```\nClosePrices = [42.5   15   78.875]\n```\n\nThe portfolio contains these numbers of shares of each stock.",
    "section_title": "Multiplying Matrices",
    "section_hierarchy": [
      "Multiplying Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 105,
      "word_count": 17,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0274",
    "content": "The portfolio contains these numbers of shares of each stock.\n\n```\nNumShares = [100\n             500\n             300]\n```",
    "section_title": "Multiplying Matrices",
    "section_hierarchy": [
      "Multiplying Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 122,
      "word_count": 17,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0275",
    "content": "```\nNumShares = [100\n             500\n             300]\n```\n\nTo find the value of the portfolio, multiply the vectors",
    "section_title": "Multiplying Matrices",
    "section_hierarchy": [
      "Multiplying Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 117,
      "word_count": 17,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0276",
    "content": "To find the value of the portfolio, multiply the vectors\n\n```\nPortfValue = ClosePrices * NumShares\n```",
    "section_title": "Multiplying Matrices",
    "section_hierarchy": [
      "Multiplying Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 102,
      "word_count": 17,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0277",
    "content": "```\nPortfValue = ClosePrices * NumShares\n```\n\nwhich yields:",
    "section_title": "Multiplying Matrices",
    "section_hierarchy": [
      "Multiplying Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 59,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0278",
    "content": "which yields:\n\n```\nPortfValue =\n```",
    "section_title": "Multiplying Matrices",
    "section_hierarchy": [
      "Multiplying Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 35,
      "word_count": 6,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0279",
    "content": "```\nPortfValue =\n```\n\n```\n3.5413e+004\n```",
    "section_title": "Multiplying Matrices",
    "section_hierarchy": [
      "Multiplying Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 41,
      "word_count": 7,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0280",
    "content": "```\n3.5413e+004\n```\n\n```\nThe vectors are 1-by-3 and 3-by-1; the resulting vector is 1-by-1, a scalar. Multiplying these vectors\nthus means multiplying each closing price by its respective number of shares and summing the result.\n```",
    "section_title": "Multiplying Matrices",
    "section_hierarchy": [
      "Multiplying Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 232,
      "word_count": 37,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0281",
    "content": "```\nThe vectors are 1-by-3 and 3-by-1; the resulting vector is 1-by-1, a scalar. Multiplying these vectors\nthus means multiplying each closing price by its respective number of shares and summing the result.\n```\n\nTo illustrate order dependence, switch the order of the vectors",
    "section_title": "Multiplying Matrices",
    "section_hierarchy": [
      "Multiplying Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 276,
      "word_count": 44,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0282",
    "content": "To illustrate order dependence, switch the order of the vectors\n\n```\nValues = NumShares * ClosePrices\n```",
    "section_title": "Multiplying Matrices",
    "section_hierarchy": [
      "Multiplying Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 105,
      "word_count": 17,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0283",
    "content": "```\nValues = NumShares * ClosePrices\n```\n\n```\nValues =\n```",
    "section_title": "Multiplying Matrices",
    "section_hierarchy": [
      "Multiplying Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 58,
      "word_count": 11,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0284",
    "content": "```\nValues =\n```\n\n```\n1.0e+004 *\n```\n\n```\n0.4250    0.1500    0.7887\n    2.1250    0.7500    3.9438\n    1.2750    0.4500    2.3663\n```",
    "section_title": "Multiplying Matrices",
    "section_hierarchy": [
      "Multiplying Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 134,
      "word_count": 19,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0285",
    "content": "Getting Started",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 15,
      "word_count": 2,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0286",
    "content": "**1-8**",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 7,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0287",
    "content": "<!-- Page 35 -->",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      35
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0288",
    "content": "which shows the closing values of 100, 500, and 300 shares of each stock, not the portfolio value, and\nthis is meaningless for this example.",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 140,
      "word_count": 25,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0289",
    "content": "**Computing Dot Products of Vectors**",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 37,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0290",
    "content": "In matrix algebra, if *X* and *Y* are vectors of the same length",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 64,
      "word_count": 13,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0291",
    "content": "*Y* =* y*1,* y*2, \u2026,* y**n*\n\n*X* =* x*1,* x*2, \u2026,* x**n*",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 56,
      "word_count": 12,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0292",
    "content": "*X* =* x*1,* x*2, \u2026,* x**n*\n\nthen the dot product\n\n*X* \u00b7* Y* =* x*1*y*1 +* x*2*y*2 + \u2026 +* x**n**y**n*",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 101,
      "word_count": 21,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0293",
    "content": "*X* \u00b7* Y* =* x*1*y*1 +* x*2*y*2 + \u2026 +* x**n**y**n*\n\n```\nis the scalar product of the two vectors. It is an exception to the commutative rule. To compute the\ndot product in MATLAB, use sum(X .* Y) or sum(Y .* X). Be sure that the two vectors have the\nsame dimensions. To illustrate, use the previous vectors.\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 311,
      "word_count": 60,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0294",
    "content": "```\nis the scalar product of the two vectors. It is an exception to the commutative rule. To compute the\ndot product in MATLAB, use sum(X .* Y) or sum(Y .* X). Be sure that the two vectors have the\nsame dimensions. To illustrate, use the previous vectors.\n```\n\n```\nValue = sum(NumShares .* ClosePrices')\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 307,
      "word_count": 56,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0295",
    "content": "```\nValue = sum(NumShares .* ClosePrices')\n```\n\n```\nValue =\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 63,
      "word_count": 11,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0296",
    "content": "```\nValue =\n```\n\n```\n3.5413e+004\n```\n\n```\nValue = sum(ClosePrices .* NumShares')\n```\n\n```\nValue =\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 101,
      "word_count": 18,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0297",
    "content": "```\nValue =\n```\n\n```\n3.5413e+004\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 36,
      "word_count": 7,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0298",
    "content": "```\n3.5413e+004\n```\n\n```\nAs expected, the value in these cases matches the PortfValue computed previously.\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 110,
      "word_count": 17,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0299",
    "content": "```\nAs expected, the value in these cases matches the PortfValue computed previously.\n```\n\n**Multiplying Vectors and Matrices**\n\nMultiplying vectors and matrices follows the matrix multiplication rules and process. For example, a\nportfolio matrix contains closing prices for a week. A second matrix (vector) contains the stock\nquantities in the portfolio.",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 355,
      "word_count": 51,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0300",
    "content": "Multiplying vectors and matrices follows the matrix multiplication rules and process. For example, a\nportfolio matrix contains closing prices for a week. A second matrix (vector) contains the stock\nquantities in the portfolio.\n\n```\nWeekClosePr = [42.5     15      78.875\n               42.125   15.5    78.75\n               42.125   15.125  79\n               42.625   15.25   78.875\n               43       15.25   78.625];\nPortQuan = [100\n            500\n            300];\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 477,
      "word_count": 57,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0301",
    "content": "```\nWeekClosePr = [42.5     15      78.875\n               42.125   15.5    78.75\n               42.125   15.125  79\n               42.625   15.25   78.875\n               43       15.25   78.625];\nPortQuan = [100\n            500\n            300];\n```\n\nTo see the closing portfolio value for each day, simply multiply",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 315,
      "word_count": 35,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0302",
    "content": "To see the closing portfolio value for each day, simply multiply\n\n```\nWeekPortValue = WeekClosePr * PortQuan\n```\n\n```\nWeekPortValue =\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 137,
      "word_count": 22,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0303",
    "content": "```\nWeekPortValue =\n```\n\n```\n1.0e+004 *\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 43,
      "word_count": 8,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0304",
    "content": "```\n1.0e+004 *\n```\n\n```\n3.5412\n    3.5587\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 45,
      "word_count": 8,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0305",
    "content": "```\n3.5412\n    3.5587\n```\n\nMatrix Algebra Refresher",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 51,
      "word_count": 7,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0306",
    "content": "Matrix Algebra Refresher\n\n**1-9**",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0307",
    "content": "**1-9**\n\n<!-- Page 36 -->",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      36
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 25,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0308",
    "content": "<!-- Page 36 -->\n\n```\n3.5475\n    3.5550\n    3.5513\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      36
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 54,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0309",
    "content": "```\n3.5475\n    3.5550\n    3.5513\n```\n\n```\nThe prices matrix is 5-by-3, the quantity matrix (vector) is 3-by-1, so the resulting matrix (vector) is 5-\nby-1.\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 159,
      "word_count": 26,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0310",
    "content": "```\nThe prices matrix is 5-by-3, the quantity matrix (vector) is 3-by-1, so the resulting matrix (vector) is 5-\nby-1.\n```\n\n**Multiplying Two Matrices**\n\nMatrix multiplication also follows the rules of matrix algebra. In matrix algebra notation, if *A* is an *m*-\nby-*n* matrix and *B* is an *n*-by-*p* matrix",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 308,
      "word_count": 50,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0311",
    "content": "Matrix multiplication also follows the rules of matrix algebra. In matrix algebra notation, if *A* is an *m*-\nby-*n* matrix and *B* is an *n*-by-*p* matrix\n\n*A* =",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 162,
      "word_count": 28,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0312",
    "content": "*A* =\n\n*a*11* a*12 \u22ef*a*1*n*\n\u22ee\n\u22ee\n\u22ee\n*a**i*1\n*a**i*2 \u22ef*a**in*\n\u22ee\n\u22ee\n\u22ee\n*a**m*1* a**m*2 \u22ef*a**mn*",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 89,
      "word_count": 17,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0313",
    "content": "*a*11* a*12 \u22ef*a*1*n*\n\u22ee\n\u22ee\n\u22ee\n*a**i*1\n*a**i*2 \u22ef*a**in*\n\u22ee\n\u22ee\n\u22ee\n*a**m*1* a**m*2 \u22ef*a**mn*\n\n, \u00a0\u00a0*B* =",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 93,
      "word_count": 18,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0314",
    "content": ", \u00a0\u00a0*B* =\n\n*b*11 \u22ef*b*1* j* \u22ef*b*1*p*\n*b*21 \u22ef*b*2* j* \u22ef*b*2*p*\n\u22ee\n\u22ee\n\u22ee\n*b**n*1 \u22ef*b**n j* \u22ef*b**np*",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 93,
      "word_count": 18,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0315",
    "content": "*b*11 \u22ef*b*1* j* \u22ef*b*1*p*\n*b*21 \u22ef*b*2* j* \u22ef*b*2*p*\n\u22ee\n\u22ee\n\u22ee\n*b**n*1 \u22ef*b**n j* \u22ef*b**np*\n\nthen *C = A***B* is an *m*-by-*p* matrix; and the element *c*ij in the *i*th row and *j*th column of *C* is\n\n*c**i j* =* a**i*1*b*1* j* +* a**i*2*b*12 + \u2026 +* a**in**b**n j* .",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 258,
      "word_count": 50,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0316",
    "content": "*c**i j* =* a**i*1*b*1* j* +* a**i*2*b*12 + \u2026 +* a**in**b**n j* .\n\nTo illustrate, assume that there are two portfolios of the same three stocks previously mentioned but\nwith different quantities.",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 195,
      "word_count": 32,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0317",
    "content": "To illustrate, assume that there are two portfolios of the same three stocks previously mentioned but\nwith different quantities.\n\n```\nPortfolios = [100   200\n              500   400\n              300   150];\n```\n\n```\nMultiplying the 5-by-3 week's closing prices matrix by the 3-by-2 portfolios matrix yields a 5-by-2\nmatrix showing each day's closing value for both portfolios.\n```\n\n```\nPortfolioValues = WeekClosePr * Portfolios\n```\n\n```\nPortfolioValues =\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 460,
      "word_count": 66,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0318",
    "content": "```\nPortfolioValues =\n```\n\n```\n1.0e+004 *\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 45,
      "word_count": 8,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0319",
    "content": "```\n1.0e+004 *\n```\n\n```\n3.5412    2.6331\n    3.5587    2.6437\n    3.5475    2.6325\n    3.5550    2.6456\n    3.5513    2.6494\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 128,
      "word_count": 16,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0320",
    "content": "```\n3.5412    2.6331\n    3.5587    2.6437\n    3.5475    2.6325\n    3.5550    2.6456\n    3.5513    2.6494\n```\n\nMonday's values result from multiplying each Monday closing price by its respective number of\nshares and summing the result for the first portfolio, then doing the same for the second portfolio.\nTuesday's values result from multiplying each Tuesday closing price by its respective number of\nshares and summing the result for the first portfolio, then doing the same for the second portfolio.\nAnd so on, through the rest of the week. With one simple command, MATLAB quickly performs many\ncalculations.",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 610,
      "word_count": 92,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0321",
    "content": "Monday's values result from multiplying each Monday closing price by its respective number of\nshares and summing the result for the first portfolio, then doing the same for the second portfolio.\nTuesday's values result from multiplying each Tuesday closing price by its respective number of\nshares and summing the result for the first portfolio, then doing the same for the second portfolio.\nAnd so on, through the rest of the week. With one simple command, MATLAB quickly performs many\ncalculations.\n\n**Multiplying a Matrix by a Scalar**\n\nMultiplying a matrix by a scalar is an exception to the dimension and commutative rules. It just\noperates element-by-element.",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 665,
      "word_count": 105,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0322",
    "content": "Getting Started",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 15,
      "word_count": 2,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0323",
    "content": "**1-10**",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0324",
    "content": "<!-- Page 37 -->",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      37
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0325",
    "content": "```\nPortfolios = [100   200\n              500   400\n              300   150];\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 81,
      "word_count": 10,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0326",
    "content": "```\nDoublePort = Portfolios * 2\n```\n\n```\nDoublePort =\n        200           400\n       1000           800\n        600           300\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 135,
      "word_count": 17,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0327",
    "content": "Matrix division is useful primarily for solving equations, and especially for solving simultaneous linear\nequations (see \u201cSolving Simultaneous Linear Equations\u201d on page 1-11). For example, you want to\nsolve for *X* in *A***X* = *B.*\n\n```\nIn ordinary algebra, you would divide both sides of the equation by *A*, and *X* would equal *B/A*.\nHowever, since matrix algebra is not commutative *(A***X* \u2260 *X***A)*, different processes apply. In formal\nmatrix algebra, the solution involves matrix inversion. MATLAB, however, simplifies the process by\nproviding two matrix division symbols, left and right (\\ and /). In general,\n```\n\n```\nX = A\\B solves for X in A*X = B and\n```\n\n```\nX = B/A solves for X in X*A = B.\n```",
    "section_title": "Dividing Matrices",
    "section_hierarchy": [
      "Dividing Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 711,
      "word_count": 121,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0328",
    "content": "```\nX = B/A solves for X in X*A = B.\n```\n\n```\nIn general, matrix A must be a nonsingular square matrix; that is, it must be invertible and it must\nhave the same number of rows and columns. (Generally, a matrix is invertible if the matrix times its\ninverse equals the identity matrix. To understand the theory and proofs, consult a textbook on linear\nalgebra such as *Elementary Linear Algebra* by Hill listed in \u201cBibliography\u201d on page A-2.) MATLAB\ngives a warning message if the matrix is singular or nearly so.\n```",
    "section_title": "Dividing Matrices",
    "section_hierarchy": [
      "Dividing Matrices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 515,
      "word_count": 94,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0329",
    "content": "Matrix division is especially useful in solving simultaneous linear equations. Consider this problem:\nGiven two portfolios of mortgage-based instruments, each with certain yields depending on the prime\nrate, how do you weight the portfolios to achieve certain annual cash flows? The answer involves\nsolving two linear equations.",
    "section_title": "Solving Simultaneous Linear Equations",
    "section_hierarchy": [
      "Solving Simultaneous Linear Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 328,
      "word_count": 47,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0330",
    "content": "A linear equation is any equation of the form",
    "section_title": "Solving Simultaneous Linear Equations",
    "section_hierarchy": [
      "Solving Simultaneous Linear Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 45,
      "word_count": 9,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0331",
    "content": "*a*1*x* +* a*2*y* =* b*,\n\nwhere *a*1, *a*2, and *b* are constants (with *a*1 and *a*2 not both 0), and *x* and *y* are variables. (It is a linear\nequation because it describes a line in the *xy*-plane. For example, the equation 2*x* + *y* = 8 describes a\nline such that if *x* = 2, then *y* = 4.)\n\nA system of linear equations is a set of linear equations that you usually want to solve at the same\ntime; that is, simultaneously. A basic principle for exact answers in solving simultaneous linear\nequations requires that there be as many equations as there are unknowns. To get exact answers for\n*x* and *y*, there must be two equations. For example, to solve for *x* and *y* in the system of linear\nequations",
    "section_title": "Solving Simultaneous Linear Equations",
    "section_hierarchy": [
      "Solving Simultaneous Linear Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 709,
      "word_count": 133,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0332",
    "content": "A system of linear equations is a set of linear equations that you usually want to solve at the same\ntime; that is, simultaneously. A basic principle for exact answers in solving simultaneous linear\nequations requires that there be as many equations as there are unknowns. To get exact answers for\n*x* and *y*, there must be two equations. For example, to solve for *x* and *y* in the system of linear\nequations\n\n2*x* +* y* = 13\n*x* \u22123*y* = \u221218,",
    "section_title": "Solving Simultaneous Linear Equations",
    "section_hierarchy": [
      "Solving Simultaneous Linear Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 445,
      "word_count": 82,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0333",
    "content": "2*x* +* y* = 13\n*x* \u22123*y* = \u221218,\n\nMatrix Algebra Refresher",
    "section_title": "Solving Simultaneous Linear Equations",
    "section_hierarchy": [
      "Solving Simultaneous Linear Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 58,
      "word_count": 12,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0334",
    "content": "Matrix Algebra Refresher\n\n**1-11**",
    "section_title": "Solving Simultaneous Linear Equations",
    "section_hierarchy": [
      "Solving Simultaneous Linear Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 34,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0335",
    "content": "**1-11**\n\n<!-- Page 38 -->",
    "section_title": "Solving Simultaneous Linear Equations",
    "section_hierarchy": [
      "Solving Simultaneous Linear Equations"
    ],
    "page_numbers": [
      38
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0336",
    "content": "<!-- Page 38 -->\n\nthere must be two equations, which there are. Matrix algebra represents this system as an equation\ninvolving three matrices: *A* for the left-side constants, *X* for the variables, and *B* for the right-side\nconstants",
    "section_title": "Solving Simultaneous Linear Equations",
    "section_hierarchy": [
      "Solving Simultaneous Linear Equations"
    ],
    "page_numbers": [
      38
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 235,
      "word_count": 38,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0337",
    "content": "there must be two equations, which there are. Matrix algebra represents this system as an equation\ninvolving three matrices: *A* for the left-side constants, *X* for the variables, and *B* for the right-side\nconstants\n\n*A* = 2\n1\n1 \u22123 ,\u00a0\u00a0\u00a0\u00a0\u00a0*X* =* x*\n*y* ,\u00a0\u00a0\u00a0\u00a0\u00a0*B* =\n13\n\u221218 ,\n\nwhere *A***X* = *B*.\n\nSolving the system simultaneously means solving for *X*. Using MATLAB,",
    "section_title": "Solving Simultaneous Linear Equations",
    "section_hierarchy": [
      "Solving Simultaneous Linear Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 368,
      "word_count": 65,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0338",
    "content": "Solving the system simultaneously means solving for *X*. Using MATLAB,\n\n```\nA = [2  1\n     1 -3];\n```\n\n```\nB = [13\n    -18];\n```\n\n```\nX = A \\ B\n```\n\n```\nsolves for X in A * X = B.\n```\n\n```\nX = [3 7]\n```\n\nSo *x* = 3 and *y* = 7 in this example. In general, you can use matrix algebra to solve any system of\nlinear equations such as",
    "section_title": "Solving Simultaneous Linear Equations",
    "section_hierarchy": [
      "Solving Simultaneous Linear Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 330,
      "word_count": 75,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0339",
    "content": "So *x* = 3 and *y* = 7 in this example. In general, you can use matrix algebra to solve any system of\nlinear equations such as\n\n*a*11*x*1 +* a*12*x*2 + \u2026 +* a*1*n**x**n* =* b*1\n*a*21*x*1 +* a*22*x*2 + \u2026 +* a*2*n**x**n* =* b*2\n\u22ee\n*a**m*1*x*1 +* a**m*2*x*2 + \u2026 +* a**mn**x**n* =* b**m*",
    "section_title": "Solving Simultaneous Linear Equations",
    "section_hierarchy": [
      "Solving Simultaneous Linear Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 282,
      "word_count": 55,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0340",
    "content": "*a*11*x*1 +* a*12*x*2 + \u2026 +* a*1*n**x**n* =* b*1\n*a*21*x*1 +* a*22*x*2 + \u2026 +* a*2*n**x**n* =* b*2\n\u22ee\n*a**m*1*x*1 +* a**m*2*x*2 + \u2026 +* a**mn**x**n* =* b**m*\n\nby representing them as matrices",
    "section_title": "Solving Simultaneous Linear Equations",
    "section_hierarchy": [
      "Solving Simultaneous Linear Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 188,
      "word_count": 33,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0341",
    "content": "by representing them as matrices\n\n*A* =",
    "section_title": "Solving Simultaneous Linear Equations",
    "section_hierarchy": [
      "Solving Simultaneous Linear Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 39,
      "word_count": 7,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0342",
    "content": "*A* =\n\n*a*11* a*12 \u22ef*a*1*n*\n*a*21* a*22 \u22ef*a*2*n*\n\u22ee\n\u22ee\n\u22ee\n\n*a**m*1* a**m*2 \u22ef*a**mn*",
    "section_title": "Solving Simultaneous Linear Equations",
    "section_hierarchy": [
      "Solving Simultaneous Linear Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 80,
      "word_count": 14,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0343",
    "content": "*a**m*1* a**m*2 \u22ef*a**mn*\n\n, \u00a0\u00a0\u00a0\u00a0\u00a0*X* =\n\n*x*1\n*x*2\n\u22ee\n*x**n*",
    "section_title": "Solving Simultaneous Linear Equations",
    "section_hierarchy": [
      "Solving Simultaneous Linear Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 58,
      "word_count": 10,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0344",
    "content": "*x*1\n*x*2\n\u22ee\n*x**n*\n\n, \u00a0\u00a0\u00a0\u00a0\u00a0*B* =\n\n*b*1\n*b*2\n\u22ee\n*b**m*\n\nand solving for *X* in *A***X *= *B*.",
    "section_title": "Solving Simultaneous Linear Equations",
    "section_hierarchy": [
      "Solving Simultaneous Linear Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 91,
      "word_count": 19,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0345",
    "content": "and solving for *X* in *A***X *= *B*.\n\nTo illustrate, consider this situation. There are two portfolios of mortgage-based instruments, M1 and\nM2. They have current annual cash payments of $100 and $70 per unit, respectively, based on today's\nprime rate. If the prime rate moves down one percentage point, their payments would be $80 and\n$40. An investor holds 10 units of M1 and 20 units of M2. The investor's receipts equal cash\npayments times units, or R = C * U, for each prime-rate scenario. As word equations:",
    "section_title": "Solving Simultaneous Linear Equations",
    "section_hierarchy": [
      "Solving Simultaneous Linear Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "formula",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 514,
      "word_count": 90,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0346",
    "content": "To illustrate, consider this situation. There are two portfolios of mortgage-based instruments, M1 and\nM2. They have current annual cash payments of $100 and $70 per unit, respectively, based on today's\nprime rate. If the prime rate moves down one percentage point, their payments would be $80 and\n$40. An investor holds 10 units of M1 and 20 units of M2. The investor's receipts equal cash\npayments times units, or R = C * U, for each prime-rate scenario. As word equations:\n\nM1\nM2",
    "section_title": "Solving Simultaneous Linear Equations",
    "section_hierarchy": [
      "Solving Simultaneous Linear Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "formula",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 482,
      "word_count": 84,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0347",
    "content": "M1\nM2\n\nPrime flat:\n$100 * 10 units\n+ $70 * 20 units = $2400\nreceipts\n\nPrime down:\n$80 * 10 units\n+ $40 * 20 units = $1600\nreceipts",
    "section_title": "Solving Simultaneous Linear Equations",
    "section_hierarchy": [
      "Solving Simultaneous Linear Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "formula",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 130,
      "word_count": 30,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0348",
    "content": "Prime down:\n$80 * 10 units\n+ $40 * 20 units = $1600\nreceipts\n\nAs MATLAB matrices:",
    "section_title": "Solving Simultaneous Linear Equations",
    "section_hierarchy": [
      "Solving Simultaneous Linear Equations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "formula",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 81,
      "word_count": 17,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0349",
    "content": "Getting Started",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 15,
      "word_count": 2,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0350",
    "content": "**1-12**",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0351",
    "content": "<!-- Page 39 -->",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      39
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0352",
    "content": "```\nCash = [100  70\n         80  40];\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 41,
      "word_count": 8,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0353",
    "content": "```\nUnits = [10\n        20];\n```\n\n```\nReceipts = Cash * Units\n```\n\n```\nReceipts =\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 85,
      "word_count": 17,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0354",
    "content": "```\nReceipts =\n```\n\n```\n2400\n       1600\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 44,
      "word_count": 8,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0355",
    "content": "```\n2400\n       1600\n```\n\nNow the investor asks this question: Given these two portfolios and their characteristics, how many\nunits of each should they hold to receive $7000 if the prime rate stays flat and $5000 if the prime\ndrops one percentage point? Find the answer by solving two linear equations.",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 302,
      "word_count": 51,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0356",
    "content": "Now the investor asks this question: Given these two portfolios and their characteristics, how many\nunits of each should they hold to receive $7000 if the prime rate stays flat and $5000 if the prime\ndrops one percentage point? Find the answer by solving two linear equations.\n\nM1\nM2",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "formula",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 283,
      "word_count": 49,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0357",
    "content": "M1\nM2\n\nPrime flat:\n$100 * *x* units\n+ $70 * *y* units = $7000\nreceipts\n\nPrime down:\n$80 * *x* units\n+ $40 * *y* units = $5000\nreceipts",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "formula",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 134,
      "word_count": 30,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0358",
    "content": "Prime down:\n$80 * *x* units\n+ $40 * *y* units = $5000\nreceipts\n\nIn other words, solve for U (units) in the equation R (receipts) = C (cash) * U (units). Using MATLAB\nleft division\n\n```\nCash = [100  70\n         80  40];\n```\n\n```\nReceipts = [7000\n            5000];\n```\n\n```\nUnits = Cash \\ Receipts\n```\n\n```\nUnits =\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 317,
      "word_count": 61,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0359",
    "content": "```\nUnits =\n```\n\n```\n43.7500\n         37.5000\n```\n\nThe investor should hold 43.75 units of portfolio M1 and 37.5 units of portfolio M2 to achieve the\nannual receipts desired.",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 174,
      "word_count": 29,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0360",
    "content": "```\nFinally, element-by-element arithmetic operations are called operations. To indicate a MATLAB array\noperation, precede the operator with a period (.). Addition and subtraction, and matrix multiplication\nand division by a scalar, are already array operations so no period is necessary. When using array\noperations on two matrices, the dimensions of the matrices must be the same. For example, given\nvectors of stock dividends and closing prices\n```",
    "section_title": "Operating Element by Element",
    "section_hierarchy": [
      "Operating Element by Element"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 451,
      "word_count": 68,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0361",
    "content": "```\nDividends = [1.90  0.40  1.56  4.50];\nPrices = [25.625  17.75  26.125  60.50];\n```\n\n```\nYields = Dividends ./ Prices\n```",
    "section_title": "Operating Element by Element",
    "section_hierarchy": [
      "Operating Element by Element"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 124,
      "word_count": 21,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0362",
    "content": "```\nYields = Dividends ./ Prices\n```\n\nMatrix Algebra Refresher",
    "section_title": "Operating Element by Element",
    "section_hierarchy": [
      "Operating Element by Element"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 62,
      "word_count": 10,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0363",
    "content": "Matrix Algebra Refresher\n\n**1-13**",
    "section_title": "Operating Element by Element",
    "section_hierarchy": [
      "Operating Element by Element"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 34,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0364",
    "content": "**1-13**\n\n<!-- Page 40 -->",
    "section_title": "Operating Element by Element",
    "section_hierarchy": [
      "Operating Element by Element"
    ],
    "page_numbers": [
      40
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0365",
    "content": "<!-- Page 40 -->\n\n```\nYields =\n```",
    "section_title": "Operating Element by Element",
    "section_hierarchy": [
      "Operating Element by Element"
    ],
    "page_numbers": [
      40
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 34,
      "word_count": 8,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0366",
    "content": "```\nYields =\n```\n\n```\n0.0741    0.0225    0.0597    0.0744\n```",
    "section_title": "Operating Element by Element",
    "section_hierarchy": [
      "Operating Element by Element"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 62,
      "word_count": 10,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0367",
    "content": "\u2022\n\u201cAnalyze Sets of Numbers Using Matrix Functions\u201d on page 1-4",
    "section_title": "More About",
    "section_hierarchy": [
      "More About"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 62,
      "word_count": 11,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0368",
    "content": "\u2022\n\u201cUsing Input and Output Arguments with Functions\u201d on page 1-15",
    "section_title": "More About",
    "section_hierarchy": [
      "More About"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 64,
      "word_count": 11,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0369",
    "content": "Getting Started",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 15,
      "word_count": 2,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0370",
    "content": "**1-14**",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0371",
    "content": "<!-- Page 41 -->",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      41
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0372",
    "content": "**In this section...**",
    "section_title": "Using Input and Output Arguments with Functions",
    "section_hierarchy": [
      "Using Input and Output Arguments with Functions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 22,
      "word_count": 3,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0373",
    "content": "\u201cInput Arguments\u201d on page 1-15\n\n\u201cOutput Arguments\u201d on page 1-16",
    "section_title": "Using Input and Output Arguments with Functions",
    "section_hierarchy": [
      "Using Input and Output Arguments with Functions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 63,
      "word_count": 10,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0374",
    "content": "**Vector and Matrix Input**",
    "section_title": "Input Arguments",
    "section_hierarchy": [
      "Input Arguments"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 27,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0375",
    "content": "By design, MATLAB software can efficiently perform repeated operations on collections of data stored\nin vectors and matrices. MATLAB code that is written to operate simultaneously on different arrays is\nsaid to be vectorized. Vectorized code is not only clean and concise, but is also efficiently processed\nby MATLAB.\n\nBecause MATLAB is optimized for processing vectorized code, many Financial Toolbox functions\naccept either vector or matrix input arguments, rather than single (scalar) values.\n\n```\nOne example of such a function is the irr function, which computes the internal rate of return of a\ncash flow stream. If you input a vector of cash flows from a single cash flow stream, then irr returns\na scalar rate of return. If you input a matrix of cash flows from multiple cash flow streams, where\neach matrix column represents a different stream, then irr returns a vector of internal rates of\nreturn, where the columns correspond to the columns of the input matrix. Many other Financial\nToolbox functions work similarly.\n```",
    "section_title": "Input Arguments",
    "section_hierarchy": [
      "Input Arguments"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1032,
      "word_count": 168,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0376",
    "content": "```\nOne example of such a function is the irr function, which computes the internal rate of return of a\ncash flow stream. If you input a vector of cash flows from a single cash flow stream, then irr returns\na scalar rate of return. If you input a matrix of cash flows from multiple cash flow streams, where\neach matrix column represents a different stream, then irr returns a vector of internal rates of\nreturn, where the columns correspond to the columns of the input matrix. Many other Financial\nToolbox functions work similarly.\n```\n\nAs an example, suppose that you make an initial investment of $100, from which you then receive by\na series of annual cash receipts of $10, $20, $30, $40, and $50. This cash flow stream is stored in a\nvector",
    "section_title": "Input Arguments",
    "section_hierarchy": [
      "Input Arguments"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 744,
      "word_count": 135,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0377",
    "content": "As an example, suppose that you make an initial investment of $100, from which you then receive by\na series of annual cash receipts of $10, $20, $30, $40, and $50. This cash flow stream is stored in a\nvector\n\n```\nCashFlows = [-100 10 20 30 40 50]'\n```\n\n```\nCashFlows =\n  -100\n    10\n    20\n    30\n    40\n    50\n```\n\n```\nUse the irr function to compute the internal rate of return of the cash flow stream.\n```\n\n```\nRate = irr(CashFlows)\n```\n\n```\nRate =\n```",
    "section_title": "Input Arguments",
    "section_hierarchy": [
      "Input Arguments"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 455,
      "word_count": 87,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0378",
    "content": "```\nRate =\n```\n\n```\n0.1201\n```\n\n```\nFor the single cash flow stream CashFlows, the function returns a scalar rate of return of 0.1201, or\n12.01%.\n```\n\n```\nNow, use the irr function to compute internal rates of return for multiple cash flow streams.\n```\n\n```\nRate = irr([CashFlows CashFlows CashFlows])\n```",
    "section_title": "Input Arguments",
    "section_hierarchy": [
      "Input Arguments"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 305,
      "word_count": 53,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0379",
    "content": "```\nRate = irr([CashFlows CashFlows CashFlows])\n```\n\nUsing Input and Output Arguments with Functions",
    "section_title": "Input Arguments",
    "section_hierarchy": [
      "Input Arguments"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 100,
      "word_count": 14,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0380",
    "content": "Using Input and Output Arguments with Functions\n\n**1-15**",
    "section_title": "Input Arguments",
    "section_hierarchy": [
      "Input Arguments"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 57,
      "word_count": 8,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0381",
    "content": "**1-15**\n\n<!-- Page 42 -->",
    "section_title": "Input Arguments",
    "section_hierarchy": [
      "Input Arguments"
    ],
    "page_numbers": [
      42
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0382",
    "content": "<!-- Page 42 -->\n\n```\nRate =\n```",
    "section_title": "Input Arguments",
    "section_hierarchy": [
      "Input Arguments"
    ],
    "page_numbers": [
      42
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 32,
      "word_count": 8,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0383",
    "content": "```\nRate =\n```\n\n```\n0.1201    0.1201    0.1201\n```",
    "section_title": "Input Arguments",
    "section_hierarchy": [
      "Input Arguments"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 50,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0384",
    "content": "```\n0.1201    0.1201    0.1201\n```\n\n```\nMATLAB performs the same computation on all the assets at once. For the three cash flow streams,\nthe irr function returns a vector of three internal rates of return.\n```",
    "section_title": "Input Arguments",
    "section_hierarchy": [
      "Input Arguments"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 209,
      "word_count": 36,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0385",
    "content": "```\nMATLAB performs the same computation on all the assets at once. For the three cash flow streams,\nthe irr function returns a vector of three internal rates of return.\n```\n\nIn the Financial Toolbox context, vectorized programming is useful in portfolio management. You can\norganize multiple assets into a single collection by placing data for each asset in a different matrix\ncolumn or row, then pass the matrix to a Financial Toolbox function.",
    "section_title": "Input Arguments",
    "section_hierarchy": [
      "Input Arguments"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 446,
      "word_count": 74,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0386",
    "content": "In the Financial Toolbox context, vectorized programming is useful in portfolio management. You can\norganize multiple assets into a single collection by placing data for each asset in a different matrix\ncolumn or row, then pass the matrix to a Financial Toolbox function.\n\n**Character Vector Input**\n\n```\nEnter MATLAB character vectors surrounded by single quotes ('character vector').\n```\n\nA character vector is stored as a character array, one ASCII character per element. Thus, the date\ncharacter vector is",
    "section_title": "Input Arguments",
    "section_hierarchy": [
      "Input Arguments"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 509,
      "word_count": 78,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0387",
    "content": "A character vector is stored as a character array, one ASCII character per element. Thus, the date\ncharacter vector is\n\n```\nDateCharacterVector = '9/16/2017'\n```\n\n```\nThis date character vector is actually a 1-by-9 vector. If you create a vector or matrix of character\nvectors, each character vector must have the same length. Using a column vector to create a vector\nof character vectors can allow you to visually check that all character vectors are the same length. If\nyour character vectors are not the same length, use spaces or zeros to make them the same length, as\nin the following code.\n```",
    "section_title": "Input Arguments",
    "section_hierarchy": [
      "Input Arguments"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 599,
      "word_count": 103,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0388",
    "content": "```\nThis date character vector is actually a 1-by-9 vector. If you create a vector or matrix of character\nvectors, each character vector must have the same length. Using a column vector to create a vector\nof character vectors can allow you to visually check that all character vectors are the same length. If\nyour character vectors are not the same length, use spaces or zeros to make them the same length, as\nin the following code.\n```\n\n```\nDateFields = ['01/12/2017'\n              '02/14/2017'\n              '03/03/2017'\n              '06/14/2017'\n              '12/01/2017'];\n```\n\n```\nDateFields is a 5-by-10 array of character vectors.\n```",
    "section_title": "Input Arguments",
    "section_hierarchy": [
      "Input Arguments"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 643,
      "word_count": 97,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0389",
    "content": "```\nDateFields is a 5-by-10 array of character vectors.\n```\n\nYou cannot mix numbers and character vectors in a vector or matrix. If you input a vector or matrix\nthat contains a mix of numbers and character vectors, MATLAB treats every entry as a character. As\nan example, input the following code",
    "section_title": "Input Arguments",
    "section_hierarchy": [
      "Input Arguments"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 296,
      "word_count": 52,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0390",
    "content": "You cannot mix numbers and character vectors in a vector or matrix. If you input a vector or matrix\nthat contains a mix of numbers and character vectors, MATLAB treats every entry as a character. As\nan example, input the following code\n\n```\nItem = [83  90  99 '14-Sep-1999']\n```",
    "section_title": "Input Arguments",
    "section_hierarchy": [
      "Input Arguments"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 278,
      "word_count": 50,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0391",
    "content": "```\nItem = [83  90  99 '14-Sep-1999']\n```\n\n```\nItem =\n```",
    "section_title": "Input Arguments",
    "section_hierarchy": [
      "Input Arguments"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 57,
      "word_count": 12,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0392",
    "content": "```\nItem =\n```\n\n```\nSZc14-Sep-1999\n```\n\n```\nThe software understands the input not as a 1-by-4 vector, but as a 1-by-14 character array with the\nvalue SZc14-Sep-1999.\n```",
    "section_title": "Input Arguments",
    "section_hierarchy": [
      "Input Arguments"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 170,
      "word_count": 29,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0393",
    "content": "Some functions return no arguments, some return just one, and some return multiple arguments.\nFunctions that return multiple arguments use the syntax\n\n```\n[A, B, C] = function(input_arguments...)\n```\n\n```\nto return arguments A, B, and C. If you omit all but one, the function returns the first argument. Thus,\nfor this example if you use the syntax\n```",
    "section_title": "Output Arguments",
    "section_hierarchy": [
      "Output Arguments"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 352,
      "word_count": 59,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0394",
    "content": "Getting Started",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 15,
      "word_count": 2,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0395",
    "content": "**1-16**",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0396",
    "content": "<!-- Page 43 -->",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      43
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0397",
    "content": "```\nX = function(input_arguments...)\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 40,
      "word_count": 5,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0398",
    "content": "```\nthe function returns a value for A, but not for B or C.\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 63,
      "word_count": 15,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0399",
    "content": "Some functions that return vectors accept only scalars as arguments. Such functions cannot accept\nvectors as arguments and return matrices, where each column in the output matrix corresponds to an\nentry in the input. Output vectors can be variable length.",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 255,
      "word_count": 40,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0400",
    "content": "```\nFor example, most functions that require asset life as an input, and return values corresponding to\ndifferent periods over the asset life, cannot handle vectors or matrices as input arguments. These\nfunctions include amortize, depfixdb, depgendb, and depsoyd. For example, consider a car for\nwhich you want to compute the depreciation schedule. Use the depfixdb function to compute a\nstream of declining-balance depreciation values for the asset. Set the initial value of the asset and the\nlifetime of the asset. Note that in the returned vector, the asset lifetime determines the number of\nrows. Now consider a collection of cars with different lifetimes. Because depfixdb cannot output a\nmatrix with an unequal number of rows in each column, depfixdb cannot accept a single input\nvector with values for each asset in the collection.\n```",
    "section_title": "1",
    "section_hierarchy": [
      "1"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 842,
      "word_count": 135,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0401",
    "content": "\u2022\n\u201cMatrices and Arrays\u201d",
    "section_title": "Related Examples",
    "section_hierarchy": [
      "Related Examples"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 23,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0402",
    "content": "\u2022\n\u201cAnalyze Sets of Numbers Using Matrix Functions\u201d on page 1-4\n\n\u2022\n\u201cMatrix Algebra Refresher\u201d on page 1-7",
    "section_title": "More About",
    "section_hierarchy": [
      "More About"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 104,
      "word_count": 18,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0403",
    "content": "\u2022\n\u201cMatrix Algebra Refresher\u201d on page 1-7\n\nUsing Input and Output Arguments with Functions",
    "section_title": "More About",
    "section_hierarchy": [
      "More About"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 89,
      "word_count": 14,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0404",
    "content": "Using Input and Output Arguments with Functions\n\n**1-17**",
    "section_title": "More About",
    "section_hierarchy": [
      "More About"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 57,
      "word_count": 8,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0405",
    "content": "**1-17**\n\n<!-- Page 44 -->\n\n<!-- Page 45 -->",
    "section_title": "More About",
    "section_hierarchy": [
      "More About"
    ],
    "page_numbers": [
      44
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 44,
      "word_count": 9,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0406",
    "content": "\u2022\n\u201cHandle and Convert Dates\u201d on page 2-2",
    "section_title": "Performing Common Financial Tasks",
    "section_hierarchy": [
      "Performing Common Financial Tasks"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 40,
      "word_count": 8,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0407",
    "content": "\u2022\n\u201cAnalyzing and Computing Cash Flows\u201d on page 2-11\n\n\u2022\n\u201cPricing and Computing Yields for Fixed-Income Securities\u201d on page 2-15\n\n\u2022\n\u201cTreasury Bills Defined\u201d on page 2-25\n\n\u2022\n\u201cComputing Treasury Bill Price and Yield\u201d on page 2-26\n\n\u2022\n\u201cTerm Structure of Interest Rates\u201d on page 2-29",
    "section_title": "Performing Common Financial Tasks",
    "section_hierarchy": [
      "Performing Common Financial Tasks"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 276,
      "word_count": 46,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0408",
    "content": "\u2022\n\u201cTerm Structure of Interest Rates\u201d on page 2-29\n\n\u2022\n\u201cReturns with Negative Prices\u201d on page 2-32\n\n\u2022\n\u201cPricing and Analyzing Equity Derivatives\u201d on page 2-39",
    "section_title": "Performing Common Financial Tasks",
    "section_hierarchy": [
      "Performing Common Financial Tasks"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 155,
      "word_count": 26,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0409",
    "content": "\u2022\n\u201cPricing and Analyzing Equity Derivatives\u201d on page 2-39\n\n\u2022\n\u201cAbout Life Tables\u201d on page 2-44\n\n\u2022\n\u201cCase Study for Life Tables Analysis\u201d on page 2-46",
    "section_title": "Performing Common Financial Tasks",
    "section_hierarchy": [
      "Performing Common Financial Tasks"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 147,
      "word_count": 26,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0410",
    "content": "\u2022\n\u201cCase Study for Life Tables Analysis\u201d on page 2-46\n\n\u2022\n\u201cMachine Learning for Statistical Arbitrage: Introduction\u201d on page 2-48\n\n\u2022\n\u201cMachine Learning for Statistical Arbitrage I: Data Management and Visualization\u201d on page 2-50\n\n\u2022\n\u201cMachine Learning for Statistical Arbitrage II: Feature Engineering and Model Development\u201d\non page 2-59\n\n\u2022\n\u201cMachine Learning for Statistical Arbitrage III: Training, Tuning, and Prediction\u201d on page 2-69\n\n\u2022\n\u201cBacktest Deep Learning Model for Algorithmic Trading of Limit Order Book Data\u201d on page 2-78",
    "section_title": "Performing Common Financial Tasks",
    "section_hierarchy": [
      "Performing Common Financial Tasks"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 527,
      "word_count": 79,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0411",
    "content": "<!-- Page 46 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      46
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0412",
    "content": "**In this section...**",
    "section_title": "Handle and Convert Dates",
    "section_hierarchy": [
      "Handle and Convert Dates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 22,
      "word_count": 3,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0413",
    "content": "\u201cDate Formats\u201d on page 2-2\n\n\u201cDate Conversions\u201d on page 2-3\n\n\u201cCurrent Date and Time\u201d on page 2-7\n\n\u201cDetermining Specific Dates\u201d on page 2-8\n\n\u201cDetermining Holidays\u201d on page 2-8\n\n\u201cDetermining Cash-Flow Dates\u201d on page 2-9",
    "section_title": "Handle and Convert Dates",
    "section_hierarchy": [
      "Handle and Convert Dates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 216,
      "word_count": 34,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0414",
    "content": "Virtually all financial data derives from a time series, functions in Financial Toolbox have extensive\ndate-handling capabilities. The toolbox functions support date or date-and-time formats as character\nvectors, datetime arrays, or serial date numbers.\n\n```\n\u2022\nDate character vectors are text that represent date and time, which you can use with multiple\nformats. For example, 'dd-mmm-yyyy HH:MM:SS', 'dd-mmm-yyyy', and 'mm/dd/yyyy' are all\nsupported text formats for a date character vector. Most often, you work with date character\nvectors (such as 14-Sep-1999) when dealing with dates.\n```\n\n```\n\u2022\nDatetime arrays, created using datetime, are the best data type for representing points in time.\ndatetime values have flexible display formats and up to nanosecond precision, and can account\nfor time zones, daylight saving time, and leap seconds. When datetime objects are used as inputs\nto other Financial Toolbox functions, the format of the input datetime object is preserved. For\nexample:\n```",
    "section_title": "Date Formats",
    "section_hierarchy": [
      "Date Formats"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 996,
      "word_count": 150,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0415",
    "content": "```\n\u2022\nDatetime arrays, created using datetime, are the best data type for representing points in time.\ndatetime values have flexible display formats and up to nanosecond precision, and can account\nfor time zones, daylight saving time, and leap seconds. When datetime objects are used as inputs\nto other Financial Toolbox functions, the format of the input datetime object is preserved. For\nexample:\n```\n\n```\noriginalDate = datetime('now','Format','yyyy-MM-dd HH:mm:ss'); \n  % Find the next business day \n  b = busdate(originalDate)\n```",
    "section_title": "Date Formats",
    "section_hierarchy": [
      "Date Formats"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 535,
      "word_count": 79,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0416",
    "content": "```\noriginalDate = datetime('now','Format','yyyy-MM-dd HH:mm:ss'); \n  % Find the next business day \n  b = busdate(originalDate)\n```\n\n```\nb =\n```",
    "section_title": "Date Formats",
    "section_hierarchy": [
      "Date Formats"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 144,
      "word_count": 19,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0417",
    "content": "```\nb =\n```\n\n```\ndatetime\n```",
    "section_title": "Date Formats",
    "section_hierarchy": [
      "Date Formats"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 29,
      "word_count": 7,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0418",
    "content": "```\ndatetime\n```\n\n```\n2021-05-04 15:59:34\n```",
    "section_title": "Date Formats",
    "section_hierarchy": [
      "Date Formats"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 45,
      "word_count": 7,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0419",
    "content": "```\n2021-05-04 15:59:34\n```\n\n```\n\u2022\nSerial date numbers represent a calendar date as the number of days that have passed since a\nfixed base date. In MATLAB software, serial date number 1 is January 1,0000 A.D. Financial\nToolbox works internally with serial date numbers (such as, 730377). MATLAB also uses serial\ntime to represent fractions of days beginning at midnight. For example, 6 p.m. equals 0.75 serial\ndays, so 6:00 p.m. on 14-Sep-1999, in MATLAB, is serial date number 730377.75\n```\n\n```\n**Note** If you specify a two-digit year, MATLAB assumes that the year lies within the 100-year period\ncentered on the current year. See the function datenum for specific information. MATLAB internal\ndate handling and calculations generate no ambiguous values. However, whenever possible, use\nserial date numbers or date character vectors containing four-digit years.\n```",
    "section_title": "Date Formats",
    "section_hierarchy": [
      "Date Formats"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 868,
      "word_count": 137,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0420",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0421",
    "content": "**2-2**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 7,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0422",
    "content": "<!-- Page 47 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      47
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0423",
    "content": "Many Financial Toolbox functions that require dates as input arguments accept date character\nvectors, datetime arrays, or serial date numbers. If you are dealing with a few dates at the MATLAB\ncommand-line level, date character vectors are more convenient. If you are using Financial Toolbox\nfunctions on large numbers of dates, as in analyzing large portfolios or cash flows, performance\nimproves if you use datetime arrays or serial date numbers. For more information, see \u201cRepresent\nDates and Times in MATLAB\u201d.",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 513,
      "word_count": 80,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0424",
    "content": "Financial Toolbox provides functions that convert date character vectors to or from serial date\nnumbers. In addition, you can convert character vectors or serial date numbers to datetime arrays.\n\nFunctions that convert between date formats are:\n\n```\ndatedisp\nDisplays a numeric matrix with date entries formatted as date character\nvectors.\n```\n\n```\ndatenum\nConverts a date character vector to a serial date number.\n```\n\n```\ndatestr\nConverts a serial date number to a date character vector.\n```\n\n```\ndatetime\nConverts from date character vectors or serial date numbers to create a\ndatetime array.\n```\n\n```\ndatevec\nConverts a serial date number or date character vector to a date vector\nwhose elements are [Year Month Day Hour Minute Second].\n```\n\n```\nm2xdate\nConverts MATLAB serial date number to Excel\u00ae serial date number.\n```\n\n```\nx2mdate\nConverts Microsoft\u00ae Excel serial date number to MATLAB serial date\nnumber.\n```",
    "section_title": "Date Conversions",
    "section_hierarchy": [
      "Date Conversions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 918,
      "word_count": 146,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0425",
    "content": "```\nx2mdate\nConverts Microsoft\u00ae Excel serial date number to MATLAB serial date\nnumber.\n```\n\nFor more information, see \u201cConvert Between Text and datetime or duration Values\u201d.\n\n**Convert Between Datetime Arrays and Character Vectors**\n\nA date can be a character vector composed of fields related to a specific date and time. There are\nseveral ways to represent dates and times in several text formats. For example, all the following are\ncharacter vectors represent August 23, 2010 at 04:35:42 PM:",
    "section_title": "Date Conversions",
    "section_hierarchy": [
      "Date Conversions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 494,
      "word_count": 78,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0426",
    "content": "A date can be a character vector composed of fields related to a specific date and time. There are\nseveral ways to represent dates and times in several text formats. For example, all the following are\ncharacter vectors represent August 23, 2010 at 04:35:42 PM:\n\n```\n'23-Aug-2010 04:35:06 PM'\n'Wednesday, August 23'\n'08/23/10 16:35'\n'Aug 23 16:35:42.946'\n```\n\nA date character vector includes characters that separate the fields, such as the hyphen, space, and\ncolon used here:\n\n```\nd = '23-Aug-2010 16:35:42'\n```\n\n```\nConvert one or more date character vectors to a datetime array using the datetime function. For\nthe best performance, specify the format of the input character vectors as an input to datetime.\n```\n\n```\n**Note** The specifiers that datetime uses to describe date and time formats differ from the specifiers\nthat the datestr, datevec, and datenum functions accept.\n```\n\nHandle and Convert Dates",
    "section_title": "Date Conversions",
    "section_hierarchy": [
      "Date Conversions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 910,
      "word_count": 147,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0427",
    "content": "Handle and Convert Dates\n\n**2-3**",
    "section_title": "Date Conversions",
    "section_hierarchy": [
      "Date Conversions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0428",
    "content": "**2-3**\n\n<!-- Page 48 -->",
    "section_title": "Date Conversions",
    "section_hierarchy": [
      "Date Conversions"
    ],
    "page_numbers": [
      48
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 25,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0429",
    "content": "<!-- Page 48 -->\n\n```\nt = datetime(d,'InputFormat','dd-MMM-yyyy HH:mm:ss')\n```",
    "section_title": "Date Conversions",
    "section_hierarchy": [
      "Date Conversions"
    ],
    "page_numbers": [
      48
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 78,
      "word_count": 10,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0430",
    "content": "```\nt = datetime(d,'InputFormat','dd-MMM-yyyy HH:mm:ss')\n```\n\n```\nt =\n```",
    "section_title": "Date Conversions",
    "section_hierarchy": [
      "Date Conversions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 73,
      "word_count": 10,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0431",
    "content": "```\nt =\n```\n\n```\n23-Aug-2010 16:35:42\n```",
    "section_title": "Date Conversions",
    "section_hierarchy": [
      "Date Conversions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 41,
      "word_count": 8,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0432",
    "content": "```\n23-Aug-2010 16:35:42\n```\n\n```\nAlthough the date string, d, and the datetime scalar, t, look similar, they are not equal. View the\nsize and data type of each variable.\n```",
    "section_title": "Date Conversions",
    "section_hierarchy": [
      "Date Conversions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 174,
      "word_count": 31,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0433",
    "content": "```\nAlthough the date string, d, and the datetime scalar, t, look similar, they are not equal. View the\nsize and data type of each variable.\n```\n\n```\nwhos d t\n```",
    "section_title": "Date Conversions",
    "section_hierarchy": [
      "Date Conversions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 162,
      "word_count": 32,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0434",
    "content": "```\nwhos d t\n```\n\n```\nName      Size            Bytes  Class       Attributes\n```",
    "section_title": "Date Conversions",
    "section_hierarchy": [
      "Date Conversions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 81,
      "word_count": 12,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0435",
    "content": "```\nName      Size            Bytes  Class       Attributes\n```\n\n```\nd         1x20               40  char                  \n  t         1x1               121  datetime\n```",
    "section_title": "Date Conversions",
    "section_hierarchy": [
      "Date Conversions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 172,
      "word_count": 17,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0436",
    "content": "```\nd         1x20               40  char                  \n  t         1x1               121  datetime\n```\n\n```\nConvert a datetime array to a character vector that uses char or cellstr. For example, convert\nthe current date and time to a timestamp to append to a file name.\n```\n\n```\nt = datetime('now','Format','yyyy-MM-dd''T''HHmmss')\n```",
    "section_title": "Date Conversions",
    "section_hierarchy": [
      "Date Conversions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 340,
      "word_count": 47,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0437",
    "content": "```\nt = datetime('now','Format','yyyy-MM-dd''T''HHmmss')\n```\n\n```\nt =\n```\n\n```\ndatetime\n```",
    "section_title": "Date Conversions",
    "section_hierarchy": [
      "Date Conversions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 91,
      "word_count": 12,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0438",
    "content": "```\ndatetime\n```\n\n```\n2016-12-11T125628\n```",
    "section_title": "Date Conversions",
    "section_hierarchy": [
      "Date Conversions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 43,
      "word_count": 6,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0439",
    "content": "```\n2016-12-11T125628\n```\n\n```\nS = char(t);\nfilename = ['myTest_',S]\n```\n\n```\nfilename =\n```",
    "section_title": "Date Conversions",
    "section_hierarchy": [
      "Date Conversions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 92,
      "word_count": 15,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0440",
    "content": "```\nfilename =\n```\n\n```\n'myTest_2016-12-11T125628'\n```",
    "section_title": "Date Conversions",
    "section_hierarchy": [
      "Date Conversions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 54,
      "word_count": 7,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0441",
    "content": "```\n'myTest_2016-12-11T125628'\n```\n\n**Convert Serial Date Numbers to Datetime Arrays**\n\n```\nSerial time can represent fractions of days beginning at midnight. For example, 6 p.m. equals 0.75\nserial days, so the character vector '31-Oct-2003, 6:00 PM' in MATLAB is date number\n731885.75.\n```\n\n```\nConvert one or more serial date numbers to a datetime array using the datetime function. Specify\nthe type of date number that is being converted:\n```\n\n```\nt = datetime(731885.75,'ConvertFrom','datenum')\n```",
    "section_title": "Date Conversions",
    "section_hierarchy": [
      "Date Conversions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 502,
      "word_count": 75,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0442",
    "content": "```\nt = datetime(731885.75,'ConvertFrom','datenum')\n```\n\n```\nt =\n```\n\n```\ndatetime\n```",
    "section_title": "Date Conversions",
    "section_hierarchy": [
      "Date Conversions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 86,
      "word_count": 12,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0443",
    "content": "```\ndatetime\n```\n\n```\n31-Oct-2003 18:00:00\n```\n\n**Convert Datetime Arrays to Numeric Values**\n\n```\nSome MATLAB functions accept numeric data types but not datetime values as inputs. To apply these\nfunctions to your date and time data, first, convert datetime values to meaningful numeric values, and\nthen call the function. For example, the log function accepts double inputs but not datetime\ninputs. Suppose that you have a datetime array of dates spanning the course of a research study or\nexperiment.\n```",
    "section_title": "Date Conversions",
    "section_hierarchy": [
      "Date Conversions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 507,
      "word_count": 81,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0444",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0445",
    "content": "**2-4**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 7,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0446",
    "content": "<!-- Page 49 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      49
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0447",
    "content": "```\nt = datetime(2014,6,18) + calmonths(1:4)\n```\n\n```\nt =\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 61,
      "word_count": 11,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0448",
    "content": "```\nt =\n```\n\n```\n1\u00d74 datetime array\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 39,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0449",
    "content": "```\n1\u00d74 datetime array\n```\n\n```\n18-Jul-2014   18-Aug-2014   18-Sep-2014   18-Oct-2014\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 89,
      "word_count": 11,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0450",
    "content": "```\n18-Jul-2014   18-Aug-2014   18-Sep-2014   18-Oct-2014\n```\n\nSubtract the origin value. For example, the origin value can be the starting day of an experiment.",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 161,
      "word_count": 23,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0451",
    "content": "Subtract the origin value. For example, the origin value can be the starting day of an experiment.\n\n```\ndt = t - datetime(2014,7,1)\n```\n\n```\ndt =\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 149,
      "word_count": 28,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0452",
    "content": "```\ndt =\n```\n\n```\n1\u00d74 duration array\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 40,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0453",
    "content": "```\n1\u00d74 duration array\n```\n\n```\n408:00:00   1152:00:00   1896:00:00   2616:00:00\n```\n\n```\ndt is a duration array. Convert dt to a double array of values in units of years, days, hours,\nminutes, or seconds by using the years, days, hours, minutes, or seconds function, respectively.\n```\n\n```\nx = hours(dt)\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 308,
      "word_count": 51,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0454",
    "content": "```\nx = hours(dt)\n```\n\n```\nx =\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 34,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0455",
    "content": "```\nx =\n```\n\n```\n408        1152        1896        2616\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 60,
      "word_count": 10,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0456",
    "content": "```\n408        1152        1896        2616\n```\n\n```\nPass the double array as the input to the log function.\n```\n\n```\ny = log(x)\n```\n\n```\ny =\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 145,
      "word_count": 28,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0457",
    "content": "```\ny =\n```\n\n```\n6.0113    7.0493    7.5475    7.8694\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 57,
      "word_count": 10,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0458",
    "content": "```\n6.0113    7.0493    7.5475    7.8694\n```\n\n**Input Conversions with datenum**\n\n```\nThe datenum function is important for using Financial Toolbox software efficiently. datenum takes an\ninput date character vector in any of several formats, with 'dd-mmm-yyyy', 'mm/dd/yyyy', or\n'dd-mmm-yyyy, hh:mm:ss.ss' formats being the most common. The input date character vector\ncan have up to six fields formed by letters and numbers separated by any other characters, such that:\n```\n\n```\n\u2022\nThe day field is an integer from 1 through 31.\n```\n\n```\n\u2022\nThe month field is either an integer from 1 through 12 or an alphabetical character vector with at\nleast three characters.\n```\n\n\u2022\nThe year field is a nonnegative integer. If only two numbers are specified, then the year is\nassumed to lie within the 100-year period centered on the current year. If the year is omitted, the\ncurrent year is the default.\n\n```\n\u2022\nThe hours, minutes, and seconds fields are optional. They are integers separated by colons or\nfollowed by 'am' or 'pm'.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1022,
      "word_count": 170,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0459",
    "content": "```\n\u2022\nThe hours, minutes, and seconds fields are optional. They are integers separated by colons or\nfollowed by 'am' or 'pm'.\n```\n\nFor example, if the current year is 1999, then all these dates are equivalent:\n\n```\n'17-May-1999'\n'17-May-99'\n'17-may'\n'May 17, 1999'\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 268,
      "word_count": 45,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0460",
    "content": "```\n'17-May-1999'\n'17-May-99'\n'17-may'\n'May 17, 1999'\n```\n\nHandle and Convert Dates",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 83,
      "word_count": 12,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0461",
    "content": "Handle and Convert Dates\n\n**2-5**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0462",
    "content": "**2-5**\n\n<!-- Page 50 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      50
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 25,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0463",
    "content": "<!-- Page 50 -->\n\n```\n'5/17/99'\n'5/17'\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      50
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 42,
      "word_count": 8,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0464",
    "content": "```\n'5/17/99'\n'5/17'\n```\n\nAlso, both of these formats represent the same time.\n\n```\n'17-May-1999, 18:30'\n'5/17/99/6:30 pm'\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 126,
      "word_count": 19,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0465",
    "content": "```\n'17-May-1999, 18:30'\n'5/17/99/6:30 pm'\n```\n\nThe default format for numbers-only input follows the US convention. Therefore, 3/6 is March 6, not\nJune 3.",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 155,
      "word_count": 24,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0466",
    "content": "The default format for numbers-only input follows the US convention. Therefore, 3/6 is March 6, not\nJune 3.\n\n```\nWith datenum, you can convert dates into serial date format, store them in a matrix variable, and\nthen later pass the variable to a function. Alternatively, you can use datenum directly in a function\ninput argument list.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 337,
      "word_count": 57,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0467",
    "content": "```\nWith datenum, you can convert dates into serial date format, store them in a matrix variable, and\nthen later pass the variable to a function. Alternatively, you can use datenum directly in a function\ninput argument list.\n```\n\n```\nFor example, consider the function bndprice that computes the price of a bond given the yield to\nmaturity. First set up variables for the yield to maturity, coupon rate, and the necessary dates.\n```\n\n```\nYield       = 0.07;\nCouponRate  = 0.08;\nSettle      = datenum('17-May-2000');\nMaturity    = datenum('01-Oct-2000');\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 557,
      "word_count": 88,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0468",
    "content": "```\nYield       = 0.07;\nCouponRate  = 0.08;\nSettle      = datenum('17-May-2000');\nMaturity    = datenum('01-Oct-2000');\n```\n\nThen call the function with the variables.",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 167,
      "word_count": 21,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0469",
    "content": "Then call the function with the variables.\n\n```\nbndprice(Yield,CouponRate,Settle,Maturity)\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 94,
      "word_count": 10,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0470",
    "content": "```\nbndprice(Yield,CouponRate,Settle,Maturity)\n```\n\n```\nans =\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 65,
      "word_count": 7,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0471",
    "content": "```\nans =\n```\n\n```\n100.3503\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 31,
      "word_count": 7,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0472",
    "content": "```\n100.3503\n```\n\nAlternatively, convert date character vectors to serial date numbers directly in the function input\nargument list.\n\n```\nbndprice(0.07,0.08,datenum('17-May-2000'),... \ndatenum('01-Oct-2000'))\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 212,
      "word_count": 23,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0473",
    "content": "```\nbndprice(0.07,0.08,datenum('17-May-2000'),... \ndatenum('01-Oct-2000'))\n```\n\n```\nans =\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 93,
      "word_count": 8,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0474",
    "content": "```\nans =\n```\n\n```\n100.3503\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 31,
      "word_count": 7,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0475",
    "content": "```\n100.3503\n```\n\n```\nbndprice is an example of a function designed to detect the presence of date character vectors and\nmake the conversion automatically. For functions like bndprice, date character vectors can be\npassed directly.\n```\n\n```\nbndprice(0.07,0.08,'17-May-2000','01-Oct-2000')\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 292,
      "word_count": 40,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0476",
    "content": "```\nbndprice(0.07,0.08,'17-May-2000','01-Oct-2000')\n```\n\n```\nans =\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 70,
      "word_count": 7,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0477",
    "content": "```\nans =\n```\n\n```\n100.3503\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 31,
      "word_count": 7,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0478",
    "content": "```\n100.3503\n```\n\nThe decision to represent dates as either date character vectors or serial date numbers is often a\nmatter of convenience. For example, when formatting data for visual display or for debugging date-\nhandling code, you can view dates more easily as date character vectors because serial date numbers\nare difficult to interpret. Alternately, serial date numbers are just another type of numeric data, which\nyou can place in a matrix along with any other numeric data for convenient manipulation.\n\nRemember that if you create a vector of input date character vectors, use a column vector, and be\nsure that all character vectors are the same length. To ensure that the character vectors are the same",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 712,
      "word_count": 118,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0479",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0480",
    "content": "**2-6**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 7,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0481",
    "content": "<!-- Page 51 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      51
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0482",
    "content": "length, fill the character vectors with spaces or zeros. For more information, see \u201cCharacter Vector\nInput\u201d on page 1-16.",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 121,
      "word_count": 19,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0483",
    "content": "**Output Conversions with datestr**\n\n```\nThe datestr function converts a serial date number to one of 19 different date character vector\noutput formats showing date, time, or both. The default output for dates is a day-month-year\ncharacter vector, for example, 24-Aug-2000. The datestr function is useful for preparing output\nreports.\n```\n\n```\n**datestr**** Format**\n**Description**\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 386,
      "word_count": 56,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0484",
    "content": "```\n**datestr**** Format**\n**Description**\n```\n\n```\n01-Mar-2000 15:45:17\nday-month-year hour:minute:second\n```\n\n```\n01-Mar-2000\nday-month-year\n```\n\n```\n03/01/00\nmonth/day/year\n```\n\n```\nMar\nmonth, three letters\n```\n\n```\nM\nmonth, single letter\n```\n\n```\n3\nmonth number\n```\n\n```\n03/01\nmonth/day\n```\n\n```\n1\nday of month\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 318,
      "word_count": 46,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0485",
    "content": "```\n1\nday of month\n```\n\n```\nWed\nday of week, three letters\n```\n\n```\nW\nday of week, single letter\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 100,
      "word_count": 22,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0486",
    "content": "```\nW\nday of week, single letter\n```\n\n```\n2000\nyear, four numbers\n```\n\n```\n99\nyear, two numbers\n```\n\n```\nMar01\nmonth year\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 125,
      "word_count": 25,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0487",
    "content": "```\nMar01\nmonth year\n```\n\n```\n15:45:17\nhour:minute:second\n```\n\n```\n03:45:17 PM\nhour:minute:second AM or PM\n```\n\n```\n15:45\nhour:minute\n```\n\n```\n03:45 PM\nhour:minute AM or PM\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 176,
      "word_count": 29,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0488",
    "content": "```\n03:45 PM\nhour:minute AM or PM\n```\n\n```\nQ1-99\ncalendar quarter-year\n```\n\n```\nQ1\ncalendar quarter\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 103,
      "word_count": 18,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0489",
    "content": "```\nThe today and now functions return serial date numbers for the current date, and the current date\nand time, respectively.\n```\n\n```\ntoday\n```",
    "section_title": "Current Date and Time",
    "section_hierarchy": [
      "Current Date and Time"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 144,
      "word_count": 25,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0490",
    "content": "```\ntoday\n```\n\n```\nans =\n```",
    "section_title": "Current Date and Time",
    "section_hierarchy": [
      "Current Date and Time"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 28,
      "word_count": 7,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0491",
    "content": "```\nans =\n```\n\n```\n736675\n```",
    "section_title": "Current Date and Time",
    "section_hierarchy": [
      "Current Date and Time"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 29,
      "word_count": 7,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0492",
    "content": "```\n736675\n```\n\n```\nnow\n```",
    "section_title": "Current Date and Time",
    "section_hierarchy": [
      "Current Date and Time"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 27,
      "word_count": 6,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0493",
    "content": "```\nnow\n```\n\n```\nans =\n```",
    "section_title": "Current Date and Time",
    "section_hierarchy": [
      "Current Date and Time"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 7,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0494",
    "content": "```\nans =\n```\n\n```\n7.3668e+05\n```",
    "section_title": "Current Date and Time",
    "section_hierarchy": [
      "Current Date and Time"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 7,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0495",
    "content": "```\n7.3668e+05\n```\n\nHandle and Convert Dates",
    "section_title": "Current Date and Time",
    "section_hierarchy": [
      "Current Date and Time"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 44,
      "word_count": 7,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0496",
    "content": "Handle and Convert Dates\n\n**2-7**",
    "section_title": "Current Date and Time",
    "section_hierarchy": [
      "Current Date and Time"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0497",
    "content": "**2-7**\n\n<!-- Page 52 -->",
    "section_title": "Current Date and Time",
    "section_hierarchy": [
      "Current Date and Time"
    ],
    "page_numbers": [
      52
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 25,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0498",
    "content": "<!-- Page 52 -->\n\n```\nThe MATLAB function date returns a character vector for the current date.\n```\n\n```\ndate\n```",
    "section_title": "Current Date and Time",
    "section_hierarchy": [
      "Current Date and Time"
    ],
    "page_numbers": [
      52
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 113,
      "word_count": 21,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0499",
    "content": "```\ndate\n```\n\n```\nans =\n```",
    "section_title": "Current Date and Time",
    "section_hierarchy": [
      "Current Date and Time"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 27,
      "word_count": 7,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0500",
    "content": "```\nans =\n```\n\n```\n'11-Dec-2016'\n```",
    "section_title": "Current Date and Time",
    "section_hierarchy": [
      "Current Date and Time"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 36,
      "word_count": 7,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0501",
    "content": "```\nFinancial Toolbox provides many functions for determining specific dates. For example, assume that\nyou schedule an accounting procedure for the last Friday of every month. Use the lweekdate\nfunction to return those dates for the year 2000. The input argument 6 specifies Friday.\n```\n\n```\nFridates = lweekdate(6,2000,1:12);\nFridays = datestr(Fridates)\n```\n\n```\nFridays =\n```",
    "section_title": "Determining Specific Dates",
    "section_hierarchy": [
      "Determining Specific Dates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 377,
      "word_count": 57,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0502",
    "content": "```\nFridays =\n```\n\n```\n12\u00d711 char array\n```",
    "section_title": "Determining Specific Dates",
    "section_hierarchy": [
      "Determining Specific Dates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 43,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0503",
    "content": "```\n12\u00d711 char array\n```\n\n```\n'28-Jan-2000'\n    '25-Feb-2000'\n    '31-Mar-2000'\n    '28-Apr-2000'\n    '26-May-2000'\n    '30-Jun-2000'\n    '28-Jul-2000'\n    '25-Aug-2000'\n    '29-Sep-2000'\n    '27-Oct-2000'\n    '24-Nov-2000'\n    '29-Dec-2000'\n```",
    "section_title": "Determining Specific Dates",
    "section_hierarchy": [
      "Determining Specific Dates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 245,
      "word_count": 19,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0504",
    "content": "```\n'28-Jan-2000'\n    '25-Feb-2000'\n    '31-Mar-2000'\n    '28-Apr-2000'\n    '26-May-2000'\n    '30-Jun-2000'\n    '28-Jul-2000'\n    '25-Aug-2000'\n    '29-Sep-2000'\n    '27-Oct-2000'\n    '24-Nov-2000'\n    '29-Dec-2000'\n```\n\n```\nAnother example of needing specific dates could be that your company closes on Martin Luther King\nJr. Day, which is the third Monday in January. You can use the nweekdate function to determine those\nspecific dates for 2011 through 2014.\n```\n\n```\nMLKDates = nweekdate(3,2,2011:2014,1);\nMLKDays = datestr(MLKDates)\n```\n\n```\nMLKDays =\n```",
    "section_title": "Determining Specific Dates",
    "section_hierarchy": [
      "Determining Specific Dates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 560,
      "word_count": 68,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0505",
    "content": "```\nMLKDays =\n```\n\n```\n4\u00d711 char array\n```",
    "section_title": "Determining Specific Dates",
    "section_hierarchy": [
      "Determining Specific Dates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 42,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0506",
    "content": "```\n4\u00d711 char array\n```\n\n```\n'17-Jan-2011'\n    '16-Jan-2012'\n    '21-Jan-2013'\n    '20-Jan-2014'\n```",
    "section_title": "Determining Specific Dates",
    "section_hierarchy": [
      "Determining Specific Dates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 100,
      "word_count": 11,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0507",
    "content": "```\nAccounting for holidays and other nontrading days is important when you examine financial dates.\nFinancial Toolbox provides the holidays function, which contains holidays and special nontrading\ndays for the New York Stock Exchange from 1950 through 2030, inclusive. In addition, you can use\nnyseclosures to evaluate all known or anticipated closures of the New York Stock Exchange from\n```",
    "section_title": "Determining Holidays",
    "section_hierarchy": [
      "Determining Holidays"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 393,
      "word_count": 60,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0508",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0509",
    "content": "**2-8**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 7,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0510",
    "content": "<!-- Page 53 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      53
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0511",
    "content": "```\nJanuary 1, 1885, to December 31, 2050. nyseclosures returns a vector of serial date numbers\ncorresponding to market closures between the dates StartDate and EndDate, inclusive.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 184,
      "word_count": 28,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0512",
    "content": "```\nIn this example, use holidays to determine the standard holidays in the last half of 2012.\n```\n\n```\nLHHDates = holidays('1-Jul-2012','31-Dec-2012');\nLHHDays = datestr(LHHDates)\n```\n\n```\nLHHDays =\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 203,
      "word_count": 30,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0513",
    "content": "```\nLHHDays =\n```\n\n```\n6\u00d711 char array\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 42,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0514",
    "content": "```\n6\u00d711 char array\n```\n\n```\n'04-Jul-2012'\n    '03-Sep-2012'\n    '29-Oct-2012'\n    '30-Oct-2012'\n    '22-Nov-2012'\n    '25-Dec-2012'\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 136,
      "word_count": 13,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0515",
    "content": "```\n'04-Jul-2012'\n    '03-Sep-2012'\n    '29-Oct-2012'\n    '30-Oct-2012'\n    '22-Nov-2012'\n    '25-Dec-2012'\n```\n\n```\nYou can then use the busdate function to determine the next business day in 2012 after these\nholidays.\n```\n\n```\nLHNextDates = busdate(LHHDates);\nLHNextDays = datestr(LHNextDates)\n```\n\n```\nLHNextDays =\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 321,
      "word_count": 40,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0516",
    "content": "```\nLHNextDays =\n```\n\n```\n6\u00d711 char array\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 45,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0517",
    "content": "```\n6\u00d711 char array\n```\n\n```\n'05-Jul-2012'\n    '04-Sep-2012'\n    '31-Oct-2012'\n    '31-Oct-2012'\n    '23-Nov-2012'\n    '26-Dec-2012'\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 136,
      "word_count": 13,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0518",
    "content": "```\nTo determine cash-flow dates for securities with periodic payments, use cfdates. This function\naccounts for the coupons per year, the day-count basis, and the end-of-month rule. For example, you\ncan determine the cash-flow dates for a security that pays four coupons per year on the last day of\nthe month using an actual/365 day-count basis. To do so, enter the settlement date, the maturity\ndate, and the parameters for Period, Basis, and EndMonthRule.\n```\n\n```\nPayDates = cfdates('14-Mar-2000','30-Nov-2001',4,3,1);\nPayDays = datestr(PayDates)\n```\n\n```\nPayDays =\n```",
    "section_title": "Determining Cash-Flow Dates",
    "section_hierarchy": [
      "Determining Cash-Flow Dates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 572,
      "word_count": 87,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0519",
    "content": "```\nPayDays =\n```\n\n```\n7\u00d711 char array\n```",
    "section_title": "Determining Cash-Flow Dates",
    "section_hierarchy": [
      "Determining Cash-Flow Dates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 42,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0520",
    "content": "```\n7\u00d711 char array\n```\n\n```\n'31-May-2000'\n    '31-Aug-2000'\n    '30-Nov-2000'\n    '28-Feb-2001'\n    '31-May-2001'\n    '31-Aug-2001'\n    '30-Nov-2001'\n```",
    "section_title": "Determining Cash-Flow Dates",
    "section_hierarchy": [
      "Determining Cash-Flow Dates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 154,
      "word_count": 14,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0521",
    "content": "```\n'31-May-2000'\n    '31-Aug-2000'\n    '30-Nov-2000'\n    '28-Feb-2001'\n    '31-May-2001'\n    '31-Aug-2001'\n    '30-Nov-2001'\n```\n\nHandle and Convert Dates",
    "section_title": "Determining Cash-Flow Dates",
    "section_hierarchy": [
      "Determining Cash-Flow Dates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 155,
      "word_count": 13,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0522",
    "content": "Handle and Convert Dates\n\n**2-9**",
    "section_title": "Determining Cash-Flow Dates",
    "section_hierarchy": [
      "Determining Cash-Flow Dates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0523",
    "content": "**2-9**\n\n<!-- Page 54 -->",
    "section_title": "Determining Cash-Flow Dates",
    "section_hierarchy": [
      "Determining Cash-Flow Dates"
    ],
    "page_numbers": [
      54
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 25,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0524",
    "content": "datedisp | datenum | datestr | datetime | datevec | format | date | holidays |\nnyseclosures | busdate | cfdates | addBusinessCalendar",
    "section_title": "See Also",
    "section_hierarchy": [
      "See Also"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 133,
      "word_count": 23,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0525",
    "content": "\u2022\n\u201cConvert Between Text and datetime or duration Values\u201d",
    "section_title": "Related Examples",
    "section_hierarchy": [
      "Related Examples"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 56,
      "word_count": 9,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0526",
    "content": "\u2022\n\u201cRead Collection or Sequence of Spreadsheet Files\u201d",
    "section_title": "Related Examples",
    "section_hierarchy": [
      "Related Examples"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 52,
      "word_count": 8,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0527",
    "content": "\u2022\n\u201cTrading Calendars User Interface\u201d on page 12-2\n\n\u2022\n\u201cUICalendar User Interface\u201d on page 12-4",
    "section_title": "Related Examples",
    "section_hierarchy": [
      "Related Examples"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 93,
      "word_count": 15,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0528",
    "content": "\u2022\n\u201cConvert Dates Between Microsoft Excel and MATLAB\u201d (Spreadsheet Link)",
    "section_title": "More About",
    "section_hierarchy": [
      "More About"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 71,
      "word_count": 10,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0529",
    "content": "\u2022\nAutomated Data Cleaning and Preparation in MATLAB (43 min)",
    "section_title": "External Websites",
    "section_hierarchy": [
      "External Websites"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 60,
      "word_count": 10,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0530",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0531",
    "content": "**2-10**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0532",
    "content": "<!-- Page 55 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      55
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0533",
    "content": "**In this section...**",
    "section_title": "Analyzing and Computing Cash Flows",
    "section_hierarchy": [
      "Analyzing and Computing Cash Flows"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 22,
      "word_count": 3,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0534",
    "content": "\u201cIntroduction\u201d on page 2-11",
    "section_title": "Analyzing and Computing Cash Flows",
    "section_hierarchy": [
      "Analyzing and Computing Cash Flows"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 27,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0535",
    "content": "\u201cInterest Rates/Rates of Return\u201d on page 2-11\n\n\u201cPresent or Future Values\u201d on page 2-12\n\n\u201cDepreciation\u201d on page 2-13\n\n\u201cAnnuities\u201d on page 2-13",
    "section_title": "Analyzing and Computing Cash Flows",
    "section_hierarchy": [
      "Analyzing and Computing Cash Flows"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 141,
      "word_count": 22,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0536",
    "content": "Financial Toolbox cash-flow functions compute interest rates and rates of return, present or future\nvalues, depreciation streams, and annuities.",
    "section_title": "Introduction",
    "section_hierarchy": [
      "Introduction"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 144,
      "word_count": 19,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0537",
    "content": "Some examples in this section use this income stream: an initial investment of $20,000 followed by\nthree annual return payments, a second investment of $5,000, then four more returns. Investments\nare negative cash flows, return payments are positive cash flows.",
    "section_title": "Introduction",
    "section_hierarchy": [
      "Introduction"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 261,
      "word_count": 40,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0538",
    "content": "```\nStream = [-20000,  2000,  2500,  3500, -5000,  6500,...\n            9500,  9500,  9500];\n```",
    "section_title": "Introduction",
    "section_hierarchy": [
      "Introduction"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 96,
      "word_count": 13,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0539",
    "content": "```\nThis example shows how to compute the internal rate of return of the cash stream using irr.\n```",
    "section_title": "Interest Rates/Rates of Return",
    "section_hierarchy": [
      "Interest Rates/Rates of Return"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 99,
      "word_count": 19,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0540",
    "content": "Specify the income stream as an initial investment of $20,000 followed by three annual return\npayments, a second investment of $5,000, then four more returns. Investments are negative cash\nflows, return payments are positive cash flows.",
    "section_title": "Interest Rates/Rates of Return",
    "section_hierarchy": [
      "Interest Rates/Rates of Return"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 236,
      "word_count": 36,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0541",
    "content": "```\nStream = [-20000,  2000,  2500,  3500, -5000,  6500, ...\n            9500,  9500,  9500];\n```\n\n```\nUse irr to compute the internal rate of return of the cash stream.\n```\n\n```\nROR = irr(Stream)\n```",
    "section_title": "Interest Rates/Rates of Return",
    "section_hierarchy": [
      "Interest Rates/Rates of Return"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 200,
      "word_count": 34,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0542",
    "content": "```\nROR = irr(Stream)\n```\n\n```\nROR = \n0.1172\n```",
    "section_title": "Interest Rates/Rates of Return",
    "section_hierarchy": [
      "Interest Rates/Rates of Return"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 48,
      "word_count": 10,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0543",
    "content": "```\nROR = \n0.1172\n```\n\nThe rate of return is 11.72%.\n\n```\nThe internal rate of return of a cash flow may not have a unique value. Every time the sign changes in\na cash flow, the equation defining irr can give up to two additional answers. An irr computation\nrequires solving a polynomial equation, and the number of real roots of such an equation can depend\non the number of sign changes in the coefficients. The equation for internal rate of return is\n```\n\n```\nwhere *Investment* is a (negative) initial cash outlay at time 0, *cf*n is the cash flow in the *n*th period,\nand *n* is the number of periods. irr finds the rate *r* such that the present value of the cash flow\n```\n\nAnalyzing and Computing Cash Flows",
    "section_title": "Interest Rates/Rates of Return",
    "section_hierarchy": [
      "Interest Rates/Rates of Return"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 713,
      "word_count": 133,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0544",
    "content": "Analyzing and Computing Cash Flows\n\n**2-11**",
    "section_title": "Interest Rates/Rates of Return",
    "section_hierarchy": [
      "Interest Rates/Rates of Return"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 44,
      "word_count": 6,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0545",
    "content": "**2-11**\n\n<!-- Page 56 -->",
    "section_title": "Interest Rates/Rates of Return",
    "section_hierarchy": [
      "Interest Rates/Rates of Return"
    ],
    "page_numbers": [
      56
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0546",
    "content": "<!-- Page 56 -->\n\nequals the initial investment. If all the cf*n*s are positive there is only one solution. Every time there is\na change of sign between coefficients, up to two additional real roots are possible.",
    "section_title": "Interest Rates/Rates of Return",
    "section_hierarchy": [
      "Interest Rates/Rates of Return"
    ],
    "page_numbers": [
      56
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 212,
      "word_count": 37,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0547",
    "content": "equals the initial investment. If all the cf*n*s are positive there is only one solution. Every time there is\na change of sign between coefficients, up to two additional real roots are possible.\n\n```\nAnother toolbox rate function, effrr, calculates the effective rate of return given an annual interest\nrate (also known as nominal rate or annual percentage rate, APR) and number of compounding\nperiods per year. To find the effective rate of a 9% APR compounded monthly, enter\n```\n\n```\nRate = effrr(0.09, 12)\n```\n\n```\nRate = \n0.0938\n```\n\n```\nThe Rate is 9.38%.\n```",
    "section_title": "Interest Rates/Rates of Return",
    "section_hierarchy": [
      "Interest Rates/Rates of Return"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 564,
      "word_count": 97,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0548",
    "content": "```\nThe Rate is 9.38%.\n```\n\n```\nA companion function nomrr computes the nominal rate of return given the effective annual rate and\nthe number of compounding periods.\n```",
    "section_title": "Interest Rates/Rates of Return",
    "section_hierarchy": [
      "Interest Rates/Rates of Return"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 169,
      "word_count": 29,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0549",
    "content": "This example shows how to compute the present or future value of cash flows at regular or irregular\ntime intervals with equal or unequal payments.\n\n```\nTo compute the present or future value, you can use the following functuions: fvfix, fvvar, pvfix,\nand pvvar. The -fix functions assume equal cash flows at regular intervals, while the -var\nfunctions allow irregular cash flows at irregular periods.\n```",
    "section_title": "Present or Future Values",
    "section_hierarchy": [
      "Present or Future Values"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 404,
      "word_count": 66,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0550",
    "content": "```\nTo compute the present or future value, you can use the following functuions: fvfix, fvvar, pvfix,\nand pvvar. The -fix functions assume equal cash flows at regular intervals, while the -var\nfunctions allow irregular cash flows at irregular periods.\n```\n\nSpecify the income stream as an initial investment of $20,000 followed by three annual return\npayments, a second investment of $5,000, then four more returns. Investments are negative cash\nflows, return payments are positive cash flows.",
    "section_title": "Present or Future Values",
    "section_hierarchy": [
      "Present or Future Values"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 494,
      "word_count": 77,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0551",
    "content": "Specify the income stream as an initial investment of $20,000 followed by three annual return\npayments, a second investment of $5,000, then four more returns. Investments are negative cash\nflows, return payments are positive cash flows.\n\n```\nStream = [-20000,  2000,  2500,  3500, -5000,  6500, ...\n            9500,  9500,  9500];\n```",
    "section_title": "Present or Future Values",
    "section_hierarchy": [
      "Present or Future Values"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 335,
      "word_count": 50,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0552",
    "content": "```\nStream = [-20000,  2000,  2500,  3500, -5000,  6500, ...\n            9500,  9500,  9500];\n```\n\n```\nUse irr to compute the internal rate of return of the cash stream.\n```\n\n```\nROR = irr(Stream)\n```",
    "section_title": "Present or Future Values",
    "section_hierarchy": [
      "Present or Future Values"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 200,
      "word_count": 34,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0553",
    "content": "```\nROR = irr(Stream)\n```\n\n```\nROR = \n0.1172\n```",
    "section_title": "Present or Future Values",
    "section_hierarchy": [
      "Present or Future Values"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 48,
      "word_count": 10,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0554",
    "content": "```\nROR = \n0.1172\n```\n\nCompute the net present value of the sample income stream for which you computed the internal rate\nof return. This exercise also serves as a check on that calculation because the net present value of a\ncash stream at its internal rate of return should be zero. Enter",
    "section_title": "Present or Future Values",
    "section_hierarchy": [
      "Present or Future Values"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 289,
      "word_count": 53,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0555",
    "content": "Compute the net present value of the sample income stream for which you computed the internal rate\nof return. This exercise also serves as a check on that calculation because the net present value of a\ncash stream at its internal rate of return should be zero. Enter\n\n```\nNPV = pvvar(Stream, ROR)\n```",
    "section_title": "Present or Future Values",
    "section_hierarchy": [
      "Present or Future Values"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 300,
      "word_count": 54,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0556",
    "content": "```\nNPV = pvvar(Stream, ROR)\n```\n\n```\nNPV = \n5.9117e-12\n```\n\n```\nThe NPV is very close to zero. The answer usually is not *exactly* zero due to rounding errors and the\ncomputational precision of the computer. Note, other toolbox functions behave similarly. The\nfunctions that compute a bond's yield, for example, often must solve a nonlinear equation. If you then\nuse that yield to compute the net present value of the bond's income stream, it usually does not\n*exactly* equal the purchase price, but the difference is negligible for practical applications.\n```",
    "section_title": "Present or Future Values",
    "section_hierarchy": [
      "Present or Future Values"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 561,
      "word_count": 93,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0557",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0558",
    "content": "**2-12**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0559",
    "content": "<!-- Page 57 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      57
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0560",
    "content": "```\nThis example shows how to compute standard depreciation schedules using depgendb.\n```",
    "section_title": "Depreciation",
    "section_hierarchy": [
      "Depreciation"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 89,
      "word_count": 13,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0561",
    "content": "The following code depreciates an automobile worth $15,000 over five years with a salvage value of\n$1,500. It computes the general declining balance using two different depreciation rates: 50% (or\n1.5), and 100% (or 2.0, also known as double declining balance).\n\n```\nDecline1 = depgendb(15000, 1500, 5, 1.5)\n```\n\n```\nDecline1 = *1\u00d75*\n103 \u00d7\n```\n\n```\n4.5000    3.1500    2.2050    1.5435    2.1015\n```\n\n```\nDecline2 = depgendb(15000, 1500, 5, 2.0)\n```\n\n```\nDecline2 = *1\u00d75*\n103 \u00d7\n```",
    "section_title": "Depreciation",
    "section_hierarchy": [
      "Depreciation"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 481,
      "word_count": 78,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0562",
    "content": "```\nDecline2 = *1\u00d75*\n103 \u00d7\n```\n\n```\n6.0000    3.6000    2.1600    1.2960    0.4440\n```",
    "section_title": "Depreciation",
    "section_hierarchy": [
      "Depreciation"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 86,
      "word_count": 14,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0563",
    "content": "```\n6.0000    3.6000    2.1600    1.2960    0.4440\n```\n\nThese results indicate the actual depreciation amount for the first four years and the remaining\ndepreciable value as the entry for the fifth year.",
    "section_title": "Depreciation",
    "section_hierarchy": [
      "Depreciation"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 203,
      "word_count": 31,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0564",
    "content": "```\nThis example shows how to work with annuities using annurate.\n```",
    "section_title": "Annuities",
    "section_hierarchy": [
      "Annuities"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 69,
      "word_count": 12,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0565",
    "content": "The following code shows how to compute the interest rate associated with a series of loan payments\nwhen only the payment amounts and principal are known. For a loan whose original value was\n$5000.00 and which was paid back monthly over four years at $130.00/month:\n\n```\nRate = annurate(4*12, 130, 5000, 0, 0)\n```\n\n```\nRate = \n0.0094\n```\n\n```\nThe function returns a rate of 0.0094 monthly, or about 11.28% annually.\n```",
    "section_title": "Annuities",
    "section_hierarchy": [
      "Annuities"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 419,
      "word_count": 73,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0566",
    "content": "```\nThe function returns a rate of 0.0094 monthly, or about 11.28% annually.\n```\n\n```\nYou can use a present-value function (pvfix) to compute the initial principal when the payment and\nrate are known. For a loan paid at $300.00/month over four years at 11% annual interest:\n```\n\n```\nPrincipal = pvfix(0.11/12, 4*12, 300, 0, 0)\n```\n\n```\nPrincipal = \n1.1607e+04\n```\n\nThe function returns the original principal value of $11,607.43.",
    "section_title": "Annuities",
    "section_hierarchy": [
      "Annuities"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 429,
      "word_count": 71,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0567",
    "content": "The function returns the original principal value of $11,607.43.\n\nAnalyzing and Computing Cash Flows",
    "section_title": "Annuities",
    "section_hierarchy": [
      "Annuities"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 100,
      "word_count": 14,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0568",
    "content": "Analyzing and Computing Cash Flows\n\n**2-13**",
    "section_title": "Annuities",
    "section_hierarchy": [
      "Annuities"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 44,
      "word_count": 6,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0569",
    "content": "**2-13**\n\n<!-- Page 58 -->",
    "section_title": "Annuities",
    "section_hierarchy": [
      "Annuities"
    ],
    "page_numbers": [
      58
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0570",
    "content": "<!-- Page 58 -->\n\n```\nYou can compute an amortization schedule using amortize for a loan or annuity. For example, the\noriginal value was $5000.00 and was paid back over 12 months at an annual rate of 9%.\n```\n\n```\n[Prpmt, Intpmt, Balance, Payment] = amortize(0.09/12, 12, 5000, 0, 0)\n```",
    "section_title": "Annuities",
    "section_hierarchy": [
      "Annuities"
    ],
    "page_numbers": [
      58
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 286,
      "word_count": 51,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0571",
    "content": "```\n[Prpmt, Intpmt, Balance, Payment] = amortize(0.09/12, 12, 5000, 0, 0)\n```\n\n```\nPrpmt = *1\u00d712*\n```",
    "section_title": "Annuities",
    "section_hierarchy": [
      "Annuities"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 101,
      "word_count": 17,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0572",
    "content": "```\nPrpmt = *1\u00d712*\n```\n\n```\n399.7574  402.7556  405.7762  408.8196  411.8857  414.9748  418.0872  421.2228  424.3820  427.5\n```",
    "section_title": "Annuities",
    "section_hierarchy": [
      "Annuities"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 127,
      "word_count": 17,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0573",
    "content": "```\n399.7574  402.7556  405.7762  408.8196  411.8857  414.9748  418.0872  421.2228  424.3820  427.5\n```\n\n```\nIntpmt = *1\u00d712*\n```\n\n```\n37.5000   34.5018   31.4812   28.4378   25.3717   22.2825   19.1702   16.0346   12.8754    9.6\n```\n\n```\nBalance = *1\u00d712*\n103 \u00d7\n```\n\n```\n4.6002    4.1975    3.7917    3.3829    2.9710    2.5560    2.1379    1.7167    1.2923    0.8\n```",
    "section_title": "Annuities",
    "section_hierarchy": [
      "Annuities"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 367,
      "word_count": 48,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0574",
    "content": "```\n4.6002    4.1975    3.7917    3.3829    2.9710    2.5560    2.1379    1.7167    1.2923    0.8\n```\n\n```\nPayment = \n437.2574\n```",
    "section_title": "Annuities",
    "section_hierarchy": [
      "Annuities"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 130,
      "word_count": 17,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0575",
    "content": "irr | effrr | nomrr | fvfix | fvvar | pvfix | pvvar",
    "section_title": "See Also",
    "section_hierarchy": [
      "See Also"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 51,
      "word_count": 13,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0576",
    "content": "\u2022\n\u201cHandle and Convert Dates\u201d on page 2-2",
    "section_title": "Related Examples",
    "section_hierarchy": [
      "Related Examples"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 40,
      "word_count": 8,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0577",
    "content": "\u2022\n\u201cPricing and Computing Yields for Fixed-Income Securities\u201d on page 2-15",
    "section_title": "Related Examples",
    "section_hierarchy": [
      "Related Examples"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 73,
      "word_count": 11,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0578",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0579",
    "content": "**2-14**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0580",
    "content": "<!-- Page 59 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      59
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0581",
    "content": "**In this section...**",
    "section_title": "Pricing and Computing Yields for Fixed-Income Securities",
    "section_hierarchy": [
      "Pricing and Computing Yields for Fixed-Income Securities"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 22,
      "word_count": 3,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0582",
    "content": "\u201cIntroduction\u201d on page 2-15",
    "section_title": "Pricing and Computing Yields for Fixed-Income Securities",
    "section_hierarchy": [
      "Pricing and Computing Yields for Fixed-Income Securities"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 27,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0583",
    "content": "\u201cFixed-Income Terminology\u201d on page 2-15",
    "section_title": "Pricing and Computing Yields for Fixed-Income Securities",
    "section_hierarchy": [
      "Pricing and Computing Yields for Fixed-Income Securities"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 39,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0584",
    "content": "\u201cFramework\u201d on page 2-18",
    "section_title": "Pricing and Computing Yields for Fixed-Income Securities",
    "section_hierarchy": [
      "Pricing and Computing Yields for Fixed-Income Securities"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 24,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0585",
    "content": "\u201cDefault Parameter Values\u201d on page 2-18",
    "section_title": "Pricing and Computing Yields for Fixed-Income Securities",
    "section_hierarchy": [
      "Pricing and Computing Yields for Fixed-Income Securities"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 39,
      "word_count": 6,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0586",
    "content": "\u201cCoupon Date Calculations\u201d on page 2-20\n\n\u201cYield Conventions\u201d on page 2-21\n\n\u201cPricing Functions\u201d on page 2-21\n\n\u201cYield Functions\u201d on page 2-21",
    "section_title": "Pricing and Computing Yields for Fixed-Income Securities",
    "section_hierarchy": [
      "Pricing and Computing Yields for Fixed-Income Securities"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 139,
      "word_count": 21,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0587",
    "content": "\u201cYield Functions\u201d on page 2-21\n\n\u201cFixed-Income Sensitivities\u201d on page 2-22",
    "section_title": "Pricing and Computing Yields for Fixed-Income Securities",
    "section_hierarchy": [
      "Pricing and Computing Yields for Fixed-Income Securities"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 73,
      "word_count": 10,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0588",
    "content": "The Financial Toolbox product provides functions for computing accrued interest, price, yield,\nconvexity, and duration of fixed-income securities. Various conventions exist for determining the\ndetails of these computations. The Financial Toolbox software supports conventions specified by the\nSecurities Industry and Financial Markets Association (SIFMA), used in the US markets, the\nInternational Capital Market Association (ICMA), used mainly in the European markets, and the\nInternational Swaps and Derivatives Association (ISDA). For historical reasons, SIFMA is referred to\nin Financial Toolbox documentation as SIA and ISMA is referred to as International Capital Market\nAssociation (ICMA). Financial Instruments Toolbox\u2122supports additional functionality for pricing\nfixed-income securities. For more information, see \u201cPrice Interest-Rate Instruments\u201d (Financial\nInstruments Toolbox).",
    "section_title": "Introduction",
    "section_hierarchy": [
      "Introduction"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 890,
      "word_count": 112,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0589",
    "content": "Since terminology varies among texts on this subject, here are some basic definitions that apply to\nthese Financial Toolbox functions.",
    "section_title": "Fixed-Income Terminology",
    "section_hierarchy": [
      "Fixed-Income Terminology"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 134,
      "word_count": 20,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0590",
    "content": "The *settlement date* of a bond is the date when money first changes hands; that is, when a buyer pays\nfor a bond. It need not coincide with the *issue date*, which is the date a bond is first offered for sale.\n\nThe *first coupon date* and *last coupon date* are the dates when the first and last coupons are paid,\nrespectively. Although bonds typically pay periodic annual or semiannual coupons, the length of the\nfirst and last coupon periods may differ from the standard coupon period. The toolbox includes price\nand yield functions that handle these odd first and/or last periods.\n\nSuccessive *quasi-coupon dates* determine the length of the standard coupon period for the fixed\nincome security of interest, and do not necessarily coincide with actual coupon payment dates. The\ntoolbox includes functions that calculate both actual and quasi-coupon dates for bonds with odd first\nand/or last periods.\n\nFixed-income securities can be purchased on dates that do not coincide with coupon payment dates.\nIn this case, the bond owner is not entitled to the full value of the coupon for that period. When a\nbond is purchased between coupon dates, the buyer must compensate the seller for the pro-rata\nshare of the coupon interest earned from the previous coupon payment date. This pro-rata share of",
    "section_title": "Fixed-Income Terminology",
    "section_hierarchy": [
      "Fixed-Income Terminology"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1296,
      "word_count": 216,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0591",
    "content": "Fixed-income securities can be purchased on dates that do not coincide with coupon payment dates.\nIn this case, the bond owner is not entitled to the full value of the coupon for that period. When a\nbond is purchased between coupon dates, the buyer must compensate the seller for the pro-rata\nshare of the coupon interest earned from the previous coupon payment date. This pro-rata share of\n\nPricing and Computing Yields for Fixed-Income Securities",
    "section_title": "Fixed-Income Terminology",
    "section_hierarchy": [
      "Fixed-Income Terminology"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 448,
      "word_count": 74,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0592",
    "content": "Pricing and Computing Yields for Fixed-Income Securities\n\n**2-15**",
    "section_title": "Fixed-Income Terminology",
    "section_hierarchy": [
      "Fixed-Income Terminology"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 66,
      "word_count": 8,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0593",
    "content": "**2-15**\n\n<!-- Page 60 -->",
    "section_title": "Fixed-Income Terminology",
    "section_hierarchy": [
      "Fixed-Income Terminology"
    ],
    "page_numbers": [
      60
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0594",
    "content": "<!-- Page 60 -->\n\nthe coupon payment is called *accrued interest*. The *purchase price*, the price paid for a bond, is the\nquoted market price plus accrued interest.\n\nThe *maturity date* of a bond is the date when the issuer returns the final face value, also known as the\n*redemption value* or *par value*, to the buyer. The *yield-to-maturity* of a bond is the nominal compound\nrate of return that equates the present value of all future cash flows (coupons and principal) to the\ncurrent market price of the bond.",
    "section_title": "Fixed-Income Terminology",
    "section_hierarchy": [
      "Fixed-Income Terminology"
    ],
    "page_numbers": [
      60
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 515,
      "word_count": 90,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0595",
    "content": "The *maturity date* of a bond is the date when the issuer returns the final face value, also known as the\n*redemption value* or *par value*, to the buyer. The *yield-to-maturity* of a bond is the nominal compound\nrate of return that equates the present value of all future cash flows (coupons and principal) to the\ncurrent market price of the bond.\n\n**Period**\n\nThe period of a bond refers to the frequency with which the issuer of a bond makes coupon payments\nto the holder.\n\n**Period of a Bond **\n\n**Period Value**\n**Payment Schedule**",
    "section_title": "Fixed-Income Terminology",
    "section_hierarchy": [
      "Fixed-Income Terminology"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 537,
      "word_count": 94,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0596",
    "content": "**Period Value**\n**Payment Schedule**\n\n```\n0\nNo coupons (Zero coupon bond)\n```",
    "section_title": "Fixed-Income Terminology",
    "section_hierarchy": [
      "Fixed-Income Terminology"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 78,
      "word_count": 12,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0597",
    "content": "```\n0\nNo coupons (Zero coupon bond)\n```\n\n```\n1\nAnnual\n```",
    "section_title": "Fixed-Income Terminology",
    "section_hierarchy": [
      "Fixed-Income Terminology"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 57,
      "word_count": 12,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0598",
    "content": "```\n1\nAnnual\n```\n\n```\n2\nSemiannual\n```",
    "section_title": "Fixed-Income Terminology",
    "section_hierarchy": [
      "Fixed-Income Terminology"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 38,
      "word_count": 8,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0599",
    "content": "```\n2\nSemiannual\n```\n\n```\n3\nTri-annual\n```",
    "section_title": "Fixed-Income Terminology",
    "section_hierarchy": [
      "Fixed-Income Terminology"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 42,
      "word_count": 8,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0600",
    "content": "```\n3\nTri-annual\n```\n\n```\n4\nQuarterly\n```\n\n```\n6\nBi-monthly\n```\n\n```\n12\nMonthly\n```",
    "section_title": "Fixed-Income Terminology",
    "section_hierarchy": [
      "Fixed-Income Terminology"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 83,
      "word_count": 16,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0601",
    "content": "```\n12\nMonthly\n```\n\n**Basis**",
    "section_title": "Fixed-Income Terminology",
    "section_hierarchy": [
      "Fixed-Income Terminology"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 29,
      "word_count": 5,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0602",
    "content": "**Basis**\n\nThe basis of a bond refers to the basis or day-count convention for a bond. Day count basis\ndetermines how interest accrues over time for various instruments and the amount transferred on\ninterest payment dates. Basis is normally expressed as a fraction in which the numerator determines\nthe number of days between two dates, and the denominator determines the number of days in the\nyear.\n\n```\nFor example, the numerator of *actual/actual* means that when determining the number of days\nbetween two dates, count the actual number of days; the denominator means that you use the actual\nnumber of days in the given year in any calculations (either 365 or 366 days depending on whether\nthe given year is a leap year). The calculation of accrued interest for dates between payments also\nuses day count basis. Day count basis is a fraction of Number of interest accrual days / Days\nin the relevant coupon period.\n```\n\n```\n**Note** Although the concept of day count sounds deceptively simple, the actual calculation of day\ncounts can be complex. You can find a good discussion of day counts and the formulas for calculating\nthem in Chapter 5 of Stigum and Robinson, *Money Market and Bond Calculations* in \u201cBibliography\u201d\non page A-2. For more information on Basis, see EMU and Market Conventions: Recent\nDevelopments.\n```",
    "section_title": "Fixed-Income Terminology",
    "section_hierarchy": [
      "Fixed-Income Terminology"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1326,
      "word_count": 222,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0603",
    "content": "```\n**Note** Although the concept of day count sounds deceptively simple, the actual calculation of day\ncounts can be complex. You can find a good discussion of day counts and the formulas for calculating\nthem in Chapter 5 of Stigum and Robinson, *Money Market and Bond Calculations* in \u201cBibliography\u201d\non page A-2. For more information on Basis, see EMU and Market Conventions: Recent\nDevelopments.\n```\n\nSupported day count conventions and basis values are:",
    "section_title": "Fixed-Income Terminology",
    "section_hierarchy": [
      "Fixed-Income Terminology"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 457,
      "word_count": 73,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0604",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0605",
    "content": "**2-16**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0606",
    "content": "<!-- Page 61 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      61
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0607",
    "content": "**Basis**\n**Value**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 19,
      "word_count": 2,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0608",
    "content": "**Day Count Convention**\n\n```\n0\n**actual/actual** (default) \u2014 Number of days in both a period and a year is the actual\nnumber of days. Also, another common actual/actual basis is basis 12.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 192,
      "word_count": 33,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0609",
    "content": "```\n0\n**actual/actual** (default) \u2014 Number of days in both a period and a year is the actual\nnumber of days. Also, another common actual/actual basis is basis 12.\n```\n\n```\n1\n**30/360 SIA** \u2014 Year fraction is calculated based on a 360 day year with 30-day months,\nafter applying the following rules: If the first date and the second date are the last day\nof February, the second date is changed to the 30th. If the first date falls on the 31st or\nis the last day of February, it is changed to the 30th. If after the preceding test, the first\nday is the 30th and the second day is the 31st, then the second day is changed to the\n30th.\n```\n\n```\n2\n**actual/360** \u2014 Number of days in a period is equal to the actual number of days,\nhowever the number of days in a year is 360.\n```\n\n```\n3\n**actual/365** \u2014 Number of days in a period is equal to the actual number of days,\nhowever the number of days in a year is 365 (even in a leap year).\n```\n\n```\n4\n**30/360 PSA** \u2014 Number of days in every month is set to 30 (including February). If the\nstart date of the period is either the 31st of a month or the last day of February, the start\ndate is set to the 30th, while if the start date is the 30th of a month and the end date is\nthe 31st, the end date is set to the 30th. The number of days in a year is 360.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1302,
      "word_count": 268,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0610",
    "content": "```\n4\n**30/360 PSA** \u2014 Number of days in every month is set to 30 (including February). If the\nstart date of the period is either the 31st of a month or the last day of February, the start\ndate is set to the 30th, while if the start date is the 30th of a month and the end date is\nthe 31st, the end date is set to the 30th. The number of days in a year is 360.\n```\n\n```\n5\n**30/360 ISDA** \u2014 Number of days in every month is set to 30, except for February where\nit is the actual number of days. If the start date of the period is the 31st of a month, the\nstart date is set to the 30th while if the start date is the 30th of a month and the end\ndate is the 31st, the end date is set to the 30th. The number of days in a year is 360.\n```\n\n```\n6\n**30E /360** \u2014 Number of days in every month is set to 30 except for February where it is\nequal to the actual number of days. If the start date or the end date of the period is the\n31st of a month, that date is set to the 30th. The number of days in a year is 360.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1009,
      "word_count": 226,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0611",
    "content": "```\n6\n**30E /360** \u2014 Number of days in every month is set to 30 except for February where it is\nequal to the actual number of days. If the start date or the end date of the period is the\n31st of a month, that date is set to the 30th. The number of days in a year is 360.\n```\n\n```\n7\n**actual/365 Japanese** \u2014 Number of days in a period is equal to the actual number of\ndays, except for leap days (29th February) which are ignored. The number of days in a\nyear is 365 (even in a leap year).\n```\n\n```\n8\n**actual/actual ICMA** \u2014 Number of days in both a period and a year is the actual\nnumber of days and the compounding frequency is annual.\n```\n\n```\n9\n**actual/360 ICMA** \u2014 Number of days in a period is equal to the actual number of days,\nhowever the number of days in a year is 360 and the compounding frequency is annual.\n```\n\n```\n10\n**actual/365 ICMA** \u2014 Number of days in a period is equal to the actual number of days,\nhowever the number of days in a year is 365 (even in a leap year) and the compounding\nfrequency is annual.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1032,
      "word_count": 210,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0612",
    "content": "```\n10\n**actual/365 ICMA** \u2014 Number of days in a period is equal to the actual number of days,\nhowever the number of days in a year is 365 (even in a leap year) and the compounding\nfrequency is annual.\n```\n\n```\n11\n**30/360 ICMA** \u2014 Number of days in every month is set to 30, except for February where\nit is equal to the actual number of days. If the start date or the end date of the period is\nthe 31st of a month, that date is set to the 30th. The number of days in a year is 360 and\nthe compounding frequency is annual.\n```\n\n```\n12\n**actual/365 ISDA** \u2014 The day count fraction is calculated using the following formula:\n(Actual number of days in period that fall in a leap year / 366) +\n(Actual number of days in period that fall in a normal year / 365).\nBasis 12 is also referred to as actual/actual ISDA.\n```\n\n```\n13\n**bus/252** \u2014 The number of days in a period is equal to the actual number of business\ndays. The number of business days in a year is 252.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 964,
      "word_count": 194,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0613",
    "content": "```\n13\n**bus/252** \u2014 The number of days in a period is equal to the actual number of business\ndays. The number of business days in a year is 252.\n```\n\nPricing and Computing Yields for Fixed-Income Securities",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 207,
      "word_count": 38,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0614",
    "content": "Pricing and Computing Yields for Fixed-Income Securities\n\n**2-17**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 66,
      "word_count": 8,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0615",
    "content": "**2-17**\n\n<!-- Page 62 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      62
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0616",
    "content": "<!-- Page 62 -->\n\n**End-of-Month Rule**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      62
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 39,
      "word_count": 6,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0617",
    "content": "**End-of-Month Rule**\n\nThe *end-of-month rule* affects a bond's coupon payment structure. When the rule is in effect, a\nsecurity that pays a coupon on the last actual day of a month will always pay coupons on the last day\nof the month. This means, for example, that a semiannual bond that pays a coupon on February 28 in\nnonleap years will pay coupons on August 31 in all years and on February 29 in leap years.\n\n**End-of-Month Rule**\n\n**End-of-Month Rule Value**\n**Meaning**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 475,
      "word_count": 82,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0618",
    "content": "**End-of-Month Rule Value**\n**Meaning**\n\n```\n1 (default)\nRule in effect.\n```\n\n```\n0\nRule not in effect.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 107,
      "word_count": 18,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0619",
    "content": "Although not all Financial Toolbox functions require the same input arguments, they all accept the\nfollowing common set of input arguments.\n\n**Common Input Arguments**\n\n**Input**\n**Meaning**",
    "section_title": "Framework",
    "section_hierarchy": [
      "Framework"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 190,
      "word_count": 26,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0620",
    "content": "**Input**\n**Meaning**\n\n```\nSettle\nSettlement date\n```",
    "section_title": "Framework",
    "section_hierarchy": [
      "Framework"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 53,
      "word_count": 7,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0621",
    "content": "```\nSettle\nSettlement date\n```\n\n```\nMaturity\nMaturity date\n```",
    "section_title": "Framework",
    "section_hierarchy": [
      "Framework"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 62,
      "word_count": 10,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0622",
    "content": "```\nMaturity\nMaturity date\n```\n\n```\nPeriod\nCoupon payment period\n```",
    "section_title": "Framework",
    "section_hierarchy": [
      "Framework"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 68,
      "word_count": 11,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0623",
    "content": "```\nPeriod\nCoupon payment period\n```\n\n```\nBasis\nDay-count basis\n```",
    "section_title": "Framework",
    "section_hierarchy": [
      "Framework"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 67,
      "word_count": 11,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0624",
    "content": "```\nBasis\nDay-count basis\n```\n\n```\nEndMonthRule\nEnd-of-month payment rule\n```",
    "section_title": "Framework",
    "section_hierarchy": [
      "Framework"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 77,
      "word_count": 11,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0625",
    "content": "```\nEndMonthRule\nEnd-of-month payment rule\n```\n\n```\nIssueDate\nBond issue date\n```\n\n```\nFirstCouponDate\nFirst coupon payment date\n```\n\n```\nLastCouponDate\nLast coupon payment date\n```\n\n```\nOf the common input arguments, only Settle and Maturity are required. All others are optional.\nThey are set to the default values if you do not explicitly set them. By default, the FirstCouponDate\nand LastCouponDate are nonapplicable. In other words, if you do not specify FirstCouponDate\nand LastCouponDate, the bond is assumed to have no odd first or last coupon periods. In this case,\nthe bond is a standard bond with a coupon payment structure based solely on the maturity date.\n```",
    "section_title": "Framework",
    "section_hierarchy": [
      "Framework"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 673,
      "word_count": 109,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0626",
    "content": "```\nTo illustrate the use of default values in Financial Toolbox functions, consider the cfdates function,\nwhich computes actual cash flow payment dates for a portfolio of fixed income securities regardless\nof whether the first and/or last coupon periods are normal, long, or short.\n```",
    "section_title": "Default Parameter Values",
    "section_hierarchy": [
      "Default Parameter Values"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 286,
      "word_count": 45,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0627",
    "content": "The complete calling syntax with the full input argument list is\n\n```\nCFlowDates = cfdates(Settle, Maturity, Period, Basis, ... \nEndMonthRule, IssueDate, FirstCouponDate, LastCouponDate)\n```\n\nwhile the minimal calling syntax requires only settlement and maturity dates\n\n```\nCFlowDates = cfdates(Settle, Maturity)\n```",
    "section_title": "Default Parameter Values",
    "section_hierarchy": [
      "Default Parameter Values"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 316,
      "word_count": 41,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0628",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0629",
    "content": "**2-18**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0630",
    "content": "<!-- Page 63 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      63
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0631",
    "content": "**Single Bond Example**\n\nAs an example, suppose that you have a bond with these characteristics:",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 96,
      "word_count": 15,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0632",
    "content": "As an example, suppose that you have a bond with these characteristics:\n\n```\nSettle          = '20-Sep-1999'\nMaturity        = '15-Oct-2007'\nPeriod          = 2\nBasis           = 0\nEndMonthRule    = 1\nIssueDate       = NaN\nFirstCouponDate = NaN\nLastCouponDate  = NaN\n```\n\n```\nPeriod, Basis, and EndMonthRule are set to their default values, and IssueDate,\nFirstCouponDate, and LastCouponDate are set to NaN.\n```\n\n```\nFormally, a NaN is an IEEE\u00ae arithmetic standard for *Not-a-Number* and is used to indicate the result\nof an undefined operation (for example, zero divided by zero). However, NaN is also a convenient\nplaceholder. In the SIA functions of Financial Toolbox software, NaN indicates the presence of a\nnonapplicable value. It tells the Financial Toolbox functions to ignore the input value and apply the\ndefault. Setting IssueDate, FirstCouponDate, and LastCouponDate to NaN in this example tells\ncfdates to assume that the bond has been issued before settlement and that no odd first or last\ncoupon periods exist.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1029,
      "word_count": 158,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0633",
    "content": "```\nFormally, a NaN is an IEEE\u00ae arithmetic standard for *Not-a-Number* and is used to indicate the result\nof an undefined operation (for example, zero divided by zero). However, NaN is also a convenient\nplaceholder. In the SIA functions of Financial Toolbox software, NaN indicates the presence of a\nnonapplicable value. It tells the Financial Toolbox functions to ignore the input value and apply the\ndefault. Setting IssueDate, FirstCouponDate, and LastCouponDate to NaN in this example tells\ncfdates to assume that the bond has been issued before settlement and that no odd first or last\ncoupon periods exist.\n```\n\n```\nHaving set these values, all these calls to cfdates produce the same result.\n```\n\n```\ncfdates(Settle, Maturity)\ncfdates(Settle, Maturity, Period)\ncfdates(Settle, Maturity, Period, [])\ncfdates(Settle, Maturity, [], Basis)\ncfdates(Settle, Maturity, [], [])\ncfdates(Settle, Maturity, Period, [], EndMonthRule)\ncfdates(Settle, Maturity, Period, [], NaN)\ncfdates(Settle, Maturity, Period, [], [], IssueDate)\ncfdates(Settle, Maturity, Period, [], [], IssueDate, [], [])\ncfdates(Settle, Maturity, Period, [], [], [], [],LastCouponDate)\ncfdates(Settle, Maturity, Period, Basis, EndMonthRule, ... \nIssueDate, FirstCouponDate, LastCouponDate)\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1258,
      "word_count": 173,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0634",
    "content": "```\ncfdates(Settle, Maturity)\ncfdates(Settle, Maturity, Period)\ncfdates(Settle, Maturity, Period, [])\ncfdates(Settle, Maturity, [], Basis)\ncfdates(Settle, Maturity, [], [])\ncfdates(Settle, Maturity, Period, [], EndMonthRule)\ncfdates(Settle, Maturity, Period, [], NaN)\ncfdates(Settle, Maturity, Period, [], [], IssueDate)\ncfdates(Settle, Maturity, Period, [], [], IssueDate, [], [])\ncfdates(Settle, Maturity, Period, [], [], [], [],LastCouponDate)\ncfdates(Settle, Maturity, Period, Basis, EndMonthRule, ... \nIssueDate, FirstCouponDate, LastCouponDate)\n```\n\n```\nThus, leaving a particular input unspecified has the same effect as passing an empty matrix ([]) or\npassing a NaN \u2013 all three tell cfdates (and other Financial Toolbox functions) to use the default value\nfor a particular input parameter.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 801,
      "word_count": 101,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0635",
    "content": "```\nThus, leaving a particular input unspecified has the same effect as passing an empty matrix ([]) or\npassing a NaN \u2013 all three tell cfdates (and other Financial Toolbox functions) to use the default value\nfor a particular input parameter.\n```\n\n**Bond Portfolio Example**\n\n```\nSince the previous example included only a single bond, there was no difference between passing an\nempty matrix or passing a NaN for an optional input argument. For a portfolio of bonds, however,\nusing NaN as a placeholder is the only way to specify default acceptance for some bonds while\nexplicitly setting nondefault values for the remaining bonds in the portfolio.\n```\n\nNow suppose that you have a portfolio of two bonds.",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 704,
      "word_count": 118,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0636",
    "content": "Now suppose that you have a portfolio of two bonds.\n\n```\nSettle   = '20-Sep-1999'\nMaturity = ['15-Oct-2007'; '15-Oct-2010']\n```\n\n```\nThese calls to cfdates all set the coupon period to its default value (Period = 2) for both bonds.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 235,
      "word_count": 40,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0637",
    "content": "```\nThese calls to cfdates all set the coupon period to its default value (Period = 2) for both bonds.\n```\n\nPricing and Computing Yields for Fixed-Income Securities",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 164,
      "word_count": 28,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0638",
    "content": "Pricing and Computing Yields for Fixed-Income Securities\n\n**2-19**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 66,
      "word_count": 8,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0639",
    "content": "**2-19**\n\n<!-- Page 64 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      64
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0640",
    "content": "<!-- Page 64 -->\n\n```\ncfdates(Settle, Maturity, 2)\ncfdates(Settle, Maturity, [2 2])\ncfdates(Settle, Maturity, [])\ncfdates(Settle, Maturity, NaN)\ncfdates(Settle, Maturity, [NaN NaN])\ncfdates(Settle, Maturity)\n```\n\n```\nThe first two calls explicitly set Period = 2. Since Maturity is a 2-by-1 vector of maturity dates,\ncfdates knows that you have a two-bond portfolio.\n```\n\n```\nThe first call specifies a single (that is, scalar) 2 for Period. Passing a scalar tells cfdates to apply\nthe scalar-valued input to all bonds in the portfolio. This is an example of implicit scalar-expansion.\nThe settlement date has been implicit scalar-expanded as well.\n```\n\n```\nThe second call also applies the default coupon period by explicitly passing a two-element vector of\n2's. The third call passes an empty matrix, which cfdates interprets as an invalid period, for which\nthe default value is used. The fourth call is similar, except that a NaN has been passed. The fifth call\npasses two NaN's, and has the same effect as the third. The last call passes the minimal input set.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      64
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1068,
      "word_count": 173,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0641",
    "content": "```\nThe second call also applies the default coupon period by explicitly passing a two-element vector of\n2's. The third call passes an empty matrix, which cfdates interprets as an invalid period, for which\nthe default value is used. The fourth call is similar, except that a NaN has been passed. The fifth call\npasses two NaN's, and has the same effect as the third. The last call passes the minimal input set.\n```\n\n```\nFinally, consider the following calls to cfdates for the same two-bond portfolio.\n```\n\n```\ncfdates(Settle, Maturity, [4 NaN])\ncfdates(Settle, Maturity, [4 2])\n```\n\n```\nThe first call explicitly sets Period = 4 for the first bond and implicitly sets the default Period = 2\nfor the second bond. The second call has the same effect as the first but explicitly sets the periodicity\nfor both bonds.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 817,
      "word_count": 142,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0642",
    "content": "```\nThe first call explicitly sets Period = 4 for the first bond and implicitly sets the default Period = 2\nfor the second bond. The second call has the same effect as the first but explicitly sets the periodicity\nfor both bonds.\n```\n\n```\nThe optional input Period has been used for illustrative purpose only. The default-handling process\nillustrated in the examples applies to any of the optional input arguments.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 418,
      "word_count": 72,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0643",
    "content": "Calculating coupon dates, either actual or quasi dates, is notoriously complicated. Financial Toolbox\nsoftware follows the SIA conventions in coupon date calculations.\n\nThe first step in finding the coupon dates associated with a bond is to determine the reference, or\nsynchronization date (the *sync date*). Within the SIA framework, the order of precedence for\ndetermining the sync date is:\n\n**1**\nThe first coupon date\n\n**2**\nThe last coupon date\n\n**3**\nThe maturity date\n\n```\nIn other words, a Financial Toolbox function first examines the FirstCouponDate input. If\nFirstCouponDate is specified, coupon payment dates and quasi-coupon dates are computed with\nrespect to FirstCouponDate; if FirstCouponDate is unspecified, empty ([]), or NaN, then the\nLastCouponDate is examined. If LastCouponDate is specified, coupon payment dates and quasi-\ncoupon dates are computed with respect to LastCouponDate. If both FirstCouponDate and\nLastCouponDate are unspecified, empty ([]), or NaN, the Maturity (a required input argument)\nserves as the synchronization date.\n```",
    "section_title": "Coupon Date Calculations",
    "section_hierarchy": [
      "Coupon Date Calculations"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1064,
      "word_count": 155,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0644",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0645",
    "content": "**2-20**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0646",
    "content": "<!-- Page 65 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      65
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0647",
    "content": "```\nThere are two yield and time factor conventions that are used in the Financial Toolbox software \u2013\nthese are determined by the input basis. Specifically, bases 0 to 7 are assumed to have semiannual\ncompounding, while bases 8 to 12 are assumed to have annual compounding regardless of the period\nof the bond's coupon payments (including zero-coupon bonds). In addition, any yield-related\nsensitivity (that is, duration and convexity), when quoted on a periodic basis, follows this same\nconvention. (See bndconvp, bndconvy, bnddurp, bnddury, and bndkrdur.)\n```",
    "section_title": "Yield Conventions",
    "section_hierarchy": [
      "Yield Conventions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 561,
      "word_count": 87,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0648",
    "content": "```\nThis example shows how to compute the price of a bond with an odd first period using bndprice.\n```",
    "section_title": "Pricing Functions",
    "section_hierarchy": [
      "Pricing Functions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 102,
      "word_count": 20,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0649",
    "content": "Assume that you have a bond with these characteristics:",
    "section_title": "Pricing Functions",
    "section_hierarchy": [
      "Pricing Functions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 55,
      "word_count": 9,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0650",
    "content": "```\nSettle          = '11-Nov-1992';\nMaturity        = '01-Mar-2005';\nIssueDate       = '15-Oct-1992';\nFirstCouponDate = '01-Mar-1993';\nCouponRate      = 0.0785;\nYield           = 0.0625;\n```\n\n```\nAllow coupon payment period (Period = 2), day-count basis (Basis = 0), and end-of-month rule\n(EndMonthRule = 1) to assume the default values. Also, assume that there is no odd last coupon date\nand that the face value of the bond is $100. Calling the function:\n```\n\n```\n[Price, AccruedInt] = bndprice(Yield, CouponRate, Settle, ... \nMaturity, [], [], [], IssueDate, FirstCouponDate)\n```",
    "section_title": "Pricing Functions",
    "section_hierarchy": [
      "Pricing Functions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 582,
      "word_count": 83,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0651",
    "content": "```\n[Price, AccruedInt] = bndprice(Yield, CouponRate, Settle, ... \nMaturity, [], [], [], IssueDate, FirstCouponDate)\n```\n\n```\nPrice = \n113.5977\n```\n\n```\nAccruedInt = \n0.5855\n```\n\n```\nbndprice returns a price of $113.60 and accrued interest of $0.59.\n```",
    "section_title": "Pricing Functions",
    "section_hierarchy": [
      "Pricing Functions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 253,
      "word_count": 38,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0652",
    "content": "```\nbndprice returns a price of $113.60 and accrued interest of $0.59.\n```\n\n```\nNote, bndprice uses nonlinear formulas to compute the price of a security. For this reason, Financial\nToolbox\u2122 software uses Newton's method when solving for an independent variable within a formula.\n```",
    "section_title": "Pricing Functions",
    "section_hierarchy": [
      "Pricing Functions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 283,
      "word_count": 45,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0653",
    "content": "```\nThis example shows how to use bndyield compute the yield of a bond that has odd first and last\nperiods and settlement in the first period.\n```",
    "section_title": "Yield Functions",
    "section_hierarchy": [
      "Yield Functions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 146,
      "word_count": 28,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0654",
    "content": "Set up variables for settlement, maturity date, issue, first coupon, and a last coupon date.\n\n```\nSettle          = '12-Jan-2000';\nMaturity        = '01-Oct-2001';\nIssueDate       = '01-Jan-2000';\nFirstCouponDate = '15-Jan-2000';\nLastCouponDate  = '15-Apr-2000';\n```",
    "section_title": "Yield Functions",
    "section_hierarchy": [
      "Yield Functions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 266,
      "word_count": 32,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0655",
    "content": "```\nSettle          = '12-Jan-2000';\nMaturity        = '01-Oct-2001';\nIssueDate       = '01-Jan-2000';\nFirstCouponDate = '15-Jan-2000';\nLastCouponDate  = '15-Apr-2000';\n```\n\nPricing and Computing Yields for Fixed-Income Securities",
    "section_title": "Yield Functions",
    "section_hierarchy": [
      "Yield Functions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 230,
      "word_count": 24,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0656",
    "content": "Pricing and Computing Yields for Fixed-Income Securities\n\n**2-21**",
    "section_title": "Yield Functions",
    "section_hierarchy": [
      "Yield Functions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 66,
      "word_count": 8,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0657",
    "content": "**2-21**\n\n<!-- Page 66 -->",
    "section_title": "Yield Functions",
    "section_hierarchy": [
      "Yield Functions"
    ],
    "page_numbers": [
      66
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0658",
    "content": "<!-- Page 66 -->\n\n```\nAssume a face value of $100. Specify a purchase price of $95.70, a coupon rate of 4%, quarterly\ncoupon payments, and a 30/360 day-count convention (Basis = 1).\n```\n\n```\nPrice        = 95.7;\nCouponRate   = 0.04;\nPeriod       = 4;\nBasis        = 1;\nEndMonthRule = 1;\n```",
    "section_title": "Yield Functions",
    "section_hierarchy": [
      "Yield Functions"
    ],
    "page_numbers": [
      66
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 290,
      "word_count": 51,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0659",
    "content": "```\nPrice        = 95.7;\nCouponRate   = 0.04;\nPeriod       = 4;\nBasis        = 1;\nEndMonthRule = 1;\n```\n\n```\nCall the bndyield function.\n```\n\n```\nYield = bndyield(Price, CouponRate, Settle, Maturity, Period, ... \nBasis, EndMonthRule, IssueDate, FirstCouponDate, LastCouponDate)\n```",
    "section_title": "Yield Functions",
    "section_hierarchy": [
      "Yield Functions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 281,
      "word_count": 38,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0660",
    "content": "```\nYield = bndyield(Price, CouponRate, Settle, Maturity, Period, ... \nBasis, EndMonthRule, IssueDate, FirstCouponDate, LastCouponDate)\n```\n\n```\nYield = \n0.0659\n```\n\n```\nThe function returns a Yield = 0.0659 (6.60%).\n```",
    "section_title": "Yield Functions",
    "section_hierarchy": [
      "Yield Functions"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 220,
      "word_count": 30,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0661",
    "content": "Financial Toolbox software supports the following options for managing interest-rate risk for one or\nmore bonds:",
    "section_title": "Fixed-Income Sensitivities",
    "section_hierarchy": [
      "Fixed-Income Sensitivities"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 112,
      "word_count": 16,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0662",
    "content": "```\n\u2022\nbnddurp and bnddury support duration and convexity analysis based on market quotes and\nassume parallel shifts in the bond yield curve.\n```\n\n```\n\u2022\nbndkrdur supports key rate duration based on a market yield curve and can model nonparallel\nshifts in the bond yield curve.\n```\n\n**Calculating Duration and Convexity for Bonds**\n\nThis example shows how to compute the annualized Macaulay and modified durations and the\nperiodic Macaulay duration for a bond.\n\n```\nThe Macaulay duration of an income stream, such as a coupon bond, measures how long, on average,\nthe owner waits before receiving a payment. It is the weighted average of the times payments are\nmade, with the weights at time T equal to the present value of the money received at time T. The\nmodified duration is the Macaulay duration discounted by the per-period interest rate; that is, divided\nby (1+rate/frequency). The *Macaulay duration* is a measure of price sensitivity to yield changes. This\nduration is measured in years and is a weighted average-time-to-maturity of an instrument.\n```",
    "section_title": "Fixed-Income Sensitivities",
    "section_hierarchy": [
      "Fixed-Income Sensitivities"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1057,
      "word_count": 173,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0663",
    "content": "```\nThe Macaulay duration of an income stream, such as a coupon bond, measures how long, on average,\nthe owner waits before receiving a payment. It is the weighted average of the times payments are\nmade, with the weights at time T equal to the present value of the money received at time T. The\nmodified duration is the Macaulay duration discounted by the per-period interest rate; that is, divided\nby (1+rate/frequency). The *Macaulay duration* is a measure of price sensitivity to yield changes. This\nduration is measured in years and is a weighted average-time-to-maturity of an instrument.\n```\n\n```\nTo illustrate, the following code computes the annualized Macaulay and modified durations and the\nperiodic Macaulay duration for a bond with settlement (12-Jan-2000) and maturity (01-Oct-2001)\ndates, a 5% coupon rate, and a 4.5% yield to maturity. For simplicity, any optional input arguments\nassume default values (that is, semiannual coupons, and day-count basis = 0 (actual/actual), coupon\npayment structure synchronized to the maturity date, and end-of-month payment rule in effect).\n```",
    "section_title": "Fixed-Income Sensitivities",
    "section_hierarchy": [
      "Fixed-Income Sensitivities"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1094,
      "word_count": 171,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0664",
    "content": "```\nTo illustrate, the following code computes the annualized Macaulay and modified durations and the\nperiodic Macaulay duration for a bond with settlement (12-Jan-2000) and maturity (01-Oct-2001)\ndates, a 5% coupon rate, and a 4.5% yield to maturity. For simplicity, any optional input arguments\nassume default values (that is, semiannual coupons, and day-count basis = 0 (actual/actual), coupon\npayment structure synchronized to the maturity date, and end-of-month payment rule in effect).\n```\n\n```\nCouponRate = 0.05;\nYield = 0.045;\nSettle = datetime(2000,1,12);\nMaturity = datetime(2001,10,1);\n```\n\n```\n[ModDuration, YearDuration, PerDuration] = bnddury(Yield, ... \nCouponRate, Settle, Maturity)\n```",
    "section_title": "Fixed-Income Sensitivities",
    "section_hierarchy": [
      "Fixed-Income Sensitivities"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 702,
      "word_count": 97,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0665",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0666",
    "content": "**2-22**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0667",
    "content": "<!-- Page 67 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      67
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0668",
    "content": "```\nModDuration = \n1.6107\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 29,
      "word_count": 5,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0669",
    "content": "```\nYearDuration = \n1.6470\n```\n\n```\nPerDuration = \n3.2940\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 61,
      "word_count": 10,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0670",
    "content": "```\nPerDuration = \n3.2940\n```\n\nThe durations are:\n\n```\n\u2022\nModDuration = 1.6107 (years)\n```\n\n```\n\u2022\nYearDuration = 1.6470 (years)\n```\n\n```\n\u2022\nPerDuration = 3.2940 (semiannual periods)\n```\n\n```\nNote that the semiannual periodic Macaulay duration (PerDuration) is twice the annualized\nMacaulay duration (YearDuration).\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 316,
      "word_count": 47,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0671",
    "content": "```\nNote that the semiannual periodic Macaulay duration (PerDuration) is twice the annualized\nMacaulay duration (YearDuration).\n```\n\n**Calculating Key Rate Durations for Bonds**\n\nThis example shows how to compute the key rate duration of the US Treasury Bond.\n\nKey rate duration enables you to evaluate the sensitivity and price of a bond to nonparallel changes in\nthe spot or zero curve by decomposing the interest rate risk along the spot or zero curve. Key rate\nduration refers to the process of choosing a set of key rates and computing a duration for each rate.\nSpecifically, for each key rate, while the other rates are held constant, the key rate is shifted up and\ndown (and intermediate cash flow dates are interpolated), and then the present value of the security\ngiven the shifted curves is computed.",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 810,
      "word_count": 135,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0672",
    "content": "Key rate duration enables you to evaluate the sensitivity and price of a bond to nonparallel changes in\nthe spot or zero curve by decomposing the interest rate risk along the spot or zero curve. Key rate\nduration refers to the process of choosing a set of key rates and computing a duration for each rate.\nSpecifically, for each key rate, while the other rates are held constant, the key rate is shifted up and\ndown (and intermediate cash flow dates are interpolated), and then the present value of the security\ngiven the shifted curves is computed.\n\n```\nThe calculation of bndkrdur supports\n```\n\nWhere *PV* is the current value of the instrument, *PV_up* and *PV_down* are the new values after the\ndiscount curve has been shocked, and *ShiftValue* is the change in interest rate. For example, if key\nrates of 3 months, 1, 2, 3, 5, 7, 10, 15, 20, 25, 30 years were chosen, then a 30-year bond might have\ncorresponding key rate durations of:",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 940,
      "word_count": 167,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0673",
    "content": "Where *PV* is the current value of the instrument, *PV_up* and *PV_down* are the new values after the\ndiscount curve has been shocked, and *ShiftValue* is the change in interest rate. For example, if key\nrates of 3 months, 1, 2, 3, 5, 7, 10, 15, 20, 25, 30 years were chosen, then a 30-year bond might have\ncorresponding key rate durations of:\n\n3M\n1Y\n2Y\n3Y\n5Y\n7Y\n10Y\n15Y\n20Y\n25Y\n30Y",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 382,
      "word_count": 74,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0674",
    "content": "3M\n1Y\n2Y\n3Y\n5Y\n7Y\n10Y\n15Y\n20Y\n25Y\n30Y\n\n.01\n.04\n.09\n.21\n.4\n.65\n1.27\n1.71\n1.68\n1.83\n7.03",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 86,
      "word_count": 22,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0675",
    "content": ".01\n.04\n.09\n.21\n.4\n.65\n1.27\n1.71\n1.68\n1.83\n7.03\n\nThe key rate durations add up to approximately equal the duration of the bond.\n\nCompute the key rate duration of the US Treasury Bond with maturity date of August 15, 2028 and\ncoupon rate of 5.5%.",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 245,
      "word_count": 47,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0676",
    "content": "Compute the key rate duration of the US Treasury Bond with maturity date of August 15, 2028 and\ncoupon rate of 5.5%.\n\n```\nSettle = datenum('18-Nov-2008'); \nCouponRate = 5.500/100;\nMaturity = datenum('15-Aug-2028'); \nPrice = 114.83;\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 235,
      "word_count": 36,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0677",
    "content": "```\nSettle = datenum('18-Nov-2008'); \nCouponRate = 5.500/100;\nMaturity = datenum('15-Aug-2028'); \nPrice = 114.83;\n```\n\nPricing and Computing Yields for Fixed-Income Securities",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 175,
      "word_count": 21,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0678",
    "content": "Pricing and Computing Yields for Fixed-Income Securities\n\n**2-23**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 66,
      "word_count": 8,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0679",
    "content": "**2-23**\n\n<!-- Page 68 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      68
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0680",
    "content": "<!-- Page 68 -->\n\n```\nFor the ZeroData information on the current spot curve for this bond, refer to https://\nwww.treasury.gov/resource-center/data-chart-center/interest-rates/Pages/TextView.aspx?data=yield.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      68
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 211,
      "word_count": 22,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0681",
    "content": "```\nFor the ZeroData information on the current spot curve for this bond, refer to https://\nwww.treasury.gov/resource-center/data-chart-center/interest-rates/Pages/TextView.aspx?data=yield.\n```\n\n```\nZeroDates = daysadd(Settle ,[30 90 180 360 360*2 360*3 360*5 ...\n360*7 360*10 360*20 360*30]);\nZeroRates = ([0.06 0.12 0.81 1.08 1.22 1.53 2.32 2.92 3.68 4.42 4.20]/100)';\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 374,
      "word_count": 48,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0682",
    "content": "```\nZeroDates = daysadd(Settle ,[30 90 180 360 360*2 360*3 360*5 ...\n360*7 360*10 360*20 360*30]);\nZeroRates = ([0.06 0.12 0.81 1.08 1.22 1.53 2.32 2.92 3.68 4.42 4.20]/100)';\n```\n\n```\nCompute the key rate duration using bndkrdur for a specific set of rates (choose this based on the\nmaturities of the available hedging instruments).\n```\n\n```\nkrd = bndkrdur([ZeroDates ZeroRates],CouponRate,Settle,Maturity,'keyrates',[2 5 10 20])\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 434,
      "word_count": 65,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0683",
    "content": "```\nkrd = bndkrdur([ZeroDates ZeroRates],CouponRate,Settle,Maturity,'keyrates',[2 5 10 20])\n```\n\n```\nkrd = *1\u00d74*\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 116,
      "word_count": 14,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0684",
    "content": "```\nkrd = *1\u00d74*\n```\n\n```\n0.2865    0.8729    2.6451    8.5778\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 65,
      "word_count": 11,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0685",
    "content": "```\n0.2865    0.8729    2.6451    8.5778\n```\n\nNote, the sum of the key rate durations approximately equals the duration of the bond.",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 132,
      "word_count": 21,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0686",
    "content": "Note, the sum of the key rate durations approximately equals the duration of the bond.\n\n```\n[sum(krd) bnddurp(Price,CouponRate,Settle,Maturity)]\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 148,
      "word_count": 19,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0687",
    "content": "```\n[sum(krd) bnddurp(Price,CouponRate,Settle,Maturity)]\n```\n\n```\nans = *1\u00d72*\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 81,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0688",
    "content": "```\nans = *1\u00d72*\n```\n\n```\n12.3823   12.3919\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 46,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0689",
    "content": "bndconvp | bndconvy | bnddurp | bnddury | bndkrdur",
    "section_title": "See Also",
    "section_hierarchy": [
      "See Also"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 50,
      "word_count": 9,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0690",
    "content": "\u2022\n\u201cHandle and Convert Dates\u201d on page 2-2",
    "section_title": "Related Examples",
    "section_hierarchy": [
      "Related Examples"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 40,
      "word_count": 8,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0691",
    "content": "\u2022\n\u201cTerm Structure of Interest Rates\u201d on page 2-29\n\n\u2022\n\u201cComputing Treasury Bill Price and Yield\u201d on page 2-26",
    "section_title": "Related Examples",
    "section_hierarchy": [
      "Related Examples"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 107,
      "word_count": 19,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0692",
    "content": "\u2022\n\u201cTreasury Bills Defined\u201d on page 2-25",
    "section_title": "More About",
    "section_hierarchy": [
      "More About"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 39,
      "word_count": 7,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0693",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0694",
    "content": "**2-24**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0695",
    "content": "<!-- Page 69 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      69
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0696",
    "content": "Treasury bills are short-term securities (issued with maturities of one year or less) sold by the United\nStates Treasury. Sales of these securities are frequent, usually weekly. From time to time, the\nTreasury also offers longer duration securities called Treasury notes and Treasury bonds.\n\nA Treasury bill is a discount security. The holder of the Treasury bill does not receive periodic interest\npayments. Instead, at the time of sale, a percentage discount is applied to the face value. At maturity,\nthe holder redeems the bill for full face value.\n\nThe basis for Treasury bill interest calculation is actual/360. Under this system, interest accrues on\nthe actual number of elapsed days between purchase and maturity, and each year contains 360 days.",
    "section_title": "Treasury Bills Defined",
    "section_hierarchy": [
      "Treasury Bills Defined"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 754,
      "word_count": 120,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0697",
    "content": "tbilldisc2yield | tbillprice | tbillrepo | tbillyield | tbillyield2disc | tbillval01 |\ntbl2bond | tr2bonds | zbtprice | zbtyield",
    "section_title": "See Also",
    "section_hierarchy": [
      "See Also"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 128,
      "word_count": 19,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0698",
    "content": "\u2022\n\u201cHandle and Convert Dates\u201d on page 2-2",
    "section_title": "Related Examples",
    "section_hierarchy": [
      "Related Examples"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 40,
      "word_count": 8,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0699",
    "content": "\u2022\n\u201cTerm Structure of Interest Rates\u201d on page 2-29\n\n\u2022\n\u201cComputing Treasury Bill Price and Yield\u201d on page 2-26",
    "section_title": "Related Examples",
    "section_hierarchy": [
      "Related Examples"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 107,
      "word_count": 19,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0700",
    "content": "\u2022\n\u201cComputing Treasury Bill Price and Yield\u201d on page 2-26\n\nTreasury Bills Defined",
    "section_title": "Related Examples",
    "section_hierarchy": [
      "Related Examples"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 80,
      "word_count": 13,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0701",
    "content": "Treasury Bills Defined\n\n**2-25**",
    "section_title": "Related Examples",
    "section_hierarchy": [
      "Related Examples"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 32,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0702",
    "content": "**2-25**\n\n<!-- Page 70 -->",
    "section_title": "Related Examples",
    "section_hierarchy": [
      "Related Examples"
    ],
    "page_numbers": [
      70
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0703",
    "content": "**In this section...**",
    "section_title": "Computing Treasury Bill Price and Yield",
    "section_hierarchy": [
      "Computing Treasury Bill Price and Yield"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 22,
      "word_count": 3,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0704",
    "content": "\u201cIntroduction\u201d on page 2-26",
    "section_title": "Computing Treasury Bill Price and Yield",
    "section_hierarchy": [
      "Computing Treasury Bill Price and Yield"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 27,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0705",
    "content": "\u201cTreasury Bill Repurchase Agreements\u201d on page 2-26\n\n\u201cTreasury Bill Yields\u201d on page 2-27",
    "section_title": "Computing Treasury Bill Price and Yield",
    "section_hierarchy": [
      "Computing Treasury Bill Price and Yield"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 87,
      "word_count": 13,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0706",
    "content": "Financial Toolbox software provides the following suite of functions for computing price and yield on\nTreasury bills.\n\n**Treasury Bill Functions**",
    "section_title": "Introduction",
    "section_hierarchy": [
      "Introduction"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 146,
      "word_count": 20,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0707",
    "content": "**Treasury Bill Functions**\n\n**Function**\n**Purpose**",
    "section_title": "Introduction",
    "section_hierarchy": [
      "Introduction"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 53,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0708",
    "content": "**Function**\n**Purpose**\n\n```\ntbilldisc2yield\nConvert discount rate to yield.\n```\n\n```\ntbillprice\nPrice Treasury bill given its yield or discount rate.\n```",
    "section_title": "Introduction",
    "section_hierarchy": [
      "Introduction"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 155,
      "word_count": 22,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0709",
    "content": "```\ntbillprice\nPrice Treasury bill given its yield or discount rate.\n```\n\n```\ntbillrepo\nBreak-even discount of repurchase agreement.\n```\n\n```\ntbillyield\nYield and discount of Treasury bill given its price.\n```\n\n```\ntbillyield2disc\nConvert yield to discount rate.\n```\n\n```\ntbillval01\nThe value of 1 basis point (one hundredth of one percentage point,\nor 0.0001) given the characteristics of the Treasury bill, as\nrepresented by its settlement and maturity dates. You can relate\nthe basis point to discount, money-market, or bond-equivalent\nyield.\n```\n\nFor all functions with yield in the computation, you can specify yield as money-market or bond-\nequivalent yield. The functions all assume a face value of $100 for each Treasury bill.",
    "section_title": "Introduction",
    "section_hierarchy": [
      "Introduction"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 734,
      "word_count": 115,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0710",
    "content": "This example shows how to compute the break-even discount rate. This is the rate that correctly\nprices the Treasury bill such that the profit from selling the tail equals 0.",
    "section_title": "Treasury Bill Repurchase Agreements",
    "section_hierarchy": [
      "Treasury Bill Repurchase Agreements"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 173,
      "word_count": 30,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0711",
    "content": "```\nMaturity = '26-Dec-2002';\nInitialDiscount = 0.0161;\nPurchaseDate = '26-Sep-2002';\nSaleDate = '26-Oct-2002';\nRepoRate = 0.0149;\n```\n\n```\nBreakevenDiscount = tbillrepo(RepoRate, InitialDiscount, ... \nPurchaseDate, SaleDate, Maturity)\n```\n\n```\nBreakevenDiscount = \n0.0167\n```",
    "section_title": "Treasury Bill Repurchase Agreements",
    "section_hierarchy": [
      "Treasury Bill Repurchase Agreements"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 276,
      "word_count": 32,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0712",
    "content": "```\nBreakevenDiscount = \n0.0167\n```\n\nYou can check the result of this computation by examining the cash flows in and out from the\nrepurchase transaction. First compute the price of the Treasury bill on the purchase date (September\n26).",
    "section_title": "Treasury Bill Repurchase Agreements",
    "section_hierarchy": [
      "Treasury Bill Repurchase Agreements"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 235,
      "word_count": 39,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0713",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0714",
    "content": "**2-26**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0715",
    "content": "<!-- Page 71 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      71
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0716",
    "content": "```\nPriceOnPurchaseDate = tbillprice(InitialDiscount, ... \nPurchaseDate, Maturity, 3)\n```\n\n```\nPriceOnPurchaseDate = \n99.5930\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 129,
      "word_count": 14,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0717",
    "content": "```\nPriceOnPurchaseDate = \n99.5930\n```\n\nCompute the interest due on the repurchase agreement.\n\n```\nRepoInterest = ... \nRepoRate*PriceOnPurchaseDate*days360(PurchaseDate,SaleDate)/360\n```\n\n```\nRepoInterest = \n0.1237\n```\n\n```\nRepoInterest for a 1.49% 30-day term repurchase agreement (30/360 basis) is 0.1237.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 311,
      "word_count": 38,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0718",
    "content": "```\nRepoInterest for a 1.49% 30-day term repurchase agreement (30/360 basis) is 0.1237.\n```\n\nCompute the price of the Treasury bill on the sale date (October 26).",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 162,
      "word_count": 27,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0719",
    "content": "Compute the price of the Treasury bill on the sale date (October 26).\n\n```\nPriceOnSaleDate = tbillprice(BreakevenDiscount, SaleDate, ... \nMaturity, 3)\n```\n\n```\nPriceOnSaleDate = \n99.7167\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 190,
      "word_count": 27,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0720",
    "content": "```\nPriceOnSaleDate = \n99.7167\n```\n\nExamining the cash flows, observe that the break-even discount causes the sum of the price on the\npurchase date plus the accrued 30-day interest to be equal to the price on sale date. The following\ntable shows the cash flows:",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 261,
      "word_count": 45,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0721",
    "content": "Examining the cash flows, observe that the break-even discount causes the sum of the price on the\npurchase date plus the accrued 30-day interest to be equal to the price on sale date. The following\ntable shows the cash flows:\n\n**Cash Flows from Repurchase Agreement**\n\n**Date**\n**Cash Out Flow**\n**Cash In Flow**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 312,
      "word_count": 52,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0722",
    "content": "**Date**\n**Cash Out Flow**\n**Cash In Flow**\n\n9/26/2002\nPurchase T-bill\n99.593\nRepo money\n99.593\n\n10/26/2002\nPayment of repo\n99.593\nSell T-bill\n99.7168\n\nRepo interest\n0.1238",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 172,
      "word_count": 25,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0723",
    "content": "Repo interest\n0.1238\n\nTotal\n199.3098\n199.3098",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 45,
      "word_count": 6,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0724",
    "content": "This example shows how to convert a Treasury bill discount to an equivalent yield.\n\n```\nYou can examine the money-market and bond-equivalent yields of a Treasury bill at the time of\npurchase and sale. The function tbilldisc2yield can perform both computations at one time.\n```",
    "section_title": "Treasury Bill Yields",
    "section_hierarchy": [
      "Treasury Bill Yields"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 276,
      "word_count": 45,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0725",
    "content": "```\nYou can examine the money-market and bond-equivalent yields of a Treasury bill at the time of\npurchase and sale. The function tbilldisc2yield can perform both computations at one time.\n```\n\n```\nMaturity = '26-Dec-2002';\nInitialDiscount = 0.0161;\nPurchaseDate = '26-Sep-2002';\nSaleDate = '26-Oct-2002';\nRepoRate = 0.0149;\nBreakevenDiscount = tbillrepo(RepoRate, InitialDiscount, ... \nPurchaseDate, SaleDate, Maturity)\n```",
    "section_title": "Treasury Bill Yields",
    "section_hierarchy": [
      "Treasury Bill Yields"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 424,
      "word_count": 56,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0726",
    "content": "```\nMaturity = '26-Dec-2002';\nInitialDiscount = 0.0161;\nPurchaseDate = '26-Sep-2002';\nSaleDate = '26-Oct-2002';\nRepoRate = 0.0149;\nBreakevenDiscount = tbillrepo(RepoRate, InitialDiscount, ... \nPurchaseDate, SaleDate, Maturity)\n```\n\n```\nBreakevenDiscount = \n0.0167\n```",
    "section_title": "Treasury Bill Yields",
    "section_hierarchy": [
      "Treasury Bill Yields"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 267,
      "word_count": 30,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0727",
    "content": "```\nBreakevenDiscount = \n0.0167\n```\n\nComputing Treasury Bill Price and Yield",
    "section_title": "Treasury Bill Yields",
    "section_hierarchy": [
      "Treasury Bill Yields"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 76,
      "word_count": 11,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0728",
    "content": "Computing Treasury Bill Price and Yield\n\n**2-27**",
    "section_title": "Treasury Bill Yields",
    "section_hierarchy": [
      "Treasury Bill Yields"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 49,
      "word_count": 7,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0729",
    "content": "**2-27**\n\n<!-- Page 72 -->",
    "section_title": "Treasury Bill Yields",
    "section_hierarchy": [
      "Treasury Bill Yields"
    ],
    "page_numbers": [
      72
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0730",
    "content": "<!-- Page 72 -->\n\n```\n[BEYield, MMYield] = ...\ntbilldisc2yield([InitialDiscount; BreakevenDiscount], ... \n[PurchaseDate; SaleDate], Maturity)\n```",
    "section_title": "Treasury Bill Yields",
    "section_hierarchy": [
      "Treasury Bill Yields"
    ],
    "page_numbers": [
      72
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 145,
      "word_count": 16,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0731",
    "content": "```\n[BEYield, MMYield] = ...\ntbilldisc2yield([InitialDiscount; BreakevenDiscount], ... \n[PurchaseDate; SaleDate], Maturity)\n```\n\n```\nBEYield = *2\u00d71*\n```",
    "section_title": "Treasury Bill Yields",
    "section_hierarchy": [
      "Treasury Bill Yields"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 152,
      "word_count": 17,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0732",
    "content": "```\nBEYield = *2\u00d71*\n```\n\n```\n0.0164\n    0.0170\n```",
    "section_title": "Treasury Bill Yields",
    "section_hierarchy": [
      "Treasury Bill Yields"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 50,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0733",
    "content": "```\n0.0164\n    0.0170\n```\n\n```\nMMYield = *2\u00d71*\n```\n\n```\n0.0162\n    0.0168\n```",
    "section_title": "Treasury Bill Yields",
    "section_hierarchy": [
      "Treasury Bill Yields"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 77,
      "word_count": 13,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0734",
    "content": "```\n0.0162\n    0.0168\n```\n\nFor the short Treasury bill (fewer than 182 days to maturity), the money-market yield is 360/365 of\nthe bond-equivalent yield, as this example shows.",
    "section_title": "Treasury Bill Yields",
    "section_hierarchy": [
      "Treasury Bill Yields"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 176,
      "word_count": 28,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0735",
    "content": "tbilldisc2yield | tbillprice | tbillrepo | tbillyield | tbillyield2disc | tbillval01 |\ntbl2bond | tr2bonds | zbtprice | zbtyield",
    "section_title": "See Also",
    "section_hierarchy": [
      "See Also"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 128,
      "word_count": 19,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0736",
    "content": "\u2022\n\u201cHandle and Convert Dates\u201d on page 2-2",
    "section_title": "Related Examples",
    "section_hierarchy": [
      "Related Examples"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 40,
      "word_count": 8,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0737",
    "content": "\u2022\n\u201cTerm Structure of Interest Rates\u201d on page 2-29",
    "section_title": "Related Examples",
    "section_hierarchy": [
      "Related Examples"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 49,
      "word_count": 9,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0738",
    "content": "\u2022\n\u201cTreasury Bills Defined\u201d on page 2-25",
    "section_title": "More About",
    "section_hierarchy": [
      "More About"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 39,
      "word_count": 7,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0739",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0740",
    "content": "**2-28**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0741",
    "content": "<!-- Page 73 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      73
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0742",
    "content": "This example shows how to derive and analyze interest-rate curves, including data conversion and\nextrapolation, bootstrapping, and interest-rate curve conversions.\n\nOne of the first problems in analyzing the term structure of interest rates is dealing with market data\nreported in different formats. Treasury bills, for example, are quoted with bid and asked bank-\ndiscount rates. Treasury notes and bonds, on the other hand, are quoted with bid and asked prices\nbased on $100 face value. To examine the full spectrum of Treasury securities, analysts must convert\ndata to a single format. Financial Toolbox\u2122 functions ease this conversion. The following code uses\nonly one security each; analysts often use 30, 100, or more of each.",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 732,
      "word_count": 114,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0743",
    "content": "One of the first problems in analyzing the term structure of interest rates is dealing with market data\nreported in different formats. Treasury bills, for example, are quoted with bid and asked bank-\ndiscount rates. Treasury notes and bonds, on the other hand, are quoted with bid and asked prices\nbased on $100 face value. To examine the full spectrum of Treasury securities, analysts must convert\ndata to a single format. Financial Toolbox\u2122 functions ease this conversion. The following code uses\nonly one security each; analysts often use 30, 100, or more of each.\n\nFirst, capture Treasury bill quotes and Reasury bond quotes in their reported format.",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 654,
      "word_count": 107,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0744",
    "content": "First, capture Treasury bill quotes and Reasury bond quotes in their reported format.\n\n```\n%        Maturity               Days  Bid     Ask     AskYield\nTBill = [datenum('12/26/2000')  53    0.0503  0.0499  0.0510];\n```\n\n```\n%        Coupon   Maturity           Bid       Ask       AskYield\nTBond = [0.08875  datenum(2001,11,5) 103+4/32  103+6/32  0.0564];\n```",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 361,
      "word_count": 43,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0745",
    "content": "```\n%        Coupon   Maturity           Bid       Ask       AskYield\nTBond = [0.08875  datenum(2001,11,5) 103+4/32  103+6/32  0.0564];\n```\n\nNote that these quotes are based on a November 3, 2000 settlement date.\n\n```\nSettle = datenum('3-Nov-2000');\n```",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 253,
      "word_count": 33,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0746",
    "content": "```\nSettle = datenum('3-Nov-2000');\n```\n\n```\nUse the tbl2bond to convert the Treasury bill data to Treasury bond format.\n```",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 124,
      "word_count": 20,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0747",
    "content": "```\nUse the tbl2bond to convert the Treasury bill data to Treasury bond format.\n```\n\n```\nTBTBond = tbl2bond(TBill)\n```\n\n```\nTBTBond = *1\u00d75*\n105 \u00d7\n```",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 149,
      "word_count": 27,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0748",
    "content": "```\nTBTBond = *1\u00d75*\n105 \u00d7\n```\n\n```\n0    7.3085    0.0010    0.0010    0.0000\n```",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 80,
      "word_count": 14,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0749",
    "content": "```\n0    7.3085    0.0010    0.0010    0.0000\n```\n\nThe second element of TBTBond is the serial date number for December 26, 2000.",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 129,
      "word_count": 21,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0750",
    "content": "The second element of TBTBond is the serial date number for December 26, 2000.\n\nCombine short-term (Treasury bill) with long-term (Treasury bond) data to set up the overall term\nstructure.",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 188,
      "word_count": 30,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0751",
    "content": "Combine short-term (Treasury bill) with long-term (Treasury bond) data to set up the overall term\nstructure.\n\n```\nTBondsAll = [TBTBond; TBond]\n```\n\n```\nTBondsAll = *2\u00d75*\n105 \u00d7\n```",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 179,
      "word_count": 29,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0752",
    "content": "```\nTBondsAll = *2\u00d75*\n105 \u00d7\n```\n\n```\n0    7.3085    0.0010    0.0010    0.0000\n    0.0000    7.3116    0.0010    0.0010    0.0000\n```",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 133,
      "word_count": 19,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0753",
    "content": "```\n0    7.3085    0.0010    0.0010    0.0000\n    0.0000    7.3116    0.0010    0.0010    0.0000\n```\n\n```\nUse tr2bonds to convert the bond data into a form ready for the bootstrapping functions. tr2bonds\ngenerates a matrix of bond information sorted by maturity date, plus vectors of prices and yields.\n```\n\n```\n[Bonds, Prices, Yields] = tr2bonds(TBondsAll)\n```\n\n```\nBonds = *2\u00d76*\n105 \u00d7\n```",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 390,
      "word_count": 60,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0754",
    "content": "```\nBonds = *2\u00d76*\n105 \u00d7\n```\n\nTerm Structure of Interest Rates",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 61,
      "word_count": 12,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0755",
    "content": "Term Structure of Interest Rates\n\n**2-29**",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 42,
      "word_count": 6,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0756",
    "content": "**2-29**\n\n<!-- Page 74 -->",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      74
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0757",
    "content": "<!-- Page 74 -->\n\n```\n7.3085         0    0.0010         0         0    0.0000\n    7.3116    0.0000    0.0010    0.0000         0    0.0000\n```",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      74
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 143,
      "word_count": 18,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0758",
    "content": "```\n7.3085         0    0.0010         0         0    0.0000\n    7.3116    0.0000    0.0010    0.0000         0    0.0000\n```\n\n```\nPrices = *2\u00d71*\n```",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 149,
      "word_count": 19,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0759",
    "content": "```\nPrices = *2\u00d71*\n```\n\n```\n99.2654\n  103.1875\n```",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 50,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0760",
    "content": "```\n99.2654\n  103.1875\n```\n\n```\nYields = *2\u00d71*\n```\n\n```\n0.0510\n    0.0564\n```",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 77,
      "word_count": 13,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0761",
    "content": "```\n0.0510\n    0.0564\n```\n\n```\nUse a bootstrapping function to derive an implied zero curve. Bootstrapping is a process whereby you\nbegin with known data points and solve for unknown data points using an underlying arbitrage\ntheory. Every coupon bond can be valued as a package of zero-coupon bonds which mimic its cash\nflow and risk characteristics. By mapping yields-to-maturity for each theoretical zero-coupon bond, to\nthe dates spanning the investment horizon, you can create a theoretical zero-rate curve. The\nFinancial Toolbox\u2122 software provides two bootstrapping functions: zbtprice derives a zero curve\nfrom bond data and *prices*, and zbtyield derives a zero curve from bond data and *yields*. Using\nzbtprice\n```\n\n```\n[ZeroRates, CurveDates] = zbtprice(Bonds, Prices, Settle)\n```\n\n```\nZeroRates = *2\u00d71*\n```",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 816,
      "word_count": 124,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0762",
    "content": "```\nZeroRates = *2\u00d71*\n```\n\n```\n0.0516\n    0.0558\n```",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 52,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0763",
    "content": "```\n0.0516\n    0.0558\n```\n\n```\nCurveDates = *2\u00d71*\n```",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 53,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0764",
    "content": "```\nCurveDates = *2\u00d71*\n```\n\n```\n730846\n      731160\n```",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 55,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0765",
    "content": "```\n730846\n      731160\n```\n\n```\nCurveDates gives the investment horizon.\n```",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 77,
      "word_count": 11,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0766",
    "content": "```\nCurveDates gives the investment horizon.\n```\n\n```\ndatestr(CurveDates)\n```",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 77,
      "word_count": 10,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0767",
    "content": "```\ndatestr(CurveDates)\n```\n\n```\nans = *2\u00d711 char array*\n    '26-Dec-2000'\n    '05-Nov-2001'\n```",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 96,
      "word_count": 12,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0768",
    "content": "```\nans = *2\u00d711 char array*\n    '26-Dec-2000'\n    '05-Nov-2001'\n```\n\n```\nUse the functions zero2disc, zero2fwd, and zero2pyld to construct discount, forward, and par\nyield curves from the zero curve, and vice versa.\n```\n\n```\n[DiscRates, CurveDates] = zero2disc(ZeroRates, CurveDates, Settle)\n```\n\n```\nDiscRates = *2\u00d71*\n```",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 322,
      "word_count": 46,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0769",
    "content": "```\nDiscRates = *2\u00d71*\n```\n\n```\n0.9926\n    0.9462\n```",
    "section_title": "Term Structure of Interest Rates",
    "section_hierarchy": [
      "Term Structure of Interest Rates"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 52,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0770",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0771",
    "content": "**2-30**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0772",
    "content": "<!-- Page 75 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      75
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0773",
    "content": "```\nCurveDates = *2\u00d71*\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 5,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0774",
    "content": "```\n730846\n      731160\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 27,
      "word_count": 4,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0775",
    "content": "```\n[FwdRates, CurveDates] = zero2fwd(ZeroRates, CurveDates, Settle)\n```\n\n```\nFwdRates = *2\u00d71*\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 98,
      "word_count": 13,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0776",
    "content": "```\nFwdRates = *2\u00d71*\n```\n\n```\n0.0516\n    0.0565\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 51,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0777",
    "content": "```\n0.0516\n    0.0565\n```\n\n```\nCurveDates = *2\u00d71*\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 53,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0778",
    "content": "```\nCurveDates = *2\u00d71*\n```\n\n```\n730846\n      731160\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 55,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0779",
    "content": "```\n730846\n      731160\n```\n\n```\n[PYldRates, CurveDates] = zero2pyld(ZeroRates, CurveDates, Settle)\n```\n\n```\nPYldRates = *2\u00d71*\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 130,
      "word_count": 17,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0780",
    "content": "```\nPYldRates = *2\u00d71*\n```\n\n```\n0.0522\n    0.0557\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 52,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0781",
    "content": "```\n0.0522\n    0.0557\n```\n\n```\nCurveDates = *2\u00d71*\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 53,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0782",
    "content": "```\nCurveDates = *2\u00d71*\n```\n\n```\n730846\n      731160\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 55,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0783",
    "content": "tbilldisc2yield | tbillprice | tbillrepo | tbillyield | tbillyield2disc | tbillval01 |\ntbl2bond | tr2bonds | zbtprice | zbtyield",
    "section_title": "See Also",
    "section_hierarchy": [
      "See Also"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 128,
      "word_count": 19,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0784",
    "content": "\u2022\n\u201cHandle and Convert Dates\u201d on page 2-2",
    "section_title": "Related Examples",
    "section_hierarchy": [
      "Related Examples"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 40,
      "word_count": 8,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0785",
    "content": "\u2022\n\u201cComputing Treasury Bill Price and Yield\u201d on page 2-26",
    "section_title": "Related Examples",
    "section_hierarchy": [
      "Related Examples"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 56,
      "word_count": 10,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0786",
    "content": "\u2022\n\u201cTreasury Bills Defined\u201d on page 2-25",
    "section_title": "More About",
    "section_hierarchy": [
      "More About"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 39,
      "word_count": 7,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0787",
    "content": "Term Structure of Interest Rates",
    "section_title": "More About",
    "section_hierarchy": [
      "More About"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 32,
      "word_count": 5,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0788",
    "content": "**2-31**",
    "section_title": "More About",
    "section_hierarchy": [
      "More About"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0789",
    "content": "<!-- Page 76 -->",
    "section_title": "More About",
    "section_hierarchy": [
      "More About"
    ],
    "page_numbers": [
      76
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0790",
    "content": "Once considered a mathematical impossibility, negative prices have become an established aspect of\nmany financial markets. Negative prices arise in situations where investors determine that holding an\nasset entails more risk than the current value of the asset. For example, energy futures see negative\nprices because of costs associated with overproduction and limited storage capacity. In a different\nsetting, central banks impose negative interest rates when national economies become deflationary,\nand the pricing of interest rate derivatives, traditionally based on positivity, have to be rethought (see\n\u201cWork with Negative Interest Rates Using Functions\u201d (Financial Instruments Toolbox)). A negative\nprice encourages the buyer to take something from the seller, and the seller pays a fee for the service\nof divesting.\n\nMathWorks\u00ae Computational Finance products support several functions for converting between price\nseries *p*(*t*) and return series *r*(*t*). Price positivity is not a requirement. The returns computed from\ninput negative prices can be unexpected, but they have mathematical meaning that can help you to\nunderstand price movements.",
    "section_title": "Returns with Negative Prices",
    "section_hierarchy": [
      "Returns with Negative Prices"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1155,
      "word_count": 165,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0791",
    "content": "```\nFinancial Toolbox functions ret2tick and tick2ret support converting between price series *p*(*t*)\nand return series *r*(*t*).\n```",
    "section_title": "Negative Price Conversion",
    "section_hierarchy": [
      "Negative Price Conversion"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 134,
      "word_count": 18,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0792",
    "content": "For simple returns (default), the functions implement the formulas",
    "section_title": "Negative Price Conversion",
    "section_hierarchy": [
      "Negative Price Conversion"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 66,
      "word_count": 9,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0793",
    "content": "*r**s*(*t*) =\n*p**s*(*t*)\n*p**s*(*t* \u22121) \u22121\n\n*p**s*(*t*) =* p**s*(*t* \u22121)(*r**s*(*t*) + 1) .",
    "section_title": "Negative Price Conversion",
    "section_hierarchy": [
      "Negative Price Conversion"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 92,
      "word_count": 13,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0794",
    "content": "*p**s*(*t*) =* p**s*(*t* \u22121)(*r**s*(*t*) + 1) .\n\nFor continuous returns, the functions implement the formulas\n\n*r**c*(*t*) = log\n*p**c*(*t*)\n*p**c*(*t* \u22121)\n\n*p**c*(*t*) =* p**c*(*t* \u22121)*e**rc*(*t*) .",
    "section_title": "Negative Price Conversion",
    "section_hierarchy": [
      "Negative Price Conversion"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 199,
      "word_count": 26,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0795",
    "content": "*p**c*(*t*) =* p**c*(*t* \u22121)*e**rc*(*t*) .\n\n```\nThe functions price2ret and ret2price implement the same formulas, but they divide by \u0394*t* in the\nreturn formulas and they multiply by \u0394*t* in the price formulas. A positive factor of \u0394*t* (enforced by\nrequired monotonic observation times) does not affect the behavior of the functions. Econometrics\nToolbox\u2122 calls simple returns *periodic*, and continuous returns are the default. Otherwise, the\nfunctionality between the set of functions is identical. This example concentrates on the Financial\nToolbox functions.\n```\n\nIn the simple return formula, *r**s*(*t*) is the percentage change (*PC*) in *p**s*(*t* \u2212 1) over the interval [*t* \u2212 1,*t*]\n\n*PC* =\n*p**s*(*t*)\n*p**s*(*t* \u22121) \u22121\n\n*p**s*(*t*) =* p**s*(*t* \u22121) +* PC* \u22c5*p**s*(*t* \u22121) .\n\nFor positive prices, the range of *PC* is (\u22121,\u221e), that is, anything from a 100% loss (*p**s*: *p**s*(*t* \u2212 1) \u2192 0) to\nunlimited gain. The recursion in the second equation gives the subsequent prices; *p**s*(*t*) is computed\nfrom *p**s*(*t* \u2212 1) by adding a percentage of *p**s*(*t* \u2212 1).",
    "section_title": "Negative Price Conversion",
    "section_hierarchy": [
      "Negative Price Conversion"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1075,
      "word_count": 169,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0796",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0797",
    "content": "**2-32**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0798",
    "content": "<!-- Page 77 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      77
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0799",
    "content": "Furthermore, you can aggregate simple returns through time using the formula",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 76,
      "word_count": 11,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0800",
    "content": "*p**s*(*T*)\n*p**s*(1) \u22121 = \u220f\n*t* = 2",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 36,
      "word_count": 8,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0801",
    "content": "*T*\n\n*r**s*(*t*) + 1 \u22121,",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 24,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0802",
    "content": "*r**s*(*t*) + 1 \u22121,\n\nwhere the left-hand side represents the simple return over the entire interval [0,*T*].",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 108,
      "word_count": 17,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0803",
    "content": "where the left-hand side represents the simple return over the entire interval [0,*T*].\n\nContinuous returns add 1 to *PC* to move the range to (0,\u221e), the domain of the real logarithm.\nContinuous returns have the time aggregation property",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 237,
      "word_count": 38,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0804",
    "content": "Continuous returns add 1 to *PC* to move the range to (0,\u221e), the domain of the real logarithm.\nContinuous returns have the time aggregation property\n\nlog* **p**c*(*T*)\n*p**c*(1) \u22121 = log \u220f\n*t* = 2\n\n*T*\n*p**c*(*t*)\n*p**c*(*t* \u22121)\n= \u2211\n*t* = 2\n\n*T*\nlog\n*p**c*(*t*)\n*p**c*(*t* \u22121) = \u2211\n*t* = 2",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 288,
      "word_count": 54,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0805",
    "content": "*T*\nlog\n*p**c*(*t*)\n*p**c*(*t* \u22121) = \u2211\n*t* = 2\n\n*T*\n*r**c*(*t*) .",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 65,
      "word_count": 13,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0806",
    "content": "*T*\n*r**c*(*t*) .\n\nThis transformation ensures additivity of compound returns.",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 78,
      "word_count": 10,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0807",
    "content": "This transformation ensures additivity of compound returns.\n\nIf negative prices are allowed, the range of simple returns *PC* expands to (\u2212\u221e,\u221e), that is, anything\nfrom unlimited loss to unlimited gain. In the formula for continuous returns, logarithms of negative\nnumbers are unavoidable. The logarithm of a negative number is not a mathematical problem\nbecause the complex logarithm (the MATLAB default) interprets negative numbers as complex\nnumbers with phase angle \u00b1*\u03c0*, so that, for example,",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 496,
      "word_count": 74,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0808",
    "content": "If negative prices are allowed, the range of simple returns *PC* expands to (\u2212\u221e,\u221e), that is, anything\nfrom unlimited loss to unlimited gain. In the formula for continuous returns, logarithms of negative\nnumbers are unavoidable. The logarithm of a negative number is not a mathematical problem\nbecause the complex logarithm (the MATLAB default) interprets negative numbers as complex\nnumbers with phase angle \u00b1*\u03c0*, so that, for example,\n\n\u22122 = 2*e**i\u03c0*\n\nlog( \u22122) = 2 +* i\u03c0*",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 471,
      "word_count": 76,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0809",
    "content": "log( \u22122) = 2 +* i\u03c0*\n\nIf *x* < 0, log(*x*) = log(|*x*|) \u00b1 *i\u03c0*. The log of a negative number has an imaginary part of \u00b1*\u03c0*. The log of 0\nis undefined because the range of the exponential *e**i\u03b8* is positive. Therefore, zero prices (that is, free\nexchanges) are unsupported.",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 272,
      "word_count": 51,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0810",
    "content": "To illustrate negative price inputs, consider the following price series and its simple returns.",
    "section_title": "Analysis of Negative Price Returns",
    "section_hierarchy": [
      "Analysis of Negative Price Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 96,
      "word_count": 14,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0811",
    "content": "```\np = [3; 1; -2; -1; 1]\n```",
    "section_title": "Analysis of Negative Price Returns",
    "section_hierarchy": [
      "Analysis of Negative Price Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 29,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0812",
    "content": "```\np =\n```",
    "section_title": "Analysis of Negative Price Returns",
    "section_hierarchy": [
      "Analysis of Negative Price Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 11,
      "word_count": 4,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0813",
    "content": "```\n3\n     1\n    -2\n    -1\n     1\n```",
    "section_title": "Analysis of Negative Price Returns",
    "section_hierarchy": [
      "Analysis of Negative Price Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 37,
      "word_count": 7,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0814",
    "content": "```\nrs = tick2ret(p)\n```\n\n```\nrs =\n```",
    "section_title": "Analysis of Negative Price Returns",
    "section_hierarchy": [
      "Analysis of Negative Price Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 38,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0815",
    "content": "```\nrs =\n```\n\n```\n-0.6667\n   -3.0000\n   -0.5000\n   -2.0000\n```",
    "section_title": "Analysis of Negative Price Returns",
    "section_hierarchy": [
      "Analysis of Negative Price Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 62,
      "word_count": 10,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0816",
    "content": "```\n-0.6667\n   -3.0000\n   -0.5000\n   -2.0000\n```\n\nThis table summarizes the recursions.",
    "section_title": "Analysis of Negative Price Returns",
    "section_hierarchy": [
      "Analysis of Negative Price Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 87,
      "word_count": 11,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0817",
    "content": "This table summarizes the recursions.\n\nReturns with Negative Prices",
    "section_title": "Analysis of Negative Price Returns",
    "section_hierarchy": [
      "Analysis of Negative Price Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 67,
      "word_count": 9,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0818",
    "content": "Returns with Negative Prices\n\n**2-33**",
    "section_title": "Analysis of Negative Price Returns",
    "section_hierarchy": [
      "Analysis of Negative Price Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 38,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0819",
    "content": "**2-33**\n\n<!-- Page 78 -->",
    "section_title": "Analysis of Negative Price Returns",
    "section_hierarchy": [
      "Analysis of Negative Price Returns"
    ],
    "page_numbers": [
      78
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0820",
    "content": "<!-- Page 78 -->\n\nThe returns have the correct size (66%, 300%, 50%, 200%), but do they have the correct sign? If you\ninterpret negative returns as losses, as with the positive price series, the signs seem wrong\u2014the last\ntwo returns should be gains (that is, if you interpret less negative to be a gain). However, if you\ninterpret the negative returns by the formula",
    "section_title": "Analysis of Negative Price Returns",
    "section_hierarchy": [
      "Analysis of Negative Price Returns"
    ],
    "page_numbers": [
      78
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 366,
      "word_count": 65,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0821",
    "content": "The returns have the correct size (66%, 300%, 50%, 200%), but do they have the correct sign? If you\ninterpret negative returns as losses, as with the positive price series, the signs seem wrong\u2014the last\ntwo returns should be gains (that is, if you interpret less negative to be a gain). However, if you\ninterpret the negative returns by the formula\n\n*p**s*(*t*) =* p**s*(*t* \u22121) +* PC* \u22c5*p**s*(*t* \u22121),\n\nwhich requires the signs, the last two negative percentage changes multiply *negative* prices *p**s*(*t* \u2212 1),\nwhich produces *positive* additions to *p**s*(*t* \u2212 1). Briefly, a negative return on a negative price produces\na positive price movement. The returns are correct.",
    "section_title": "Analysis of Negative Price Returns",
    "section_hierarchy": [
      "Analysis of Negative Price Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 678,
      "word_count": 110,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0822",
    "content": "which requires the signs, the last two negative percentage changes multiply *negative* prices *p**s*(*t* \u2212 1),\nwhich produces *positive* additions to *p**s*(*t* \u2212 1). Briefly, a negative return on a negative price produces\na positive price movement. The returns are correct.\n\n```\nThe round trip produced by ret2tick returns the original price series.\n```\n\n```\nps = ret2tick(rs,StartPrice=3)\n```",
    "section_title": "Analysis of Negative Price Returns",
    "section_hierarchy": [
      "Analysis of Negative Price Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 394,
      "word_count": 59,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0823",
    "content": "```\nps = ret2tick(rs,StartPrice=3)\n```\n\n```\nps =\n```",
    "section_title": "Analysis of Negative Price Returns",
    "section_hierarchy": [
      "Analysis of Negative Price Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 52,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0824",
    "content": "```\nps =\n```\n\n```\n3\n     1\n    -2\n    -1\n     1\n```",
    "section_title": "Analysis of Negative Price Returns",
    "section_hierarchy": [
      "Analysis of Negative Price Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 51,
      "word_count": 11,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0825",
    "content": "```\n3\n     1\n    -2\n    -1\n     1\n```\n\nAlso, the following computations shows that time aggregation holds.",
    "section_title": "Analysis of Negative Price Returns",
    "section_hierarchy": [
      "Analysis of Negative Price Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 106,
      "word_count": 16,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0826",
    "content": "Also, the following computations shows that time aggregation holds.\n\n```\np(5)/p(1) - 1\n```",
    "section_title": "Analysis of Negative Price Returns",
    "section_hierarchy": [
      "Analysis of Negative Price Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 90,
      "word_count": 14,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0827",
    "content": "```\np(5)/p(1) - 1\n```\n\n```\nans =\n```",
    "section_title": "Analysis of Negative Price Returns",
    "section_hierarchy": [
      "Analysis of Negative Price Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 36,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0828",
    "content": "```\nans =\n```\n\n```\n-0.6667\n```",
    "section_title": "Analysis of Negative Price Returns",
    "section_hierarchy": [
      "Analysis of Negative Price Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 30,
      "word_count": 7,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0829",
    "content": "```\n-0.6667\n```\n\n```\nprod(rs + 1) - 1\n```",
    "section_title": "Analysis of Negative Price Returns",
    "section_hierarchy": [
      "Analysis of Negative Price Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 41,
      "word_count": 10,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0830",
    "content": "```\nprod(rs + 1) - 1\n```\n\n```\nans =\n```",
    "section_title": "Analysis of Negative Price Returns",
    "section_hierarchy": [
      "Analysis of Negative Price Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 39,
      "word_count": 11,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0831",
    "content": "```\nans =\n```\n\n```\n-0.6667\n```",
    "section_title": "Analysis of Negative Price Returns",
    "section_hierarchy": [
      "Analysis of Negative Price Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 30,
      "word_count": 7,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0832",
    "content": "```\n-0.6667\n```\n\nFor continuous returns, negative price ratios *p**c*(*t*)/*p**c*(*t* \u2212 1) are interpreted as complex numbers with\nphase angles \u00b1*\u03c0*, and the complex logarithm is invoked.",
    "section_title": "Analysis of Negative Price Returns",
    "section_hierarchy": [
      "Analysis of Negative Price Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 187,
      "word_count": 27,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0833",
    "content": "For continuous returns, negative price ratios *p**c*(*t*)/*p**c*(*t* \u2212 1) are interpreted as complex numbers with\nphase angles \u00b1*\u03c0*, and the complex logarithm is invoked.\n\n```\nrc = tick2ret(p,Method=\"continuous\")\n```\n\n```\nrc =\n```",
    "section_title": "Analysis of Negative Price Returns",
    "section_hierarchy": [
      "Analysis of Negative Price Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 230,
      "word_count": 33,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0834",
    "content": "```\nrc =\n```\n\n```\n-1.0986 + 0.0000i\n   0.6931 + 3.1416i\n  -0.6931 + 0.0000i\n   0.0000 - 3.1416i\n```",
    "section_title": "Analysis of Negative Price Returns",
    "section_hierarchy": [
      "Analysis of Negative Price Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 99,
      "word_count": 18,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0835",
    "content": "```\n-1.0986 + 0.0000i\n   0.6931 + 3.1416i\n  -0.6931 + 0.0000i\n   0.0000 - 3.1416i\n```\n\nThis table summarizes the recursions.",
    "section_title": "Analysis of Negative Price Returns",
    "section_hierarchy": [
      "Analysis of Negative Price Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 124,
      "word_count": 19,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0836",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0837",
    "content": "**2-34**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0838",
    "content": "<!-- Page 79 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      79
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0839",
    "content": "The real part shows the trend in the absolute price series. When |*p**c*(*t* \u2212 1)| < |*p**c*(*t*)|, that is, when\nprices move away from zero, *r**c*(*t*) has a positive real part. When |*p**c*(*t* \u2212 1)| > |*p**c*(*t*)|, that is, when\nprices move toward zero, *r**c*(*t*) has a negative real part. When |*p**c*(*t* \u2212 1)| = |*p**c*(*t*)|, that is, when the\nabsolute size of the prices is unchanged, *r**c*(*t*) has a zero real part. For positive price series, where the\nabsolute series is the same as the series itself, the real part has its usual meaning.\n\nThe imaginary part shows changes of sign in the price series. When *p**c*(*t* \u2212 1) > 0 and *p**c*(*t*) < 0, that\nis, when prices move from investments to divestments, *r**c*(*t*) has a positive imaginary part (+*\u03c0*). When\n*p**c*(*t* \u2212 1) < 0 and *p**c*(*t*) > 0, that is, when prices move from divestments to investments, *r**c*(*t*) has a\nnegative imaginary part (\u2212*\u03c0*). When the sign of the prices is unchanged, *r**c*(*t*) has a zero imaginary\npart. For positive price series, changes of sign are irrelevant, and the imaginary part conveys no\ninformation (0).",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1118,
      "word_count": 189,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0840",
    "content": "Complex continuous returns contain a lot of information. Visualizing the information can help you to\ninterpret the complex returns. The following code plots the real and imaginary parts of the logarithm\non either side of zero.",
    "section_title": "Visualization of Complex Returns",
    "section_hierarchy": [
      "Visualization of Complex Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 226,
      "word_count": 36,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0841",
    "content": "```\np = -5:0.01:5;\nhold on\nplot(p,real(log(p)),\"b\")\nplot(p,imag(log(p)),\"r\")\nxticks(-5:5)\nxlabel(\"Price (p)\")\nylabel(\"Ordinate\")\nlegend([\"real(log(p))\" \"imag(log(p))\"],AutoUpdate=false)\ngrid minor\n```",
    "section_title": "Visualization of Complex Returns",
    "section_hierarchy": [
      "Visualization of Complex Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 200,
      "word_count": 17,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0842",
    "content": "Returns with Negative Prices",
    "section_title": "Visualization of Complex Returns",
    "section_hierarchy": [
      "Visualization of Complex Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 28,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0843",
    "content": "**2-35**",
    "section_title": "Visualization of Complex Returns",
    "section_hierarchy": [
      "Visualization of Complex Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0844",
    "content": "<!-- Page 80 -->",
    "section_title": "Visualization of Complex Returns",
    "section_hierarchy": [
      "Visualization of Complex Returns"
    ],
    "page_numbers": [
      80
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0845",
    "content": "Due to the following identity",
    "section_title": "Visualization of Complex Returns",
    "section_hierarchy": [
      "Visualization of Complex Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 29,
      "word_count": 5,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0846",
    "content": "*r**c*(*t*) = log\n*p**c*(*t*)\n*p**c*(*t* \u22121)\n\n=log(*p**c*(*t*)) \u2212log(*p**c*(*t* \u22121))\n\n=\u00a0[real(log(*p**c*(*t*)) \u2212real(log(*p**c*(*t* \u22121)))]\n\u2a09\nblue curve\n+ [imag(log(*p**c*(*t*))) \u2212imag(log(*p**c*(*t* \u22121)))]\n\u2a09\nred curve\n\u22c5*i*,",
    "section_title": "Visualization of Complex Returns",
    "section_hierarchy": [
      "Visualization of Complex Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 223,
      "word_count": 24,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0847",
    "content": "=\u00a0[real(log(*p**c*(*t*)) \u2212real(log(*p**c*(*t* \u22121)))]\n\u2a09\nblue curve\n+ [imag(log(*p**c*(*t*))) \u2212imag(log(*p**c*(*t* \u22121)))]\n\u2a09\nred curve\n\u22c5*i*,\n\nyou can read the real part of a continuous return as a difference in ordinates on the blue graph, and\nyou can read the imaginary part as a difference in ordinates on the red graph. Absolute price\nmovements toward zero result in a negative real part and absolute price movements away from zero\nresult in a positive real part. Likewise, changes of sign result in a jump of \u00b1*\u03c0* in the imaginary part,\nwith the sign change depending on the direction of the move.\n\nFor example, the plot below superimposes the real and imaginary parts of the logarithm at prices *p* =\n\u22124 and *p* = 2, with lines to help visualize their differences.\n\n```\np = [-4; 2];\nplot(p,real(log(p)),\"bo-\",MarkerFaceColor=\"b\")\nplot(p,imag(log(p)),\"ro-\",MarkerFaceColor=\"r\")\nhold off\n```",
    "section_title": "Visualization of Complex Returns",
    "section_hierarchy": [
      "Visualization of Complex Returns"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 891,
      "word_count": 139,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0848",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0849",
    "content": "**2-36**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0850",
    "content": "<!-- Page 81 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      81
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0851",
    "content": "If *p**c*(*t* \u2212 1) = \u22124 and *p**c*(*t*) = 2, the real part of log(*p**c*(*t*)) \u2212 log(*p**c*(*t* \u2212 1)) is negative (line slopes\ndown), corresponding to a decrease in absolute price. The imaginary part is 0 \u2013 *\u03c0* = \u2212*\u03c0*,\ncorresponding to a change of sign from negative to positive. If the direction of the price movement is\nreversed, so that *p**c*(*t* \u2212 1) = 2 and *p**c*(*t*) = \u22124, the positive difference in the real part corresponds to\nan increase in absolute price, and the positive difference in the imaginary part corresponds to a\nchange of sign from positive to negative.",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 577,
      "word_count": 102,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0852",
    "content": "If you convert the continuous returns *r**c*(*t*) = log(*p**c*(*t*)/*p**c*(*t* \u2212 1) ) to simple returns *r**s* = (*p**s*(*t*)/*p**s*(*t* \u2212 1)\n\u2212 1) by the following computation, the result is the same simple returns series as before.",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 232,
      "word_count": 36,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0853",
    "content": "```\nrs = exp(rc) - 1\n```\n\n```\nrs =\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 38,
      "word_count": 11,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0854",
    "content": "```\nrs =\n```\n\n```\n-0.6667 + 0.0000i\n  -3.0000 + 0.0000i\n  -0.5000 + 0.0000i\n  -2.0000 - 0.0000i\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 99,
      "word_count": 18,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0855",
    "content": "```\n-0.6667 + 0.0000i\n  -3.0000 + 0.0000i\n  -0.5000 + 0.0000i\n  -2.0000 - 0.0000i\n```\n\nYou can complete the round trip, which results in the expected price series, by the computation",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 182,
      "word_count": 30,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0856",
    "content": "You can complete the round trip, which results in the expected price series, by the computation\n\n```\npc = ret2tick(rc,Method=\"continuous\",StartPrice=3)\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 155,
      "word_count": 21,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0857",
    "content": "```\npc = ret2tick(rc,Method=\"continuous\",StartPrice=3)\n```\n\n```\npc =\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 72,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0858",
    "content": "```\npc =\n```\n\n```\n3.0000 + 0.0000i\n   1.0000 + 0.0000i\n  -2.0000 + 0.0000i\n  -1.0000 + 0.0000i\n   1.0000 + 0.0000i\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 118,
      "word_count": 21,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0859",
    "content": "```\n3.0000 + 0.0000i\n   1.0000 + 0.0000i\n  -2.0000 + 0.0000i\n  -1.0000 + 0.0000i\n   1.0000 + 0.0000i\n```\n\nReturns with Negative Prices",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 134,
      "word_count": 21,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0860",
    "content": "Returns with Negative Prices\n\n**2-37**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 38,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0861",
    "content": "**2-37**\n\n<!-- Page 82 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      82
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0862",
    "content": "```\nComplex continuous returns are a necessary intermediary when considering logarithms of negative\nprice ratios. tick2ret computes a continuous complex extension of the function on the positive real\naxis. The logarithm maintains the additivity property, used when computing multiperiod returns.\n```\n\nBecause of the extensible logarithm implemented in MATLAB, current implementations of\nComputational Finance tools that accept prices and returns behave logically with negative prices. The\ninterpretation of complex-valued results can be unfamiliar at first, but as shown, the results are\nmeaningful and explicable.",
    "section_title": "Conclusion",
    "section_hierarchy": [
      "Conclusion"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 614,
      "word_count": 84,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0863",
    "content": "tick2ret | ret2tick",
    "section_title": "See Also",
    "section_hierarchy": [
      "See Also"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 19,
      "word_count": 3,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0864",
    "content": "\u2022\n\u201cWork with Negative Interest Rates Using Functions\u201d (Financial Instruments Toolbox)",
    "section_title": "More About",
    "section_hierarchy": [
      "More About"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 85,
      "word_count": 11,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0865",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0866",
    "content": "**2-38**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0867",
    "content": "<!-- Page 83 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      83
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0868",
    "content": "**In this section...**",
    "section_title": "Pricing and Analyzing Equity Derivatives",
    "section_hierarchy": [
      "Pricing and Analyzing Equity Derivatives"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 22,
      "word_count": 3,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0869",
    "content": "\u201cIntroduction\u201d on page 2-39",
    "section_title": "Pricing and Analyzing Equity Derivatives",
    "section_hierarchy": [
      "Pricing and Analyzing Equity Derivatives"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 27,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0870",
    "content": "\u201cSensitivity Measures\u201d on page 2-39\n\n\u201cAnalysis Models\u201d on page 2-40",
    "section_title": "Pricing and Analyzing Equity Derivatives",
    "section_hierarchy": [
      "Pricing and Analyzing Equity Derivatives"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 67,
      "word_count": 10,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0871",
    "content": "These toolbox functions compute prices, sensitivities, and profits for portfolios of options or other\nequity derivatives. They use the Black-Scholes model for European options and the binomial model\nfor American options. Such measures are useful for managing portfolios and for executing collars,\nhedges, and straddles:",
    "section_title": "Introduction",
    "section_hierarchy": [
      "Introduction"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 319,
      "word_count": 45,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0872",
    "content": "\u2022\nA collar is an interest-rate option that guarantees that the rate on a floating-rate loan will not\nexceed a certain upper level nor fall below a lower level. It is designed to protect an investor\nagainst wide fluctuations in interest rates.",
    "section_title": "Introduction",
    "section_hierarchy": [
      "Introduction"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 242,
      "word_count": 42,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0873",
    "content": "\u2022\nA hedge is a securities transaction that reduces or offsets the risk on an existing investment\nposition.",
    "section_title": "Introduction",
    "section_hierarchy": [
      "Introduction"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 106,
      "word_count": 18,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0874",
    "content": "\u2022\nA straddle is a strategy used in trading options or futures. It involves simultaneously purchasing\nput and call options with the same exercise price and expiration date, and it is most profitable\nwhen the price of the underlying security is very volatile.",
    "section_title": "Introduction",
    "section_hierarchy": [
      "Introduction"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 257,
      "word_count": 43,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0875",
    "content": "There are six basic sensitivity measures associated with option pricing: delta, gamma, lambda, rho,\ntheta, and vega \u2014 the \u201cgreeks.\u201d The toolbox provides functions for calculating each sensitivity and for\nimplied volatility.",
    "section_title": "Sensitivity Measures",
    "section_hierarchy": [
      "Sensitivity Measures"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 223,
      "word_count": 32,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0876",
    "content": "**Delta**\n\nDelta of a derivative security is the rate of change of its price relative to the price of the underlying\nasset. It is the first derivative of the curve that relates the price of the derivative to the price of the\nunderlying security. When delta is large, the price of the derivative is sensitive to small changes in\nthe price of the underlying security.",
    "section_title": "Sensitivity Measures",
    "section_hierarchy": [
      "Sensitivity Measures"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 365,
      "word_count": 65,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0877",
    "content": "Delta of a derivative security is the rate of change of its price relative to the price of the underlying\nasset. It is the first derivative of the curve that relates the price of the derivative to the price of the\nunderlying security. When delta is large, the price of the derivative is sensitive to small changes in\nthe price of the underlying security.\n\n**Gamma**\n\nGamma of a derivative security is the rate of change of delta relative to the price of the underlying\nasset; that is, the second derivative of the option price relative to the security price. When gamma is\nsmall, the change in delta is small. This sensitivity measure is important for deciding how much to\nadjust a hedge position.",
    "section_title": "Sensitivity Measures",
    "section_hierarchy": [
      "Sensitivity Measures"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 697,
      "word_count": 123,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0878",
    "content": "Gamma of a derivative security is the rate of change of delta relative to the price of the underlying\nasset; that is, the second derivative of the option price relative to the security price. When gamma is\nsmall, the change in delta is small. This sensitivity measure is important for deciding how much to\nadjust a hedge position.\n\n**Lambda**\n\nLambda, also known as the elasticity of an option, represents the percentage change in the price of\nan option relative to a 1% change in the price of the underlying security.",
    "section_title": "Sensitivity Measures",
    "section_hierarchy": [
      "Sensitivity Measures"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 518,
      "word_count": 90,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0879",
    "content": "Lambda, also known as the elasticity of an option, represents the percentage change in the price of\nan option relative to a 1% change in the price of the underlying security.\n\n**Rho**\n\nRho is the rate of change in option price relative to the risk-free interest rate.",
    "section_title": "Sensitivity Measures",
    "section_hierarchy": [
      "Sensitivity Measures"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 267,
      "word_count": 47,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0880",
    "content": "Rho is the rate of change in option price relative to the risk-free interest rate.\n\nPricing and Analyzing Equity Derivatives",
    "section_title": "Sensitivity Measures",
    "section_hierarchy": [
      "Sensitivity Measures"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 124,
      "word_count": 20,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0881",
    "content": "Pricing and Analyzing Equity Derivatives\n\n**2-39**",
    "section_title": "Sensitivity Measures",
    "section_hierarchy": [
      "Sensitivity Measures"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 50,
      "word_count": 6,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0882",
    "content": "**2-39**\n\n<!-- Page 84 -->",
    "section_title": "Sensitivity Measures",
    "section_hierarchy": [
      "Sensitivity Measures"
    ],
    "page_numbers": [
      84
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0883",
    "content": "<!-- Page 84 -->\n\n**Theta**",
    "section_title": "Sensitivity Measures",
    "section_hierarchy": [
      "Sensitivity Measures"
    ],
    "page_numbers": [
      84
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 27,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0884",
    "content": "**Theta**\n\nTheta is the rate of change in the price of a derivative security relative to time. Theta is usually small\nor negative since the value of an option tends to drop as it approaches maturity.",
    "section_title": "Sensitivity Measures",
    "section_hierarchy": [
      "Sensitivity Measures"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 199,
      "word_count": 36,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0885",
    "content": "Theta is the rate of change in the price of a derivative security relative to time. Theta is usually small\nor negative since the value of an option tends to drop as it approaches maturity.\n\n**Vega**\n\nVega is the rate of change in the price of a derivative security relative to the volatility of the\nunderlying security. When vega is large the security is sensitive to small changes in volatility. For\nexample, options traders often must decide whether to buy an option to hedge against vega or\ngamma. The hedge selected usually depends upon how frequently one rebalances a hedge position\nand also upon the standard deviation of the price of the underlying asset (the volatility). If the\nstandard deviation is changing rapidly, balancing against vega is preferable.",
    "section_title": "Sensitivity Measures",
    "section_hierarchy": [
      "Sensitivity Measures"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 764,
      "word_count": 128,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0886",
    "content": "Vega is the rate of change in the price of a derivative security relative to the volatility of the\nunderlying security. When vega is large the security is sensitive to small changes in volatility. For\nexample, options traders often must decide whether to buy an option to hedge against vega or\ngamma. The hedge selected usually depends upon how frequently one rebalances a hedge position\nand also upon the standard deviation of the price of the underlying asset (the volatility). If the\nstandard deviation is changing rapidly, balancing against vega is preferable.\n\n**Implied Volatility**\n\nThe implied volatility of an option is the standard deviation that makes an option price equal to the\nmarket price. It helps determine a market estimate for the future volatility of a stock and provides the\ninput volatility (when needed) to the other Black-Scholes functions.",
    "section_title": "Sensitivity Measures",
    "section_hierarchy": [
      "Sensitivity Measures"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 865,
      "word_count": 139,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0887",
    "content": "Toolbox functions for analyzing equity derivatives use the Black-Scholes model for European options\nand the binomial model for American options. The Black-Scholes model makes several assumptions\nabout the underlying securities and their behavior. The Black-Scholes model was the first complete\nmathematical model for pricing options, developed by Fischer Black and Myron Scholes. It examines\nmarket price, strike price, volatility, time to expiration, and interest rates. It is limited to only certain\nkinds of options.\n\nThe binomial model, on the other hand, makes far fewer assumptions about the processes underlying\nan option. A binomial model is a method of pricing options or other equity derivatives in which the\nprobability over time of each possible price follows a binomial distribution. The basic assumption is\nthat prices can move to only two values (one higher and one lower) over any short time period. For\nfurther explanation, see *Options, Futures, and Other Derivatives* by John Hull in \u201cBibliography\u201d on\npage A-2.",
    "section_title": "Analysis Models",
    "section_hierarchy": [
      "Analysis Models"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1030,
      "word_count": 157,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0888",
    "content": "The binomial model, on the other hand, makes far fewer assumptions about the processes underlying\nan option. A binomial model is a method of pricing options or other equity derivatives in which the\nprobability over time of each possible price follows a binomial distribution. The basic assumption is\nthat prices can move to only two values (one higher and one lower) over any short time period. For\nfurther explanation, see *Options, Futures, and Other Derivatives* by John Hull in \u201cBibliography\u201d on\npage A-2.\n\n**Black-Scholes Model**",
    "section_title": "Analysis Models",
    "section_hierarchy": [
      "Analysis Models"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 534,
      "word_count": 85,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0889",
    "content": "**Black-Scholes Model**\n\nThis example shows how to compute the call and put prices of a European option and its delta,\ngamma, lambda, and implied volatility.\n\nUsing the Black-Scholes model entails several assumptions:",
    "section_title": "Analysis Models",
    "section_hierarchy": [
      "Analysis Models"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 217,
      "word_count": 32,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0890",
    "content": "Using the Black-Scholes model entails several assumptions:\n\n\u2022\nThe prices of the underlying asset follow an Ito process. (See \u201cDerivatives Pricing and Yields\u201d on\npage A-3, page 222.)",
    "section_title": "Analysis Models",
    "section_hierarchy": [
      "Analysis Models"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 181,
      "word_count": 28,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0891",
    "content": "\u2022\nThe prices of the underlying asset follow an Ito process. (See \u201cDerivatives Pricing and Yields\u201d on\npage A-3, page 222.)\n\n\u2022\nThe option can be exercised only on its expiration date (European option).",
    "section_title": "Analysis Models",
    "section_hierarchy": [
      "Analysis Models"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 199,
      "word_count": 34,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0892",
    "content": "\u2022\nThe option can be exercised only on its expiration date (European option).\n\n\u2022\nShort selling is permitted.",
    "section_title": "Analysis Models",
    "section_hierarchy": [
      "Analysis Models"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 107,
      "word_count": 18,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0893",
    "content": "\u2022\nShort selling is permitted.\n\n\u2022\nThere are no transaction costs.",
    "section_title": "Analysis Models",
    "section_hierarchy": [
      "Analysis Models"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 64,
      "word_count": 11,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0894",
    "content": "\u2022\nThere are no transaction costs.\n\n\u2022\nAll securities are divisible.",
    "section_title": "Analysis Models",
    "section_hierarchy": [
      "Analysis Models"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 66,
      "word_count": 11,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0895",
    "content": "\u2022\nAll securities are divisible.\n\n\u2022\nThere is no riskless arbitrage (where *arbitrage* is the purchase of securities on one market for\nimmediate resale on another market to profit from a price or currency discrepancy).",
    "section_title": "Analysis Models",
    "section_hierarchy": [
      "Analysis Models"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 216,
      "word_count": 35,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0896",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0897",
    "content": "**2-40**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0898",
    "content": "<!-- Page 85 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      85
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0899",
    "content": "\u2022\nTrading is a continuous process.",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 34,
      "word_count": 6,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0900",
    "content": "\u2022\nThe risk-free interest rate is constant and remains the same for all maturities.",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 82,
      "word_count": 14,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0901",
    "content": "If any of these assumptions is untrue, Black-Scholes may not be an appropriate model.",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 85,
      "word_count": 14,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0902",
    "content": "```\nTo illustrate toolbox Black-Scholes functions (blsprice, blsdelta, blsgamma, blsvega, and\nblslambda) this example computes the call and put prices of a European option and its delta,\ngamma, lambda, and implied volatility. The asset price is $100.00, the exercise price is $95.00, the\nrisk-free interest rate is 10%, the time to maturity is 0.25 years, the volatility is 0.50, and the\ndividend rate is 0.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 411,
      "word_count": 66,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0903",
    "content": "```\n[OptCall, OptPut] = blsprice(100, 95, 0.10, 0.25, 0.50, 0)\n```\n\n```\nOptCall = \n13.6953\n```\n\n```\nOptPut = \n6.3497\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 120,
      "word_count": 21,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0904",
    "content": "```\nOptPut = \n6.3497\n```\n\n```\n[CallVal, PutVal] = blsdelta(100, 95, 0.10, 0.25, 0.50, 0)\n```\n\n```\nCallVal = \n0.6665\n```\n\n```\nPutVal = \n-0.3335\n```\n\n```\nGammaVal = blsgamma(100, 95, 0.10, 0.25, 0.50, 0)\n```\n\n```\nGammaVal = \n0.0145\n```\n\n```\nVegaVal = blsvega(100, 95, 0.10, 0.25, 0.50, 0)\n```\n\n```\nVegaVal = \n18.1843\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 318,
      "word_count": 56,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0905",
    "content": "```\nVegaVal = \n18.1843\n```\n\n```\n[LamCall, LamPut] = blslambda(100, 95, 0.10, 0.25, 0.50, 0)\n```\n\n```\nLamCall = \n4.8664\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 122,
      "word_count": 21,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0906",
    "content": "```\nLamCall = \n4.8664\n```\n\n```\nLamPut = \n-5.2528\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 52,
      "word_count": 10,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0907",
    "content": "```\nLamPut = \n-5.2528\n```\n\nTo summarize:",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 40,
      "word_count": 7,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0908",
    "content": "To summarize:\n\n```\n\u2022\nThe option call price OptCall = $13.70\n```\n\n```\n\u2022\nThe option put price OptPut = $6.35\n```\n\n```\n\u2022\ndelta for a call CallVal = 0.6665 and delta for a put PutVal = -0.3335\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 192,
      "word_count": 40,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0909",
    "content": "```\n\u2022\ndelta for a call CallVal = 0.6665 and delta for a put PutVal = -0.3335\n```\n\n```\n\u2022\ngamma GammaVal = 0.0145\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 115,
      "word_count": 25,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0910",
    "content": "```\n\u2022\ngamma GammaVal = 0.0145\n```\n\n```\n\u2022\nvega VegaVal = 18.1843\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 67,
      "word_count": 14,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0911",
    "content": "```\n\u2022\nvega VegaVal = 18.1843\n```\n\n```\n\u2022\nlambda for a call LamCall = 4.8664 and lambda for a put LamPut = \u20135.2528\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 116,
      "word_count": 25,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0912",
    "content": "```\n\u2022\nlambda for a call LamCall = 4.8664 and lambda for a put LamPut = \u20135.2528\n```\n\n```\nAs a computation check, find the implied volatility of the option using the call option price from\nblsprice.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 200,
      "word_count": 38,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0913",
    "content": "```\nAs a computation check, find the implied volatility of the option using the call option price from\nblsprice.\n```\n\nPricing and Analyzing Equity Derivatives",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 158,
      "word_count": 25,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0914",
    "content": "Pricing and Analyzing Equity Derivatives\n\n**2-41**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 50,
      "word_count": 6,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0915",
    "content": "**2-41**\n\n<!-- Page 86 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      86
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0916",
    "content": "<!-- Page 86 -->\n\n```\nVolatility = blsimpv(100, 95, 0.10, 0.25, OptCall)\n```\n\n```\nVolatility = \n0.5000\n```\n\n```\nThe function returns an implied volatility of 0.500, the original blsprice input.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      86
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 197,
      "word_count": 32,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0917",
    "content": "```\nThe function returns an implied volatility of 0.500, the original blsprice input.\n```\n\n**Binomial Model**\n\nThis example shows how to price an American call option using a binomial model.\n\nThe binomial model for pricing options or other equity derivatives assumes that the probability over\ntime of each possible price follows a binomial distribution. The basic assumption is that prices can\nmove to only two values, one up and one down, over any short time period. Plotting the two values,\nand then the subsequent two values each, and then the subsequent two values each, and so on over\ntime, is known as \"building a binomial tree.\". This model applies to American options, which can be\nexercised any time up to and including their expiration date.\n\n```\nThis example prices an American call option using a binomial model. The asset price is $100.00, the\nexercise price is $95.00, the risk-free interest rate is 10%, and the time to maturity is 0.25 years. The\nfunction binprice computes the tree in increments of 0.05 years, so there are 0.25/0.05 = 5 periods\nin the example. The volatility is 0.50, this is a call (flag = 1), the dividend rate is 0, and it pays a\ndividend of $5.00 after three periods (an ex-dividend date).\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1232,
      "word_count": 212,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0918",
    "content": "```\nThis example prices an American call option using a binomial model. The asset price is $100.00, the\nexercise price is $95.00, the risk-free interest rate is 10%, and the time to maturity is 0.25 years. The\nfunction binprice computes the tree in increments of 0.05 years, so there are 0.25/0.05 = 5 periods\nin the example. The volatility is 0.50, this is a call (flag = 1), the dividend rate is 0, and it pays a\ndividend of $5.00 after three periods (an ex-dividend date).\n```\n\n```\n[StockPrice, OptionPrice] = binprice(100, 95, 0.10, 0.25, ... \n0.05,  0.50, 1, 0, 5.0, 3)\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 578,
      "word_count": 103,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0919",
    "content": "```\n[StockPrice, OptionPrice] = binprice(100, 95, 0.10, 0.25, ... \n0.05,  0.50, 1, 0, 5.0, 3)\n```\n\n```\nStockPrice = *6\u00d76*\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 125,
      "word_count": 21,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0920",
    "content": "```\nStockPrice = *6\u00d76*\n```\n\n```\n100.0000  111.2713  123.8732  137.9629  148.6915  166.2807\n         0   89.9677  100.0495  111.3211  118.8981  132.9629\n         0         0   80.9994   90.0175   95.0744  106.3211\n         0         0         0   72.9825   76.0243   85.0175\n         0         0         0         0   60.7913   67.9825\n         0         0         0         0         0   54.3608\n```\n\n```\nOptionPrice = *6\u00d76*\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 428,
      "word_count": 48,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0921",
    "content": "```\nOptionPrice = *6\u00d76*\n```\n\n```\n12.1011   19.1708   29.3470   42.9629   54.1653   71.2807\n         0    5.3068    9.4081   16.3211   24.3719   37.9629\n         0         0    1.3481    2.7402    5.5698   11.3211\n         0         0         0         0         0         0\n         0         0         0         0         0         0\n         0         0         0         0         0         0\n```\n\n```\nThe output from the binomial function is a binary tree. Read the StockPrice matrix this way:\ncolumn 1 shows the price for period 0, column 2 shows the up and down prices for period 1, column 3\nshows the up-up, up-down, and down-down prices for period 2, and so on. Ignore the zeros. The\nOptionPrice matrix gives the associated option value for each node in the price tree. Ignore the\nzeros that correspond to a zero in the price tree.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 843,
      "word_count": 125,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0922",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0923",
    "content": "**2-42**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0924",
    "content": "<!-- Page 87 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      87
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0925",
    "content": "blsprice | binprice | blkimpv | blkprice | blsdelta | blsgamma | blsimpv | blslambda |\nblsrho | blstheta | blsvega | opprofit",
    "section_title": "See Also",
    "section_hierarchy": [
      "See Also"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 125,
      "word_count": 23,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0926",
    "content": "\u2022\n\u201cHandle and Convert Dates\u201d on page 2-2",
    "section_title": "Related Examples",
    "section_hierarchy": [
      "Related Examples"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 40,
      "word_count": 8,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0927",
    "content": "\u2022\n\u201cGreek-Neutral Portfolios of European Stock Options\u201d on page 10-14",
    "section_title": "Related Examples",
    "section_hierarchy": [
      "Related Examples"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 68,
      "word_count": 10,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0928",
    "content": "\u2022\n\u201cPlotting Sensitivities of an Option\u201d on page 10-25\n\n\u2022\n\u201cPlotting Sensitivities of a Portfolio of Options\u201d on page 10-27",
    "section_title": "Related Examples",
    "section_hierarchy": [
      "Related Examples"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 121,
      "word_count": 20,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0929",
    "content": "\u2022\n\u201cPlotting Sensitivities of a Portfolio of Options\u201d on page 10-27\n\nPricing and Analyzing Equity Derivatives",
    "section_title": "Related Examples",
    "section_hierarchy": [
      "Related Examples"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 108,
      "word_count": 16,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0930",
    "content": "Pricing and Analyzing Equity Derivatives\n\n**2-43**",
    "section_title": "Related Examples",
    "section_hierarchy": [
      "Related Examples"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 50,
      "word_count": 6,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0931",
    "content": "**2-43**\n\n<!-- Page 88 -->",
    "section_title": "Related Examples",
    "section_hierarchy": [
      "Related Examples"
    ],
    "page_numbers": [
      88
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0932",
    "content": "Life tables are used for life insurance and work with the probability distribution of human mortality.\nThis distribution, which is age-dependent, has several characteristic features that are consequences\nof biological, cultural, and behavioral factors. Usually, the practitioners of life studies use life tables\nthat contain age-dependent series for specific demographics. The tables are in a standard format with\nstandard notation that is specific to the life studies field. An example of a life table is shown in Table 1\nfrom CDC life tables for the United States.\n\nOften, these life tables can have numerous variations such as abridged tables (which pose challenges\ndue to the granularity of the data) and different termination criteria (that can make it difficult to\ncompare tables or to compute life expectancies).\n\nMost raw life tables have one or more of the first three series in this table (*q**x*, *l**x*, and *d**x*) and the\nnotation for these three series is standard in the field.\n\n\u2022\nThe *q**x* series is basically the discrete hazard function for human mortality.",
    "section_title": "About Life Tables",
    "section_hierarchy": [
      "About Life Tables"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1077,
      "word_count": 171,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0933",
    "content": "\u2022\nThe *q**x* series is basically the discrete hazard function for human mortality.\n\n\u2022\nThe *l**x* series is the survival function multiplied by a radix of 100,000.\n\n\u2022\nThe *d**x* series is the discrete probability density for the distribution as a function of age.",
    "section_title": "About Life Tables",
    "section_hierarchy": [
      "About Life Tables"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 262,
      "word_count": 44,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0934",
    "content": "\u2022\nThe *d**x* series is the discrete probability density for the distribution as a function of age.\n\nFinancial Toolbox can handle arbitrary life table data supporting several standard models of mortality\nand provides various interpolation methods to calibrate and analyze the life table data.\n\n```\nAlthough primarily designed for life insurance applications, the life tables functions\n(lifetableconv, lifetablefit, and lifetablegen can also be used by social scientists,\nbehavioral psychologists, public health officials, and medical researchers.\n```",
    "section_title": "About Life Tables",
    "section_hierarchy": [
      "About Life Tables"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 549,
      "word_count": 76,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0935",
    "content": "Life tables are based on hazard functions and survival functions which are, in turn, derived from\nprobability distributions. Specifically, given a continuous probability distribution, its cumulative\ndistribution function is F(*x*) and its probability density function is f(*x*) = d F(*x*)/d*x*.",
    "section_title": "Life Tables Theory",
    "section_hierarchy": [
      "Life Tables Theory"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 294,
      "word_count": 40,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0936",
    "content": "For the analysis of mortality, the random variable of interest *X* is the distribution of ages at which\nindividuals die within a population. So, the probability that someone dies by age *x* is",
    "section_title": "Life Tables Theory",
    "section_hierarchy": [
      "Life Tables Theory"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 192,
      "word_count": 33,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0937",
    "content": "Pr[*X* \u2264*x*] =* F*(*x*)\n\n```\nThe survival function, (*s(x)*), which characterizes the probability that an individual lives beyond a\nspecified age* x* > 0, is\n```",
    "section_title": "Life Tables Theory",
    "section_hierarchy": [
      "Life Tables Theory"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 161,
      "word_count": 26,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0938",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0939",
    "content": "**2-44**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0940",
    "content": "<!-- Page 89 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      89
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0941",
    "content": "*s*(*x*) =* Pr*[*X* >* x*]\n= 1 \u2212*F*(*x*)",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 40,
      "word_count": 8,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0942",
    "content": "For a continuous probability distribution, the hazard function is a function of the survival function\nwith",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 106,
      "word_count": 16,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0943",
    "content": "*h*(*x*) = lim\n*\u0394x*\n0\n\n*Pr*[*x* \u2264*X* <* x* +* \u0394x X* \u2265*x*]\n*\u0394x*",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 62,
      "word_count": 14,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0944",
    "content": "*Pr*[*x* \u2264*X* <* x* +* \u0394x X* \u2265*x*]\n*\u0394x*\n\n= \u2212\n1\n*s*(*x*)\n\n*d*(*s*(*x*))\n*dx*",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 75,
      "word_count": 15,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0945",
    "content": "*d*(*s*(*x*))\n*dx*\n\nand the survival functions is a function of the hazard function with\n\n*s*(*x*) = exp \u2212\u222b\n0\n\n*x*\n*h*(*\u03be*)*d\u03be*",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 127,
      "word_count": 21,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0946",
    "content": "*x*\n*h*(*\u03be*)*d\u03be*\n\nLife table models generally specify either the hazard function or the survival function. However, life\ntables are discrete and work with discrete versions of the hazard and survival functions. Three series\nare used for life tables and the notation is the convention. The discrete hazard function is denoted as",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 327,
      "word_count": 51,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0947",
    "content": "Life table models generally specify either the hazard function or the survival function. However, life\ntables are discrete and work with discrete versions of the hazard and survival functions. Three series\nare used for life tables and the notation is the convention. The discrete hazard function is denoted as\n\n*q**x* \u2248*h*(*x*)",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 327,
      "word_count": 51,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0948",
    "content": "*q**x* \u2248*h*(*x*)\n\n= 1 \u2212*s*(*x* + 1)\n*s*(*x*)",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 44,
      "word_count": 8,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0949",
    "content": "= 1 \u2212*s*(*x* + 1)\n*s*(*x*)\n\n```\nwhich is the probability a person at age *x* dies by age *x* + 1 (where *x* is in years). The discrete survival\nfunction is presented in terms of an initial number of survivors at birth called the life table radix\n(which is usually 100,000 individuals) and is denoted as\n```\n\n*l**x* =* l*0*s*(*x*)\n\n```\nwith radix *l*0 = 100000. This number, *l**x*, represents the number of individuals out of 100,000 at birth\nwho are still alive at age *x*.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 478,
      "word_count": 88,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0950",
    "content": "```\nwith radix *l*0 = 100000. This number, *l**x*, represents the number of individuals out of 100,000 at birth\nwho are still alive at age *x*.\n```\n\nA third series is related to the probability density function which is the number of \"standardized\"\ndeaths in a given year denoted as",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 282,
      "word_count": 50,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0951",
    "content": "A third series is related to the probability density function which is the number of \"standardized\"\ndeaths in a given year denoted as\n\n*d**x* =* l**x* \u2212*l**x* + 1",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 162,
      "word_count": 29,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0952",
    "content": "*d**x* =* l**x* \u2212*l**x* + 1\n\nBased on a few additional rules about how to initialize and terminate these series, any one series can\nbe derived from any of the other series.",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 172,
      "word_count": 32,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0953",
    "content": "lifetableconv | lifetablefit | lifetablegen",
    "section_title": "See Also",
    "section_hierarchy": [
      "See Also"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 43,
      "word_count": 5,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0954",
    "content": "\u2022\n\u201cCase Study for Life Tables Analysis\u201d on page 2-46\n\nAbout Life Tables",
    "section_title": "Related Examples",
    "section_hierarchy": [
      "Related Examples"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 71,
      "word_count": 13,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0955",
    "content": "About Life Tables\n\n**2-45**",
    "section_title": "Related Examples",
    "section_hierarchy": [
      "Related Examples"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 27,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0956",
    "content": "**2-45**\n\n<!-- Page 90 -->",
    "section_title": "Related Examples",
    "section_hierarchy": [
      "Related Examples"
    ],
    "page_numbers": [
      90
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0957",
    "content": "This example shows how to use the basic workflow for life tables.\n\nLoad the life table data file.\n\n```\nload us_lifetable_2009\n```\n\n```\nCalibrate life table from survival data with the default heligman-pollard parametric model.\n```\n\n```\na = lifetablefit(x, lx);\n```\n\nGenerate life table series from the calibrated mortality model.\n\n```\nqx = lifetablegen((0:100), a);\ndisplay(qx(1:40,:))\n```",
    "section_title": "Case Study for Life Tables Analysis",
    "section_hierarchy": [
      "Case Study for Life Tables Analysis"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 389,
      "word_count": 58,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0958",
    "content": "```\nqx = lifetablegen((0:100), a);\ndisplay(qx(1:40,:))\n```\n\n```\n0.0063    0.0069    0.0057\n    0.0005    0.0006    0.0004\n    0.0002    0.0003    0.0002\n    0.0002    0.0002    0.0002\n    0.0001    0.0001    0.0001\n    0.0001    0.0001    0.0001\n    0.0001    0.0001    0.0001\n    0.0001    0.0001    0.0001\n    0.0001    0.0001    0.0001\n    0.0001    0.0001    0.0001\n    0.0001    0.0001    0.0001\n    0.0001    0.0001    0.0001\n    0.0002    0.0002    0.0001\n    0.0002    0.0002    0.0002\n    0.0002    0.0003    0.0002\n    0.0003    0.0004    0.0002\n    0.0004    0.0005    0.0002\n    0.0005    0.0006    0.0003\n    0.0006    0.0008    0.0003\n    0.0007    0.0009    0.0003\n    0.0008    0.0011    0.0003\n    0.0008    0.0012    0.0004\n    0.0009    0.0013    0.0004\n    0.0009    0.0014    0.0005\n    0.0010    0.0014    0.0005\n    0.0010    0.0015    0.0005\n    0.0010    0.0015    0.0006\n    0.0010    0.0015    0.0006\n    0.0010    0.0015    0.0007\n    0.0010    0.0014    0.0007\n    0.0011    0.0014    0.0007\n    0.0011    0.0014    0.0008\n    0.0011    0.0014    0.0008\n    0.0011    0.0014    0.0009\n    0.0011    0.0014    0.0009\n    0.0012    0.0015    0.0010\n    0.0012    0.0015    0.0011\n    0.0013    0.0016    0.0011\n    0.0014    0.0017    0.0012\n    0.0015    0.0018    0.0013\n```",
    "section_title": "Case Study for Life Tables Analysis",
    "section_hierarchy": [
      "Case Study for Life Tables Analysis"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1303,
      "word_count": 129,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0959",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0960",
    "content": "**2-46**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0961",
    "content": "<!-- Page 91 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      91
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0962",
    "content": "```\nPlot the qx series and display the legend. The series qx is the conditional probability that a person at\nage *x* will die between age *x* and the next age in the series\n```\n\n```\nplot((0:100), log(qx));\nlegend(series, 'location', 'southeast');\ntitle('Conditional Probability of Dying within One Year of Current Age');\nxlabel('Age');\nylabel('Log Probability');\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 366,
      "word_count": 55,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0963",
    "content": "lifetableconv | lifetablefit | lifetablegen",
    "section_title": "See Also",
    "section_hierarchy": [
      "See Also"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 43,
      "word_count": 5,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0964",
    "content": "\u2022\n\u201cAbout Life Tables\u201d on page 2-44\n\nCase Study for Life Tables Analysis",
    "section_title": "More About",
    "section_hierarchy": [
      "More About"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 71,
      "word_count": 13,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0965",
    "content": "Case Study for Life Tables Analysis\n\n**2-47**",
    "section_title": "More About",
    "section_hierarchy": [
      "More About"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 45,
      "word_count": 7,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0966",
    "content": "**2-47**\n\n<!-- Page 92 -->",
    "section_title": "More About",
    "section_hierarchy": [
      "More About"
    ],
    "page_numbers": [
      92
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0967",
    "content": "Machine learning techniques for processing large amounts of data are broadly applicable in\ncomputational finance. The series of examples introduced in this topic provides a general workflow,\nillustrating how capabilities in MATLAB apply to a specific problem in financial engineering. The\nworkflow is problem-oriented, exploratory, and guided by the data and the resulting analysis. The\noverall approach, however, is useful for constructing applications in many areas.",
    "section_title": "Machine Learning for Statistical Arbitrage: Introduction",
    "section_hierarchy": [
      "Machine Learning for Statistical Arbitrage: Introduction"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 468,
      "word_count": 66,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0968",
    "content": "The workflow consists of these actions:",
    "section_title": "Machine Learning for Statistical Arbitrage: Introduction",
    "section_hierarchy": [
      "Machine Learning for Statistical Arbitrage: Introduction"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 39,
      "word_count": 6,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0969",
    "content": "\u2022\nFormulate a simple approach to algorithmic trading, through an analysis of market\nmicrostructure, with the goal of identifying real-time arbitrage opportunities.",
    "section_title": "Machine Learning for Statistical Arbitrage: Introduction",
    "section_hierarchy": [
      "Machine Learning for Statistical Arbitrage: Introduction"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 163,
      "word_count": 22,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0970",
    "content": "\u2022\nUse a large sample of exchange data to track order dynamics of a single security on a single day,\nselectively processing the data to develop relevant statistical measures.",
    "section_title": "Machine Learning for Statistical Arbitrage: Introduction",
    "section_hierarchy": [
      "Machine Learning for Statistical Arbitrage: Introduction"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 173,
      "word_count": 29,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0971",
    "content": "\u2022\nCreate a model of intraday dynamics conditioned on a selection of hyperparameters introduced\nduring feature engineering and development.",
    "section_title": "Machine Learning for Statistical Arbitrage: Introduction",
    "section_hierarchy": [
      "Machine Learning for Statistical Arbitrage: Introduction"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 138,
      "word_count": 19,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0972",
    "content": "\u2022\nEvaluate hyperparameter tunings using a supervising objective that computes cash returned on a\nmodel-based trading strategy.\n\n\u2022\nOptimize the trading strategy using different machine learning algorithms.",
    "section_title": "Machine Learning for Statistical Arbitrage: Introduction",
    "section_hierarchy": [
      "Machine Learning for Statistical Arbitrage: Introduction"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 204,
      "word_count": 27,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0973",
    "content": "\u2022\nOptimize the trading strategy using different machine learning algorithms.\n\n\u2022\nSuggest modifications for further development.",
    "section_title": "Machine Learning for Statistical Arbitrage: Introduction",
    "section_hierarchy": [
      "Machine Learning for Statistical Arbitrage: Introduction"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 126,
      "word_count": 16,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0974",
    "content": "\u2022\nSuggest modifications for further development.\n\nThe workflow is separated into three examples:",
    "section_title": "Machine Learning for Statistical Arbitrage: Introduction",
    "section_hierarchy": [
      "Machine Learning for Statistical Arbitrage: Introduction"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 96,
      "word_count": 13,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0975",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0976",
    "content": "**2-48**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0977",
    "content": "<!-- Page 93 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      93
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0978",
    "content": "**1**\n\u201cMachine Learning for Statistical Arbitrage I: Data Management and Visualization\u201d on page 2-\n50\n\n**2**\n\u201cMachine Learning for Statistical Arbitrage II: Feature Engineering and Model Development\u201d on\npage 2-59\n\n**3**\n\u201cMachine Learning for Statistical Arbitrage III: Training, Tuning, and Prediction\u201d on page 2-69",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 315,
      "word_count": 44,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0979",
    "content": "**3**\n\u201cMachine Learning for Statistical Arbitrage III: Training, Tuning, and Prediction\u201d on page 2-69\n\nFor more information about general workflows for machine learning, see:\n\n\u2022\n\u201cMachine Learning in MATLAB\u201d\n\n\u2022\n\u201cSupervised Learning Workflow and Algorithms\u201d",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 255,
      "word_count": 35,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0980",
    "content": "\u2022\n\u201cSupervised Learning Workflow and Algorithms\u201d\n\nMachine Learning for Statistical Arbitrage: Introduction",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 105,
      "word_count": 12,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0981",
    "content": "Machine Learning for Statistical Arbitrage: Introduction\n\n**2-49**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 66,
      "word_count": 7,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0982",
    "content": "**2-49**\n\n<!-- Page 94 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      94
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0983",
    "content": "and Visualization",
    "section_title": "Machine Learning for Statistical Arbitrage I: Data Management",
    "section_hierarchy": [
      "Machine Learning for Statistical Arbitrage I: Data Management"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 17,
      "word_count": 2,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0984",
    "content": "This example shows techniques for managing, processing, and visualizing large amounts of financial\ndata in MATLAB\u00ae. It is part of a series of related examples on machine learning for statistical\narbitrage (see \u201cMachine Learning Applications\u201d).",
    "section_title": "Machine Learning for Statistical Arbitrage I: Data Management",
    "section_hierarchy": [
      "Machine Learning for Statistical Arbitrage I: Data Management"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 243,
      "word_count": 35,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0985",
    "content": "**Working with Big Data**\n\nFinancial markets, with electronic exchanges such as NASDAQ executing orders on a timescale of\nmilliseconds, generate vast amounts of data. Data streams can be mined for statistical arbitrage\nopportunities, but traditional methods for processing and storing dynamic analytic information can be\noverwhelmed by big data. Fortunately, new computational approaches have emerged, and MATLAB\nhas an array of tools for implementing them.",
    "section_title": "Machine Learning for Statistical Arbitrage I: Data Management",
    "section_hierarchy": [
      "Machine Learning for Statistical Arbitrage I: Data Management"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 457,
      "word_count": 65,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0986",
    "content": "Financial markets, with electronic exchanges such as NASDAQ executing orders on a timescale of\nmilliseconds, generate vast amounts of data. Data streams can be mined for statistical arbitrage\nopportunities, but traditional methods for processing and storing dynamic analytic information can be\noverwhelmed by big data. Fortunately, new computational approaches have emerged, and MATLAB\nhas an array of tools for implementing them.\n\nMain computer memory provides high-speed access but limited capacity, whereas external storage\noffers low-speed access but potentially unlimited capacity. Computation takes place in memory. The\ncomputer recalls data and results from external storage.",
    "section_title": "Machine Learning for Statistical Arbitrage I: Data Management",
    "section_hierarchy": [
      "Machine Learning for Statistical Arbitrage I: Data Management"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 682,
      "word_count": 94,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0987",
    "content": "Main computer memory provides high-speed access but limited capacity, whereas external storage\noffers low-speed access but potentially unlimited capacity. Computation takes place in memory. The\ncomputer recalls data and results from external storage.\n\n**Data Files**",
    "section_title": "Machine Learning for Statistical Arbitrage I: Data Management",
    "section_hierarchy": [
      "Machine Learning for Statistical Arbitrage I: Data Management"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 266,
      "word_count": 35,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0988",
    "content": "**Data Files**\n\n```\nThis example uses one trading day of NASDAQ exchange data [2] on one security (INTC) in a sample\nprovided by LOBSTER [1] and included with Financial Toolbox\u2122 documentation in the zip file\nLOBSTER_SampleFile_INTC_2012-06-21_5.zip. Extract the contents of the zip file into your\ncurrent folder. The expanded files, including two CSV files of data and the text file\nLOBSTER_SampleFiles_ReadMe.txt, consume 93.7 MB of memory.\n```",
    "section_title": "Machine Learning for Statistical Arbitrage I: Data Management",
    "section_hierarchy": [
      "Machine Learning for Statistical Arbitrage I: Data Management"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 445,
      "word_count": 67,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0989",
    "content": "```\nThis example uses one trading day of NASDAQ exchange data [2] on one security (INTC) in a sample\nprovided by LOBSTER [1] and included with Financial Toolbox\u2122 documentation in the zip file\nLOBSTER_SampleFile_INTC_2012-06-21_5.zip. Extract the contents of the zip file into your\ncurrent folder. The expanded files, including two CSV files of data and the text file\nLOBSTER_SampleFiles_ReadMe.txt, consume 93.7 MB of memory.\n```\n\n```\nunzip(\"LOBSTER_SampleFile_INTC_2012-06-21_5.zip\");\n```",
    "section_title": "Machine Learning for Statistical Arbitrage I: Data Management",
    "section_hierarchy": [
      "Machine Learning for Statistical Arbitrage I: Data Management"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 489,
      "word_count": 68,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0990",
    "content": "```\nunzip(\"LOBSTER_SampleFile_INTC_2012-06-21_5.zip\");\n```\n\nThe data describes the intraday evolution of the *limit order book* (LOB), which is the record of *market*\n*orders* (best price), *limit orders* (designated price), and resulting buys and sells. The data includes\nthe precise time of these events, with orders tracked from arrival until cancellation or execution. At\neach moment in the trading day, orders on both the buy and sell side of the LOB exist at various *levels*\naway from the midprice between the lowest ask (order to sell) and the highest bid (order to buy).",
    "section_title": "Machine Learning for Statistical Arbitrage I: Data Management",
    "section_hierarchy": [
      "Machine Learning for Statistical Arbitrage I: Data Management"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 579,
      "word_count": 91,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0991",
    "content": "The data describes the intraday evolution of the *limit order book* (LOB), which is the record of *market*\n*orders* (best price), *limit orders* (designated price), and resulting buys and sells. The data includes\nthe precise time of these events, with orders tracked from arrival until cancellation or execution. At\neach moment in the trading day, orders on both the buy and sell side of the LOB exist at various *levels*\naway from the midprice between the lowest ask (order to sell) and the highest bid (order to buy).\n\nLevel 5 data (five levels away from the midprice on either side) is contained in two CSV files. Extract\nthe trading date from the message file name.\n\n```\nMSGFileName = \"INTC_2012-06-21_34200000_57600000_message_5.csv\";   % Message file (description of\nLOBFileName = \"INTC_2012-06-21_34200000_57600000_orderbook_5.csv\"; % Data file\n```",
    "section_title": "Machine Learning for Statistical Arbitrage I: Data Management",
    "section_hierarchy": [
      "Machine Learning for Statistical Arbitrage I: Data Management"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 855,
      "word_count": 131,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0992",
    "content": "```\nMSGFileName = \"INTC_2012-06-21_34200000_57600000_message_5.csv\";   % Message file (description of\nLOBFileName = \"INTC_2012-06-21_34200000_57600000_orderbook_5.csv\"; % Data file\n```\n\n```\n[ticker,rem] = strtok(MSGFileName,'_');\ndate = strtok(rem,'_');\n```",
    "section_title": "Machine Learning for Statistical Arbitrage I: Data Management",
    "section_hierarchy": [
      "Machine Learning for Statistical Arbitrage I: Data Management"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 257,
      "word_count": 24,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0993",
    "content": "```\n[ticker,rem] = strtok(MSGFileName,'_');\ndate = strtok(rem,'_');\n```\n\n**Data Storage**",
    "section_title": "Machine Learning for Statistical Arbitrage I: Data Management",
    "section_hierarchy": [
      "Machine Learning for Statistical Arbitrage I: Data Management"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 89,
      "word_count": 10,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0994",
    "content": "**Data Storage**\n\nDaily data streams accumulate and need to be stored. A *datastore* is a repository for collections of\ndata that are too big to fit in memory.",
    "section_title": "Machine Learning for Statistical Arbitrage I: Data Management",
    "section_hierarchy": [
      "Machine Learning for Statistical Arbitrage I: Data Management"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "definition",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 159,
      "word_count": 28,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0995",
    "content": "Daily data streams accumulate and need to be stored. A *datastore* is a repository for collections of\ndata that are too big to fit in memory.\n\n```\nUse tabularTextDatastore to create datastores for the message and data files. Because the files\ncontain data with different formats, create the datastores separately. Ignore generic column headers\n(for example, VarName1) by setting the 'ReadVariableNames' name-value argument to false.\nReplace the headers with descriptive variable names obtained from\n```",
    "section_title": "Machine Learning for Statistical Arbitrage I: Data Management",
    "section_hierarchy": [
      "Machine Learning for Statistical Arbitrage I: Data Management"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 502,
      "word_count": 75,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0996",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_0997",
    "content": "**2-50**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0998",
    "content": "<!-- Page 95 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      95
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_0999",
    "content": "```\nLOBSTER_SampleFiles_ReadMe.txt. Set the 'ReadSize' name-value argument to 'file' to\nallow similarly formatted files to be appended to existing datastores at the end of each trading day.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 193,
      "word_count": 28,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1000",
    "content": "```\nDSMSG = tabularTextDatastore(MSGFileName,'ReadVariableNames',false,'ReadSize','file');\nDSMSG.VariableNames = [\"Time\",\"Type\",\"OrderID\",\"Size\",\"Price\",\"Direction\"];\n```\n\n```\nDSLOB = tabularTextDatastore(LOBFileName,'ReadVariableNames',false,'ReadSize','file');\nDSLOB.VariableNames = [\"AskPrice1\",\"AskSize1\",\"BidPrice1\",\"BidSize1\",...\n                       \"AskPrice2\",\"AskSize2\",\"BidPrice2\",\"BidSize2\",...\n                       \"AskPrice3\",\"AskSize3\",\"BidPrice3\",\"BidSize3\",...\n                       \"AskPrice4\",\"AskSize4\",\"BidPrice4\",\"BidSize4\",...\n                       \"AskPrice5\",\"AskSize5\",\"BidPrice5\",\"BidSize5\"];\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 629,
      "word_count": 20,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1001",
    "content": "```\nDSLOB = tabularTextDatastore(LOBFileName,'ReadVariableNames',false,'ReadSize','file');\nDSLOB.VariableNames = [\"AskPrice1\",\"AskSize1\",\"BidPrice1\",\"BidSize1\",...\n                       \"AskPrice2\",\"AskSize2\",\"BidPrice2\",\"BidSize2\",...\n                       \"AskPrice3\",\"AskSize3\",\"BidPrice3\",\"BidSize3\",...\n                       \"AskPrice4\",\"AskSize4\",\"BidPrice4\",\"BidSize4\",...\n                       \"AskPrice5\",\"AskSize5\",\"BidPrice5\",\"BidSize5\"];\n```\n\n```\nCreate a combined datastore by selecting Time and the level 3 data.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 534,
      "word_count": 26,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1002",
    "content": "```\nCreate a combined datastore by selecting Time and the level 3 data.\n```\n\n```\nTimeVariable = \"Time\";\nDSMSG.SelectedVariableNames = TimeVariable;\n```\n\n```\nLOB3Variables = [\"AskPrice1\",\"AskSize1\",\"BidPrice1\",\"BidSize1\",...\n                 \"AskPrice2\",\"AskSize2\",\"BidPrice2\",\"BidSize2\",...\n                 \"AskPrice3\",\"AskSize3\",\"BidPrice3\",\"BidSize3\"];\nDSLOB.SelectedVariableNames = LOB3Variables;\n                               \nDS = combine(DSMSG,DSLOB);\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 463,
      "word_count": 35,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1003",
    "content": "```\nLOB3Variables = [\"AskPrice1\",\"AskSize1\",\"BidPrice1\",\"BidSize1\",...\n                 \"AskPrice2\",\"AskSize2\",\"BidPrice2\",\"BidSize2\",...\n                 \"AskPrice3\",\"AskSize3\",\"BidPrice3\",\"BidSize3\"];\nDSLOB.SelectedVariableNames = LOB3Variables;\n                               \nDS = combine(DSMSG,DSLOB);\n```\n\nYou can preview the first few rows in the combined datastore without loading data into memory.",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 406,
      "word_count": 29,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1004",
    "content": "You can preview the first few rows in the combined datastore without loading data into memory.\n\n```\nDSPreview = preview(DS);\nLOBPreview = DSPreview(:,1:5)\n```\n\n```\nLOBPreview=*8\u00d75 table*\n    Time     AskPrice1    AskSize1    BidPrice1    BidSize1\n    _____    _________    ________    _________    ________\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 310,
      "word_count": 38,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1005",
    "content": "```\nLOBPreview=*8\u00d75 table*\n    Time     AskPrice1    AskSize1    BidPrice1    BidSize1\n    _____    _________    ________    _________    ________\n```\n\n```\n34200    2.752e+05       66       2.751e+05      400   \n    34200    2.752e+05      166       2.751e+05      400   \n    34200    2.752e+05      166       2.751e+05      400   \n    34200    2.752e+05      166       2.751e+05      400   \n    34200    2.752e+05      166       2.751e+05      300   \n    34200    2.752e+05      166       2.751e+05      300   \n    34200    2.752e+05      166       2.751e+05      300   \n    34200    2.752e+05      166       2.751e+05      300\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 632,
      "word_count": 56,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1006",
    "content": "```\n34200    2.752e+05       66       2.751e+05      400   \n    34200    2.752e+05      166       2.751e+05      400   \n    34200    2.752e+05      166       2.751e+05      400   \n    34200    2.752e+05      166       2.751e+05      400   \n    34200    2.752e+05      166       2.751e+05      300   \n    34200    2.752e+05      166       2.751e+05      300   \n    34200    2.752e+05      166       2.751e+05      300   \n    34200    2.752e+05      166       2.751e+05      300\n```\n\n```\nThe preview shows asks and bids *at the touch*, meaning the level 1 data, which is closest to the\nmidprice. Time units are seconds after midnight, price units are dollar amounts times 10,000, and\nsize units are the number of shares (see LOBSTER_SampleFiles_ReadMe.txt).\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 759,
      "word_count": 87,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1007",
    "content": "```\nThe preview shows asks and bids *at the touch*, meaning the level 1 data, which is closest to the\nmidprice. Time units are seconds after midnight, price units are dollar amounts times 10,000, and\nsize units are the number of shares (see LOBSTER_SampleFiles_ReadMe.txt).\n```\n\n**Tall Arrays and Timetables**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 309,
      "word_count": 49,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1008",
    "content": "**Tall Arrays and Timetables**\n\nTall arrays work with out-of-memory data backed by a datastore using the MapReduce technique (see\n\u201cTall Arrays for Out-of-Memory Data\u201d). When you use MapReduce, tall arrays remain unevaluated\nuntil you execute specific computations that use the data.\n\n```\nSet the execution environment for MapReduce to the local MATLAB session, instead of using Parallel\nComputing Toolbox\u2122, by calling mapreducer(0). Then, create a tall array from the datastore DS by\nusing tall. Preview the data in the tall array.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 535,
      "word_count": 82,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1009",
    "content": "```\nSet the execution environment for MapReduce to the local MATLAB session, instead of using Parallel\nComputing Toolbox\u2122, by calling mapreducer(0). Then, create a tall array from the datastore DS by\nusing tall. Preview the data in the tall array.\n```\n\nMachine Learning for Statistical Arbitrage I: Data Management and Visualization",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 332,
      "word_count": 51,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_1010",
    "content": "Machine Learning for Statistical Arbitrage I: Data Management and Visualization\n\n**2-51**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 89,
      "word_count": 11,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1011",
    "content": "**2-51**\n\n<!-- Page 96 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      96
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1012",
    "content": "<!-- Page 96 -->\n\n```\nmapreducer(0)\nDT = tall(DS);\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      96
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 54,
      "word_count": 10,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1013",
    "content": "```\nmapreducer(0)\nDT = tall(DS);\n```\n\n```\nDTPreview = DT(:,1:5)\n```\n\n```\nDTPreview =\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 88,
      "word_count": 15,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1014",
    "content": "```\nDTPreview =\n```\n\n```\nM\u00d75 tall table\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 43,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1015",
    "content": "```\nM\u00d75 tall table\n```\n\n```\nTime     AskPrice1    AskSize1    BidPrice1    BidSize1\n    _____    _________    ________    _________    ________\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 147,
      "word_count": 17,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_1016",
    "content": "```\nTime     AskPrice1    AskSize1    BidPrice1    BidSize1\n    _____    _________    ________    _________    ________\n```\n\n```\n34200    2.752e+05       66       2.751e+05      400   \n    34200    2.752e+05      166       2.751e+05      400   \n    34200    2.752e+05      166       2.751e+05      400   \n    34200    2.752e+05      166       2.751e+05      400   \n    34200    2.752e+05      166       2.751e+05      300   \n    34200    2.752e+05      166       2.751e+05      300   \n    34200    2.752e+05      166       2.751e+05      300   \n    34200    2.752e+05      166       2.751e+05      300   \n      :          :           :            :           :\n      :          :           :            :           :\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 720,
      "word_count": 64,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1017",
    "content": "```\n34200    2.752e+05       66       2.751e+05      400   \n    34200    2.752e+05      166       2.751e+05      400   \n    34200    2.752e+05      166       2.751e+05      400   \n    34200    2.752e+05      166       2.751e+05      400   \n    34200    2.752e+05      166       2.751e+05      300   \n    34200    2.752e+05      166       2.751e+05      300   \n    34200    2.752e+05      166       2.751e+05      300   \n    34200    2.752e+05      166       2.751e+05      300   \n      :          :           :            :           :\n      :          :           :            :           :\n```\n\n```\nTimetables allow you to perform operations specific to time series (see \u201cCreate Timetables\u201d). Because\nthe LOB data consists of concurrent time series, convert DT to a tall timetable.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 787,
      "word_count": 82,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1018",
    "content": "```\nTimetables allow you to perform operations specific to time series (see \u201cCreate Timetables\u201d). Because\nthe LOB data consists of concurrent time series, convert DT to a tall timetable.\n```\n\n```\nDT.Time = seconds(DT.Time); % Cast time as a duration from midnight.\nDTT = table2timetable(DT);\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 295,
      "word_count": 46,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1019",
    "content": "```\nDT.Time = seconds(DT.Time); % Cast time as a duration from midnight.\nDTT = table2timetable(DT);\n```\n\n```\nDTTPreview = DTT(:,1:4)\n```\n\n```\nDTTPreview =\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 158,
      "word_count": 25,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1020",
    "content": "```\nDTTPreview =\n```\n\n```\nM\u00d74 tall timetable\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 48,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1021",
    "content": "```\nM\u00d74 tall timetable\n```\n\n```\nTime       AskPrice1    AskSize1    BidPrice1    BidSize1\n    _________    _________    ________    _________    ________\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 157,
      "word_count": 17,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_1022",
    "content": "```\nTime       AskPrice1    AskSize1    BidPrice1    BidSize1\n    _________    _________    ________    _________    ________\n```\n\n```\n34200 sec    2.752e+05       66       2.751e+05      400   \n    34200 sec    2.752e+05      166       2.751e+05      400   \n    34200 sec    2.752e+05      166       2.751e+05      400   \n    34200 sec    2.752e+05      166       2.751e+05      400   \n    34200 sec    2.752e+05      166       2.751e+05      300   \n    34200 sec    2.752e+05      166       2.751e+05      300   \n    34200 sec    2.752e+05      166       2.751e+05      300   \n    34200 sec    2.752e+05      166       2.751e+05      300   \n        :            :           :            :           :\n        :            :           :            :           :\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 766,
      "word_count": 72,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1023",
    "content": "```\n34200 sec    2.752e+05       66       2.751e+05      400   \n    34200 sec    2.752e+05      166       2.751e+05      400   \n    34200 sec    2.752e+05      166       2.751e+05      400   \n    34200 sec    2.752e+05      166       2.751e+05      400   \n    34200 sec    2.752e+05      166       2.751e+05      300   \n    34200 sec    2.752e+05      166       2.751e+05      300   \n    34200 sec    2.752e+05      166       2.751e+05      300   \n    34200 sec    2.752e+05      166       2.751e+05      300   \n        :            :           :            :           :\n        :            :           :            :           :\n```\n\nDisplay all variables in the MATLAB workspace.",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 683,
      "word_count": 67,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1024",
    "content": "Display all variables in the MATLAB workspace.\n\n```\nwhos\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 60,
      "word_count": 10,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_1025",
    "content": "```\nwhos\n```\n\n```\nName               Size            Bytes  Class                                       Attribute\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 117,
      "word_count": 10,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_1026",
    "content": "```\nName               Size            Bytes  Class                                       Attribute\n```\n\n```\nDS                 1x1                 8  matlab.io.datastore.CombinedDatastore                \n  DSLOB              1x1                 8  matlab.io.datastore.TabularTextDatastore             \n  DSMSG              1x1                 8  matlab.io.datastore.TabularTextDatastore             \n  DSPreview          8x13             4899  table\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 454,
      "word_count": 25,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_1027",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_1028",
    "content": "**2-52**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1029",
    "content": "<!-- Page 97 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      97
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1030",
    "content": "```\nDT                 Mx13             5292  tall                                                 \n  DTPreview          Mx5              2926  tall                                                 \n  DTT                Mx12             5056  tall                                                 \n  DTTPreview         Mx4              2704  tall                                                 \n  LOB3Variables      1x12              952  string                                               \n  LOBFileName        1x1               262  string                                               \n  LOBPreview         8x5              2331  table                                                \n  MSGFileName        1x1               246  string                                               \n  TimeVariable       1x1               166  string                                               \n  date               1x1               182  string                                               \n  rem                1x1               246  string                                               \n  ticker             1x1               166  string\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 1134,
      "word_count": 50,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_1031",
    "content": "Because all the data is in the datastore, the workspace uses little memory.",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 75,
      "word_count": 13,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_1032",
    "content": "**Preprocess and Evaluate Data**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 32,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1033",
    "content": "Tall arrays allow preprocessing, or *queuing*, of computations before they are evaluated, which\nimproves memory management in the workspace.",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 140,
      "word_count": 19,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1034",
    "content": "```\nMidprice S and imbalance index I are used to model LOB dynamics. To queue their computations,\ndefine them, and the time base, in terms of DTT.\n```\n\n```\ntimeBase = DTT.Time;\nMidPrice = (DTT.BidPrice1 + DTT.AskPrice1)/2;\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 226,
      "word_count": 38,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1035",
    "content": "```\ntimeBase = DTT.Time;\nMidPrice = (DTT.BidPrice1 + DTT.AskPrice1)/2;\n```\n\n```\n% LOB level 3 imbalance index:\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 114,
      "word_count": 18,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1036",
    "content": "```\n% LOB level 3 imbalance index:\n```\n\n```\nlambda  = 0.5; % Hyperparameter\nweights = exp(-(lambda)*[0 1 2]);\nVAsk = weights(1)*DTT.AskSize1 + weights(2)*DTT.AskSize2 + weights(3)*DTT.AskSize3;\nVBid = weights(1)*DTT.BidSize1 + weights(2)*DTT.BidSize2 + weights(3)*DTT.BidSize3;\nImbalanceIndex = (VBid-VAsk)./(VBid+VAsk);\n```\n\n```\nThe imbalance index is a weighted average of ask and bid volumes on either side of the midprice [3].\nThe imbalance index is a potential indicator of future price movements. The variable lambda is a\n*hyperparameter*, which is a parameter specified before training rather than estimated by the machine\nlearning algorithm. A hyperparameter can influence the performance of the model. *Feature*\n*engineering* is the process of choosing domain-specific hyperparameters to use in machine learning\nalgorithms. You can tune hyperparameters to optimize a trading strategy.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 897,
      "word_count": 123,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1037",
    "content": "```\nThe imbalance index is a weighted average of ask and bid volumes on either side of the midprice [3].\nThe imbalance index is a potential indicator of future price movements. The variable lambda is a\n*hyperparameter*, which is a parameter specified before training rather than estimated by the machine\nlearning algorithm. A hyperparameter can influence the performance of the model. *Feature*\n*engineering* is the process of choosing domain-specific hyperparameters to use in machine learning\nalgorithms. You can tune hyperparameters to optimize a trading strategy.\n```\n\n```\nTo bring preprocessed expressions into memory and evaluate them, use the gather function. This\nprocess is called *deferred evaluation*.\n```\n\n```\n[t,S,I] = gather(timeBase,MidPrice,ImbalanceIndex);\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 777,
      "word_count": 112,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1038",
    "content": "```\n[t,S,I] = gather(timeBase,MidPrice,ImbalanceIndex);\n```\n\n```\nEvaluating tall expression using the Local MATLAB Session:\n- Pass 1 of 1: Completed in 4.5 sec\nEvaluation completed in 5 sec\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 193,
      "word_count": 29,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1039",
    "content": "```\nEvaluating tall expression using the Local MATLAB Session:\n- Pass 1 of 1: Completed in 4.5 sec\nEvaluation completed in 5 sec\n```\n\n```\nA single call to gather evaluates multiple preprocessed expressions with a single pass through the\ndatastore.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 251,
      "word_count": 42,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1040",
    "content": "```\nA single call to gather evaluates multiple preprocessed expressions with a single pass through the\ndatastore.\n```\n\nDetermine the sample size, which is the number of *ticks*, or updates, in the data.",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 202,
      "word_count": 33,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1041",
    "content": "Determine the sample size, which is the number of *ticks*, or updates, in the data.\n\n```\nnumTicks = length(t)\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 113,
      "word_count": 20,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1042",
    "content": "```\nnumTicks = length(t)\n```\n\nMachine Learning for Statistical Arbitrage I: Data Management and Visualization",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 109,
      "word_count": 15,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1043",
    "content": "Machine Learning for Statistical Arbitrage I: Data Management and Visualization\n\n**2-53**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 89,
      "word_count": 11,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1044",
    "content": "**2-53**\n\n<!-- Page 98 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      98
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 26,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1045",
    "content": "<!-- Page 98 -->\n\n```\nnumTicks = \n581030\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      98
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 44,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1046",
    "content": "```\nnumTicks = \n581030\n```\n\nThe daily LOB data contains 581,030 ticks.",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 70,
      "word_count": 12,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1047",
    "content": "The daily LOB data contains 581,030 ticks.\n\n**Checkpoint Data**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 63,
      "word_count": 9,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1048",
    "content": "**Checkpoint Data**\n\nYou can save both unevaluated and evaluated data to external storage for later use.",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 104,
      "word_count": 16,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1049",
    "content": "You can save both unevaluated and evaluated data to external storage for later use.\n\n```\nPrepend the time base with the date, and cast the result as a datetime array. Save the resulting\ndatetime array, MidPrice, and ImbalanceIndex to a MAT-file in a specified location.\n```\n\n```\ndateTimeBase = datetime(date) + timeBase; \nToday = timetable(dateTimeBase,MidPrice,ImbalanceIndex)\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 381,
      "word_count": 56,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1050",
    "content": "```\ndateTimeBase = datetime(date) + timeBase; \nToday = timetable(dateTimeBase,MidPrice,ImbalanceIndex)\n```\n\n```\nToday =\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 123,
      "word_count": 14,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1051",
    "content": "```\nToday =\n```\n\n```\n581,030\u00d72 tall timetable\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 49,
      "word_count": 9,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1052",
    "content": "```\n581,030\u00d72 tall timetable\n```\n\n```\ndateTimeBase         MidPrice     ImbalanceIndex\n    ____________________    __________    ______________\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 147,
      "word_count": 13,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_1053",
    "content": "```\ndateTimeBase         MidPrice     ImbalanceIndex\n    ____________________    __________    ______________\n```\n\n```\n21-Jun-2012 09:30:00    2.7515e+05         -0.205   \n    21-Jun-2012 09:30:00    2.7515e+05       -0.26006   \n    21-Jun-2012 09:30:00    2.7515e+05       -0.26006   \n    21-Jun-2012 09:30:00    2.7515e+05      -0.086772   \n    21-Jun-2012 09:30:00    2.7515e+05       -0.15581   \n    21-Jun-2012 09:30:00    2.7515e+05       -0.35382   \n    21-Jun-2012 09:30:00    2.7515e+05       -0.19084   \n    21-Jun-2012 09:30:00    2.7515e+05       -0.19084   \n             :                  :               :\n             :                  :               :\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 674,
      "word_count": 48,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1054",
    "content": "```\n21-Jun-2012 09:30:00    2.7515e+05         -0.205   \n    21-Jun-2012 09:30:00    2.7515e+05       -0.26006   \n    21-Jun-2012 09:30:00    2.7515e+05       -0.26006   \n    21-Jun-2012 09:30:00    2.7515e+05      -0.086772   \n    21-Jun-2012 09:30:00    2.7515e+05       -0.15581   \n    21-Jun-2012 09:30:00    2.7515e+05       -0.35382   \n    21-Jun-2012 09:30:00    2.7515e+05       -0.19084   \n    21-Jun-2012 09:30:00    2.7515e+05       -0.19084   \n             :                  :               :\n             :                  :               :\n```\n\n```\nlocation = fullfile(pwd,\"ExchangeData\",ticker,date);\nwrite(location,Today,'FileType','mat')\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 660,
      "word_count": 46,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1055",
    "content": "```\nlocation = fullfile(pwd,\"ExchangeData\",ticker,date);\nwrite(location,Today,'FileType','mat')\n```\n\n```\nWriting tall data to folder C:\\TEMP\\tp5b508469\\finance-ex97702880\\ExchangeData\\INTC\\2012-06-21\nEvaluating tall expression using the Local MATLAB Session:\n- Pass 1 of 1: Completed in 5.8 sec\nEvaluation completed in 6.7 sec\n```\n\n```\nThe file is written once, at the end of each trading day. The code saves the data to a file in a date-\nstamped folder. The series of ExchangeData subfolders serves as a historical data repository.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 536,
      "word_count": 74,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1056",
    "content": "```\nThe file is written once, at the end of each trading day. The code saves the data to a file in a date-\nstamped folder. The series of ExchangeData subfolders serves as a historical data repository.\n```\n\n```\nAlternatively, you can save workspace variables evaluated with gather directly to a MAT-file in the\ncurrent folder.\n```\n\n```\nsave(\"LOBVars.mat\",\"t\",\"S\",\"I\")\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 370,
      "word_count": 60,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1057",
    "content": "```\nsave(\"LOBVars.mat\",\"t\",\"S\",\"I\")\n```\n\nIn preparation for model validation later on, evaluate and add market order prices to the same file.",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 141,
      "word_count": 20,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_1058",
    "content": "In preparation for model validation later on, evaluate and add market order prices to the same file.\n\n```\n[MOBid,MOAsk] = gather(DTT.BidPrice1,DTT.AskPrice1);\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 162,
      "word_count": 22,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1059",
    "content": "```\n[MOBid,MOAsk] = gather(DTT.BidPrice1,DTT.AskPrice1);\n```\n\n```\nEvaluating tall expression using the Local MATLAB Session:\n- Pass 1 of 1: Completed in 4.1 sec\nEvaluation completed in 4.2 sec\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 196,
      "word_count": 29,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1060",
    "content": "```\nEvaluating tall expression using the Local MATLAB Session:\n- Pass 1 of 1: Completed in 4.1 sec\nEvaluation completed in 4.2 sec\n```\n\n```\nsave(\"LOBVars.mat\",\"MOBid\",\"MOAsk\",\"-append\")\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 189,
      "word_count": 27,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1061",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_1062",
    "content": "**2-54**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1063",
    "content": "<!-- Page 99 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      99
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 16,
      "word_count": 4,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1064",
    "content": "The remainder of this example uses only the unevaluated tall timetable DTT. Clear other variables\nfrom the workspace.",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "example",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 117,
      "word_count": 18,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_1065",
    "content": "```\nclearvars -except DTT \nwhos\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 35,
      "word_count": 6,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1066",
    "content": "```\nName            Size            Bytes  Class    Attributes\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 66,
      "word_count": 7,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_1067",
    "content": "```\nDTT       581,030x12             5056  tall\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 51,
      "word_count": 6,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_1068",
    "content": "**Data Visualization**\n\nTo visualize large amounts of data, you must summarize, bin, or sample the data in some way to\nreduce the number of points plotted on the screen.",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 169,
      "word_count": 29,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1069",
    "content": "To visualize large amounts of data, you must summarize, bin, or sample the data in some way to\nreduce the number of points plotted on the screen.\n\n**LOB Snapshot**\n\nOne method of visualization is to evaluate only a selected subsample of the data. Create a snapshot of\nthe LOB at a specific time of day (11 AM).",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 310,
      "word_count": 57,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1070",
    "content": "One method of visualization is to evaluate only a selected subsample of the data. Create a snapshot of\nthe LOB at a specific time of day (11 AM).\n\n```\nsampleTimeTarget = seconds(11*60*60);               % Seconds after midnight\nsampleTimes = withtol(sampleTimeTarget,seconds(1)); % 1 second tolerance\nsampleLOB = DTT(sampleTimes,:);\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 336,
      "word_count": 47,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1071",
    "content": "```\nsampleTimeTarget = seconds(11*60*60);               % Seconds after midnight\nsampleTimes = withtol(sampleTimeTarget,seconds(1)); % 1 second tolerance\nsampleLOB = DTT(sampleTimes,:);\n```\n\n```\nnumTimes = gather(size(sampleLOB,1))\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 235,
      "word_count": 24,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1072",
    "content": "```\nnumTimes = gather(size(sampleLOB,1))\n```\n\n```\nEvaluating tall expression using the Local MATLAB Session:\n- Pass 1 of 1: Completed in 4.1 sec\nEvaluation completed in 4.4 sec\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 180,
      "word_count": 29,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1073",
    "content": "```\nEvaluating tall expression using the Local MATLAB Session:\n- Pass 1 of 1: Completed in 4.1 sec\nEvaluation completed in 4.4 sec\n```\n\n```\nnumTimes = \n23\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 158,
      "word_count": 29,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1074",
    "content": "```\nnumTimes = \n23\n```\n\nThere are 23 ticks within one second of 11 AM. For the snapshot, use the tick closest to the midtime.\n\n```\nsampleLOB = sampleLOB(round(numTimes/2),:);\nsampleTime = sampleLOB.Time;\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 207,
      "word_count": 33,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1075",
    "content": "```\nsampleLOB = sampleLOB(round(numTimes/2),:);\nsampleTime = sampleLOB.Time;\n```\n\n```\nsampleBidPrices = [sampleLOB.BidPrice1,sampleLOB.BidPrice2,sampleLOB.BidPrice3];\nsampleBidSizes  = [sampleLOB.BidSize1,sampleLOB.BidSize2,sampleLOB.BidSize3];\nsampleAskPrices = [sampleLOB.AskPrice1,sampleLOB.AskPrice2,sampleLOB.AskPrice3];\nsampleAskSizes  = [sampleLOB.AskSize1,sampleLOB.AskSize2,sampleLOB.AskSize3];\n```\n\n```\n[sampleTime,sampleBidPrices,sampleBidSizes,sampleAskPrices,sampleAskSizes] = ...\n    gather(sampleTime,sampleBidPrices,sampleBidSizes,sampleAskPrices,sampleAskSizes);\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 583,
      "word_count": 28,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1076",
    "content": "```\n[sampleTime,sampleBidPrices,sampleBidSizes,sampleAskPrices,sampleAskSizes] = ...\n    gather(sampleTime,sampleBidPrices,sampleBidSizes,sampleAskPrices,sampleAskSizes);\n```\n\n```\nEvaluating tall expression using the Local MATLAB Session:\n- Pass 1 of 2: Completed in 3.7 sec\n- Pass 2 of 2: Completed in 4 sec\nEvaluation completed in 8.6 sec\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 344,
      "word_count": 39,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1077",
    "content": "```\nEvaluating tall expression using the Local MATLAB Session:\n- Pass 1 of 2: Completed in 3.7 sec\n- Pass 2 of 2: Completed in 4 sec\nEvaluation completed in 8.6 sec\n```\n\n```\nVisualize the limited data sample returned by gather by using bar.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 244,
      "word_count": 46,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1078",
    "content": "```\nVisualize the limited data sample returned by gather by using bar.\n```\n\n```\nfigure\nhold on\n```\n\n```\nbar((sampleBidPrices/10000),sampleBidSizes,'r')\nbar((sampleAskPrices/10000),sampleAskSizes,'g')\nhold off\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 212,
      "word_count": 24,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1079",
    "content": "```\nbar((sampleBidPrices/10000),sampleBidSizes,'r')\nbar((sampleAskPrices/10000),sampleAskSizes,'g')\nhold off\n```\n\nMachine Learning for Statistical Arbitrage I: Data Management and Visualization",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 193,
      "word_count": 16,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1080",
    "content": "Machine Learning for Statistical Arbitrage I: Data Management and Visualization\n\n**2-55**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 89,
      "word_count": 11,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1081",
    "content": "**2-55**\n\n<!-- Page 100 -->",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      100
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 27,
      "word_count": 5,
      "has_code": false,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1082",
    "content": "<!-- Page 100 -->\n\n```\nxlabel(\"Price (Dollars)\")\nylabel(\"Number of Shares\")\nlegend([\"Bid\",\"Ask\"],'Location','North')\ntitle(strcat(\"Level 3 Limit Order Book: \",datestr(sampleTime,\"HH:MM:SS\")))\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      100
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 195,
      "word_count": 18,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1083",
    "content": "```\nxlabel(\"Price (Dollars)\")\nylabel(\"Number of Shares\")\nlegend([\"Bid\",\"Ask\"],'Location','North')\ntitle(strcat(\"Level 3 Limit Order Book: \",datestr(sampleTime,\"HH:MM:SS\")))\n```\n\n**Depth of Market**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 197,
      "word_count": 17,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1084",
    "content": "**Depth of Market**\n\n```\nSome visualization functions work directly with tall arrays and do not require the use of gather (see\n\u201cVisualization of Tall Arrays\u201d). The functions automatically sample data to decrease pixel density.\nVisualize the level 3 intraday *depth of market*, which shows the time evolution of liquidity, by using\nplot with the tall timetable DTT.\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 368,
      "word_count": 58,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1085",
    "content": "```\nSome visualization functions work directly with tall arrays and do not require the use of gather (see\n\u201cVisualization of Tall Arrays\u201d). The functions automatically sample data to decrease pixel density.\nVisualize the level 3 intraday *depth of market*, which shows the time evolution of liquidity, by using\nplot with the tall timetable DTT.\n```\n\n```\nfigure\nhold on\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 371,
      "word_count": 60,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1086",
    "content": "```\nfigure\nhold on\n```\n\n```\nplot(DTT.Time,-DTT.BidSize1,'Color',[1.0 0 0],'LineWidth',2)\nplot(DTT.Time,-DTT.BidSize2,'Color',[0.8 0 0],'LineWidth',2)\nplot(DTT.Time,-DTT.BidSize3,'Color',[0.6 0 0],'LineWidth',2)\n```\n\n```\nplot(DTT.Time,DTT.AskSize1,'Color',[0 1.0 0],'LineWidth',2)\nplot(DTT.Time,DTT.AskSize2,'Color',[0 0.8 0],'LineWidth',2)\nplot(DTT.Time,DTT.AskSize3,'Color',[0 0.6 0],'LineWidth',2)\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 403,
      "word_count": 27,
      "has_code": true,
      "has_formula": true
    }
  },
  {
    "chunk_id": "md_chunk_1087",
    "content": "```\nplot(DTT.Time,DTT.AskSize1,'Color',[0 1.0 0],'LineWidth',2)\nplot(DTT.Time,DTT.AskSize2,'Color',[0 0.8 0],'LineWidth',2)\nplot(DTT.Time,DTT.AskSize3,'Color',[0 0.6 0],'LineWidth',2)\n```\n\n```\nhold off\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 205,
      "word_count": 15,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_1088",
    "content": "```\nhold off\n```\n\n```\nxlabel(\"Time\")\nylabel(\"Number of Shares\")\ntitle(\"Depth of Market: Intraday Evolution\")\nlegend([\"Bid1\",\"Bid2\",\"Bid3\",\"Ask1\",\"Ask2\",\"Ask3\"],'Location','NorthOutside','Orientation','Horiz\n```",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "code",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 210,
      "word_count": 16,
      "has_code": true,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_1089",
    "content": "Performing Common Financial Tasks",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 33,
      "word_count": 4,
      "has_code": false,
      "has_formula": false
    }
  },
  {
    "chunk_id": "md_chunk_1090",
    "content": "**2-56**",
    "section_title": "2",
    "section_hierarchy": [
      "2"
    ],
    "page_numbers": [
      0
    ],
    "chunk_type": "explanation",
    "related_elements": [],
    "metadata": {
      "section_level": 0,
      "char_count": 8,
      "word_count": 1,
      "has_code": false,
      "has_formula": true
    }
  }
]